[{"path":"https://sigven.github.io/pcgr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Sigve Nakken Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-1-0","dir":"Articles","previous_headings":"","what":"v1.1.0","title":"Changelog","text":"Date: 2022-10-XX Diff v1.1.0 v1.0.3","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changes","dir":"Articles","previous_headings":"v1.1.0","what":"Changes","title":"Changelog","text":"--no_docker --docker_uid CLI arguments now obsolete. --version CLI argument added pcgr/cpsr.py declutter repetitive log messages refactor pcgr/cpsr.py script Update documentation declutter logging; refactor dict creation (pr192) switch using Python’s native os.remove os.rename glob cleanup keep decompressed VCF --vcf2maf option specified. vcf2maf tool support compressed VCFs - see issue235. Fix CLI argument --cna_overlap_pct (pr196.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"new-contributors","dir":"Articles","previous_headings":"v1.1.0","what":"New Contributors","title":"Changelog","text":"@niklasmueboe (pr196.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-3","dir":"Articles","previous_headings":"","what":"v1.0.3","title":"Changelog","text":"Date: 2022-05-24","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed","dir":"Articles","previous_headings":"v1.0.3","what":"Fixed","title":"Changelog","text":"Bug clinical trials sorting, #191","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-2","dir":"Articles","previous_headings":"","what":"v1.0.2","title":"Changelog","text":"Date: 2022-03-30","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-1","dir":"Articles","previous_headings":"v1.0.2","what":"Fixed","title":"Changelog","text":"JSON output CPSR, #44","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-1","dir":"Articles","previous_headings":"","what":"v1.0.1","title":"Changelog","text":"Date: 2022-03-09","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-2","dir":"Articles","previous_headings":"v1.0.1","what":"Fixed","title":"Changelog","text":"exclusion intergenic intronic variants, exclusion upstream_gene/downstream_gene variants (variant set still 500,000 step ) Bug signature analysis cases input variant set fits > 18 different aetiologies.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-0","dir":"Articles","previous_headings":"","what":"v1.0.0","title":"Changelog","text":"Date: 2022-02-25 Data updates: ClinVar, GWAS catalog, GENCODE, CIViC, CancerMine, KEGG, ChEMBL, Open Targets Platform, Disease Ontology, Experimental Factor Ontology","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added","dir":"Articles","previous_headings":"v1.0.0","what":"Added","title":"Changelog","text":"--vep_gencode_all - use GENCODE transcripts VEP annotation (basic GENCODE set) --prevalence_reference_signatures - set minimum prevalence (percent) selection reference signatures included refitting procedure given tumor type","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed","dir":"Articles","previous_headings":"v1.0.0","what":"Changed","title":"Changelog","text":"Complete restructure Python R components.Installation now relies two separate conda packages, pcgr (Python component) pcgrr (R component). Direct Docker support remains, Dockerfile simplified rely exclusively installation Conda packages.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed","dir":"Articles","previous_headings":"v1.0.0","what":"Removed","title":"Changelog","text":"VCF validation step. Feedback users suggested Ensembl’s vcf-validator often stringent use deprecated. --no_vcf_validate option remains backwards compatibility.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-9-2","dir":"Articles","previous_headings":"","what":"v0.9.2","title":"Changelog","text":"Date: 2021-06-30 Data updates: ClinVar, GWAS catalog, CIViC, CancerMine, dbNSFP, KEGG, ChEMBL, Disease Ontology/EFO, Open Targets Platform, UniProt KB, GENCODE Software upgrades: R v4.1, Bioconductor v3.13, VEP (104) ++","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-1","dir":"Articles","previous_headings":"v0.9.2","what":"Changed","title":"Changelog","text":"NOTE: recommend turn --show_noncoding --vcf2maf (prevously turned default TOML). tumor-runs, recommend include --exclude_dbsnp_nonsomatic exclude_nonexonic","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-1","dir":"Articles","previous_headings":"v0.9.2","what":"Added","title":"Changelog","text":"--tumor_dp_tag --tumor_af_tag --control_dp_tag --control_af_tag --call_conf_tag --maf_onekg_eur --maf_onekg_amr --maf_onekg_afr --maf_onekg_eas --maf_onekg_sas --maf_onekg_global --maf_gnomad_nfe --maf_gnomad_asj --maf_gnomad_fin --maf_gnomad_oth --maf_gnomad_amr --maf_gnomad_afr --maf_gnomad_eas --maf_gnomad_sas --maf_gnomad_global --exclude_pon --exclude_likely_het_germline --exclude_likely_hom_germline --exclude_dbsnp_nonsomatic --exclude_nonexonic --report_theme --preserved_info_tags (previously custom_tags (TOML)) --show_noncoding (previously list_noncoding (TOML)) --vcfanno_n_proc (previously n_vcfanno_proc (TOML)) --vep_n_forks (previously n_vep_forks (TOML)) --vep_pick_order --vep_no_intergenic (previously vep_skip_intergenic (TOML)) --vcf2maf --report_nonfloating_toc (NEW) - add TOC top HTML report, floating left document --cpsr_report (NEW) - add dedicated section PCGR main germline findings CPSR analysis - (use gzipped JSON output CPSR input) --vep_regulatory (NEW) - append regulatory annotations variants (TF binding sites etc.) --include_artefact_signatures (NEW) - include sequencing artefacts reference collection mutational signatures (COSMIC v3.2)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-3","dir":"Articles","previous_headings":"v0.9.2","what":"Fixed","title":"Changelog","text":"Bug writing (large) report contents JSON (issue #118) Bug (typo) merge clinical evidence items different sources (CIVIC + CGI) (issue #126) Bug value box number (high-confident) kataegis events - rmarkdown (issue #122) Bug value box tumor purity/ploidy -rmarkdown (issue #129)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed-1","dir":"Articles","previous_headings":"v0.9.2","what":"Removed","title":"Changelog","text":"--conf - TOML-based configuration file","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-9-1","dir":"Articles","previous_headings":"","what":"v0.9.1","title":"Changelog","text":"Date: 2020-11-30 Data updates: ClinVar, GWAS catalog CIViC CancerMine dbNSFP KEGG ChEMBL/DGIdb Disease Ontology, Experimental Factor Ontology","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-2","dir":"Articles","previous_headings":"v0.9.1","what":"Added","title":"Changelog","text":"added possibility configure algorithm TMB calculation, optional argument tmb_algorithm - coding variants (all_coding) non-synonymous variants (nonsyn) R code subject static analysis lintr Improved Conda recipe (.e. meta.yaml) version pinning package dependencies","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-2","dir":"Articles","previous_headings":"v0.9.1","what":"Changed","title":"Changelog","text":"Removed DisGeNET annotations output (associations Open Targets Platform serve purpose) R packages necessary PCGR installed using renv framework, ensuring improved versioning reproducibility bedtools, samtools, numpy, cython, scipy, cyvcf2, toml, pandas","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-9-0rc","dir":"Articles","previous_headings":"","what":"v0.9.0rc","title":"Changelog","text":"Date: 2020-09-24 Data updates: ClinVar, GWAS catalog, GENCODE, CIViC, CancerMine, UniProt KB, dbNSFP, Pfam, KEGG, Open Targets Platform Software updates: VEP 101","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-4","dir":"Articles","previous_headings":"v0.9.0rc","what":"Fixed","title":"Changelog","text":"extra comma mistakenly present template tier 2 variants, issue #96 Missing protein domain annotations grch38, issue #116","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-3","dir":"Articles","previous_headings":"v0.9.0rc","what":"Changed","title":"Changelog","text":"arguments pcgr.py now non-positional Arguments pcgr.py divided two groups: required optional Options allelic_support:tumor_dp_min, allelic_support:tumor_af_min, allelic_support:control_dp_min, allelic_support:control_af_max PCGR configuration file now optional arguments --tumor_dp_min, --tumor_af_min, --control_dp_min, –control_af_maxincpsr.py` Option mutational_burden:mutational_burden PCGR configuration file now optional argument --estimate_tmb pcgr.py Option msi:msi PCGR configuration file now optional argument --estimate_msi_status pcgr.py Option mutational_signatures:mutational_signatures PCGR configuration file now optional argument --estimate_signatures pcgr.py Options mutational_signatures:mutsignatures_signature_limit, mutational_signatures:mutsignatures_normalization, mutational_signatures:mutsignatures_mutation_limit, mutational_signatures:mutsignatures_cutoff removed (used deconstructSigs analysis, longer use) Optional argument --cna_overlap_pct pcgr.py replaces cna:cna_overlap_pct PCGR configuration file Optional argument --logr_gain pcgr.py replaces cna:logr_gain PCGR configuration file Optional argument --logr_homdel pcgr.py replaces cna:logr_homdel PCGR configuration file Removed mutational_burden:tmb_low_limit mutational_burden:tmb_intermediate_limit - TMB longer interpreted context thresholds Classifications genes tumor suppressors/oncogenes now based combination CancerMine citation count presence Network Cancer Genes Metadata - sample sequencing assay Report configuration","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-3","dir":"Articles","previous_headings":"v0.9.0rc","what":"Added","title":"Changelog","text":"Optional argument --include_trials pcgr.py - includes section annotated clinical trials tumor type question Optional argument --assay pcgr.py - designates type sequencing assay Optional argument --cell_line pcgr.py - designates runs tumor cell lines (display, used configure analysis) Optional argument --min_mutations_signatures pcgr.py - minimum number required mutations mutational signature analysis MutationalPatterns Optional argument --all_reference_signatures pcgr.py - considers reference signatures fitting mutational profile known signatures Optional argument --estimate_signatures now also includes detection potential kataegis events (WGS/WES assays ), rainfall plot flexdashboard output user can now distinguish (color codes) whether biomarker mapped exactly (nucleotide change) regional level (codon/exon) variant-associated biomarkers (regardless assignment TIER 1/2) now found new section (SNVs/InDels) copy number amplifications, putative drug targets cancer listed new section Detailed documentation report contents added Documentation section References updated provided DOI","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-4","dir":"Articles","previous_headings":"","what":"v0.8.4","title":"Changelog","text":"Date: 2019-11-18 Data updates: ClinVar, CIViC, CancerMine, UniProt KB Software updates: VEP 98.3","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-3","dir":"Articles","previous_headings":"","what":"v0.8.3","title":"Changelog","text":"Date: 2019-10-14 Data updates: ClinVar, GWAS catalog, GENCODE, CIViC, CancerMine Software updates: VEP 98.2, vcf2tsv","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-5","dir":"Articles","previous_headings":"v0.8.3","what":"Fixed","title":"Changelog","text":"improved mapping Ensembl transcripts UniProt accessions (using also RefSeq accessions available)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-4","dir":"Articles","previous_headings":"v0.8.3","what":"Added","title":"Changelog","text":"Possibility filter evidence items RATING interactive data tables","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-4","dir":"Articles","previous_headings":"v0.8.3","what":"Changed","title":"Changelog","text":"Option target_size_mb pcgr.py replaces target_size_mb configuration file, convenient terms configuring runs Option tumor_type pcgr.py replaces tumor_type configuration file","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-2","dir":"Articles","previous_headings":"","what":"v0.8.2","title":"Changelog","text":"Date: 2019-09-29 Data updates: ClinVar, GWAS catalog, GENCODE, DiseaseOntology, CIViC, CancerMine, UniProt KB Software updates: VEP 97.3, vcfanno 0.3.2, LOFTEE (VEP plugin) 1.0.3","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-6","dir":"Articles","previous_headings":"v0.8.2","what":"Fixed","title":"Changelog","text":"Bug concatenation clinical evidence items different sources (CIVIC + CBMDB) (issues #83,#87) Silent variants coincide biomarkers reported codon level ignored Distinction clinical evidence items different origins (somatic + germline) Improved mapping Ensembl transcripts UniProt accessions (using also RefSeq accessions available) Bug UpSetPlot cases filtering produce less two intersecting sets","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-5","dir":"Articles","previous_headings":"v0.8.2","what":"Added","title":"Changelog","text":"New field ‘mane’ criteria pick order configuration file (VEP) Sample identifier copy number annotation output (convenient concatenation output multiple samples) Capturing allelic depth (t_depth, t_ref_count etc.) vcf2maf output (enhancement #52) Option tumor_only pcgr.py, replaces vcf_tumor_only configuration file, convenient terms configuration","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-1","dir":"Articles","previous_headings":"","what":"v0.8.1","title":"Changelog","text":"Date: 2019-05-22","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-6","dir":"Articles","previous_headings":"v0.8.1","what":"Added","title":"Changelog","text":"Cancer_NOS.toml configuration file unspecified tumor types","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-0","dir":"Articles","previous_headings":"","what":"v0.8.0","title":"Changelog","text":"Date: 2019-05-20","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-7","dir":"Articles","previous_headings":"v0.8.0","what":"Fixed","title":"Changelog","text":"Bug value box Tier 2 variants (new line carriage) Issue #73","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-7","dir":"Articles","previous_headings":"v0.8.0","what":"Added","title":"Changelog","text":"Skipping –regulatory VEP option avoid forking issues improve speed (See issue) Added option configure pick-order choice primary transcript configuration file Pre-made configuration files tumor type conf folder Possibility append CNA plot file (.png format) section report Somatic CNAs previous feature request shown value boxes Main results Default target size now 34Mb (approx. estimate exome-wide calculation protein-coding parts GENCODE) exclude_likely_hom_germline - removes variant allelic fraction 1 (100%) - unlikely somatic event allelic fraction 0.4 0.6, presence dbSNP + gnomAD, presence somatic event COSMIC/TCGA variants tumor coincide variant listed PANEL--NORMALS VCF appended PANEL_OF_NORMALS flag query VCF tumor variants. configuration parameter exclude_pon set True tumor_only runs, variants PANEL_OF_NORMALS flag filtered/excluded tumor-runs, added UpSet plot showing different filtering sources (gnomAD, 1KG Project, panel--normals etc) contribute germline filtering procedure Variants Tier 3 / Tier 4 / Noncoding now sorted (color-coded) according target (gene) association score cancer phenotype, provided OpenTargets Platform Added annotation TCGA’s ten oncogenic signaling pathways exonic denotes protein-altering cannonical splicesite altering synonymous variants, nonexonic denotes complement coding denotes protein-altering cannonical splicesite altering, noncoding denotes complement Official gene symbol NCBI EntreZ (SYMBOL provided VEP can sometimes non-official/alias (.e. GENCODE v19/grch37)) Variant overlaps UCSC simpleRepeat sequence repeat track - used MSI prediction Variant overlaps UCSC windowmaskerSdust sequence repeat track - used MSI prediction Putative cancer driver mutation discovered multiple approaches 9,423 tumor exomes TCGA. Format: symbol:hgvsp:ensembl_transcript_id:discovery_approaches Associations protein targets disease based multiple lines evidence (mutations,affected pathways,GWAS, literature etc). Format: CUI:EFO_ID:IS_DIRECT:OVERALL_SCORE Confidence existence modulator (small molecule) interacts target (protein) elicit desired biological effect Confidence existence modulator (antibody) interacts target (protein) elicit desired biological effect Rating ClinVar variant (0-4 stars) respect level review","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-5","dir":"Articles","previous_headings":"v0.8.0","what":"Changed","title":"Changelog","text":"Moved IntoGen’s driver mutation resource TCGA’s putative driver mutation list display driver mutation status Moved option vcf_validation configuration file run script (--no_vcf_validate)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed-2","dir":"Articles","previous_headings":"v0.8.0","what":"Removed","title":"Changelog","text":"Original tier model ‘pcgr’","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-7-0","dir":"Articles","previous_headings":"","what":"v0.7.0","title":"Changelog","text":"Date: 2018-11-27","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-8","dir":"Articles","previous_headings":"v0.7.0","what":"Fixed","title":"Changelog","text":"Bug assignment variants tier1/tier2 Issue #61 Missing config option maf_gnomad_asj TOML file (also setting operator <=) Issue #60 Bug new CancerMine oncogene/tumor suppressor annotation Issue #53 vcfanno fix empty Description (upgrade vcfanno v0.3.1 Issue #49) Bug message showing variants MSI prediction, Issue #55 Still unsolved: disambiguate identical FORMAT INFO tags vcf2tsv Bug SCNA value box display multiple copy number hits (Issue #47) Bug vcf2tsv (handling INFO tags encoded ‘Type = String’, Issue #39) Bug search UniProt functional features (BED feature regions spanning exons now handled) Stripped HTML elements (TCGA_FREQUENCY, DBSNP) TSV output effect predictions dbNSFP properly parsed (e.g. multiple prediction entries multiple transcript isoforms), now retrieved correctly Removed ‘COSM’ prefix COSMIC mutation links Bug retrieval splice site predictions dbscSNV","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-8","dir":"Articles","previous_headings":"v0.7.0","what":"Added","title":"Changelog","text":"Added possibility add docker user-id Possibility MAF file output (converted vcf2maf), must configured user TOML file (.e. vcf2maf = true, Issue #17) Possibility adding custom VCF INFO tags PCGR output files (JSON/TSV), must configured user TOML file (.e. custom_tags) Added MUTATION_HOTSPOT_CANCERTYPE data tables (.e. listing tumor types hotspot mutations found) Included ‘rs’ prefix dbSNP identifiers (HTML TSV output) Individual algorithms: SIFT_DBNSFP, M_CAP_DBNSFP, MUTPRED_DBNSFP, MUTATIONTASTER_DBNSFP, MUTATIONASSESSOR_DBNSFP, FATHMM_DBNSFP, FATHMM_MKL_DBNSFP, PROVEAN_DBNSFP Ensemble predictions (META_LR_DBNSFP), dbscSNV splice site predictions (SPLICE_SITE_RF_DBNSFP, SPLICE_SITE_ADA_DBNSFP) Upgraded samtools v1.9 (makes vcf2maf work properly) Added Ensembl gene/transcript id corresponding RefSeq mRNA id TSV/JSON SeqKat + karyoploteR exploration kataegis/hypermutation CELLector - genomics-guided selection cancer cell lines Upgraded VEP v94","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-6","dir":"Articles","previous_headings":"v0.7.0","what":"Changed","title":"Changelog","text":"Changed CANCER_MUTATION_HOTSPOT MUTATION_HOTSPOT minimum n=3 citations required include literatured-mined tumor suppressor genes proto-oncogenes CancerMine","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-2-1","dir":"Articles","previous_headings":"","what":"v0.6.2.1","title":"Changelog","text":"Date: 2018-05-14","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-9","dir":"Articles","previous_headings":"v0.6.2.1","what":"Fixed","title":"Changelog","text":"Bug copy number annotation (broad/focal)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-2","dir":"Articles","previous_headings":"","what":"v0.6.2","title":"Changelog","text":"Date: 2018-05-09","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-10","dir":"Articles","previous_headings":"v0.6.2","what":"Fixed","title":"Changelog","text":"Bug copy number segment display (missing variable initalization, Issue #34)) Typo gnomAD filter statistic (fraction, Issue #31) Bug mutational signature analysis grch38 (forgot pass BSgenome object, Issue #27) Missing proper ASCII-encoding vcf2tsv conversion, Issue # Removed ‘Noncoding mutations’ section input VCF present Bug annotation copy number event type (focal/broad) Bug copy number annotation (missing protein-coding transcripts) Updated MSI prediction (variable importance, performance measures)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-9","dir":"Articles","previous_headings":"v0.6.2","what":"Added","title":"Changelog","text":"Genome assembly appended every output file Issue warning copy number segment goes beyond chromosomal lengths specified assembly (segments skipped) Added missing subtypes ‘Skin_Cancer_NOS’ cancer phenotype dataset","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-1","dir":"Articles","previous_headings":"","what":"v0.6.1","title":"Changelog","text":"Date: 2018-05-02","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-11","dir":"Articles","previous_headings":"v0.6.1","what":"Fixed","title":"Changelog","text":"Bug tier assignment ‘pcgr_acmg’ (case variants tier1,2,3) Bug tier assignment ‘pcgr_acmg’ (tumor type specified, evidence items weak support detected) Bug: duplicated variants ‘Tier 3’ resulting genes encoded dual roles tumor suppressor genes/oncogenes Bug: duplicated variants ‘Tier 1/Noncoding variants’ resulting rare cases noncoding variants occurring Tier 1 (synonymous variants biomarker role)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-0","dir":"Articles","previous_headings":"","what":"v0.6.0","title":"Changelog","text":"Date: 2018-04-25","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-10","dir":"Articles","previous_headings":"v0.6.0","what":"Added","title":"Changelog","text":"assembly (grch37/grch38) –basic - run comprehensive VCF annotation , skip report generation additional analyses Settings annotation sources - now also listing key PCGR configuration settings Main findings - Six value boxes indicating main findings clinical relevance tier_model(string) - choice pcgr_acmg pcgr tmb_low_limit (float) tmb_intermediate_limit (float) Adrenal_Gland_Cancer_NOS (logical) Ampullary_Carcinoma_NOS (logical) Biliary_Tract_Cancer_NOS (logical) Bladder_Urinary_Tract_Cancer_NOS (logical) Blood_Cancer_NOS (logical) Bone_Cancer_NOS (logical) Breast_Cancer_NOS (logical) CNS_Brain_Cancer_NOS (logical) Colorectal_Cancer_NOS (logical) Cervical_Cancer_NOS (logical) Esophageal_Stomach_Cancer_NOS (logical) Head_And_Neck_Cancer_NOS (logical) Hereditary_Cancer_NOS (logical) Kidney_Cancer_NOS (logical) Leukemia_NOS (logical) Liver_Cancer_NOS (logical) Lung_Cancer_NOS (logical) Lymphoma_Hodgkin_NOS (logical) Lymphoma_Non_Hodgkin_NOS (logical) Ovarian_Fallopian_Tube_Cancer_NOS (logical) Pancreatic_Cancer_NOS (logical) Penile_Cancer_NOS (logical) Peripheral_Nervous_System_Cancer_NOS (logical) Peritoneal_Cancer_NOS (logical) Pleural_Cancer_NOS (logical) Prostate_Cancer_NOS (logical) Skin_Cancer_NOS (logical) Soft_Tissue_Cancer_NOS (logical) Stomach_Cancer_NOS (logical) Testicular_Cancer_NOS (logical) Thymic_Cancer_NOS (logical) Thyroid_Cancer_NOS (logical) Uterine_Cancer_NOS (logical) Vulvar_Vaginal_Cancer_NOS (logical) mutsignatures_cutoff (float) - discard signature contributions weight less cutoff transcript_cna_overlap (float) - minimum percent overlap copy number segment transcripts (average) tumor suppressor gene/proto-oncogene reported tumor_dp_min (integer) - minimum sequencing depth variant tumor sample tumor_af_min (float) - minimum allelic fraction variant tumor sample normal_dp_min (integer) - minimum sequencing depth variant normal sample normal_af_max (float) - maximum allelic fraction variant normal sample report_theme (string) - visual theme report (Bootstrap) vcf_validation (logical) - keep/skip VCF validation vcf-validator New output file - JSON output HTML report content CANCER_PREDISPOSITION PFAM_DOMAIN TCGA_FREQUENCY TCGA_PANCANCER_COUNT ICGC_PCAWG_OCCURRENCE ICGC_PCAWG_AFFECTED_DONORS CLINVAR_MEDGEN_CUI CANCER_PREDISPOSITION ICGC_PCAWG_OCCURRENCE TCGA_FREQUENCY TRANSCRIPTS - aberration-overlapping transcripts (Ensembl transcript IDs) MEAN_TRANSCRIPT_CNA_OVERLAP - Mean overlap (%) betweeen gene transcripts aberration segment","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed-3","dir":"Articles","previous_headings":"v0.6.0","what":"Removed","title":"Changelog","text":"dbsnp gnomad/exac 1000G project DBSNPBUILDID DBSNP_VALIDATION DBSNP_SUBMISSIONS DBSNP_MAPPINGSTATUS GWAS_CATALOG_PMID GWAS_CATALOG_TRAIT_URI DOCM_DISEASE Data can still retrieved - now JSON dump previous MAF output generated custom fashion, accurate MAF output based https://github.com/mskcc/vcf2maf incorporated next release","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-7","dir":"Articles","previous_headings":"v0.6.0","what":"Changed","title":"Changelog","text":"Tier statistics Variant statistics now grouped section Tier variant statistics Tier 5 now Noncoding mutations (.e. considered tier per se) Sliders allelic fraction Global variant browser now fixed 0 1 (0.05 intervals)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"basic-variant-consequence-annotation","dir":"Articles","previous_headings":"","what":"Basic variant consequence annotation","title":"Annotation resources","text":"VEP - Variant Effect Predictor release 105 (GENCODE v39 gene reference database (v19 grch37))","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"insilico-predictions-of-effect-of-coding-variants","dir":"Articles","previous_headings":"","what":"Insilico predictions of effect of coding variants","title":"Annotation resources","text":"dBNSFP - database non-synonymous functional predictions (v4.2, March 2021)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"variant-frequency-databases","dir":"Articles","previous_headings":"","what":"Variant frequency databases","title":"Annotation resources","text":"gnomAD - germline variant frequencies exome-wide (r2.1, October 2018) dbSNP - database short genetic variants (build 154) Cancer Hotspots - resource statistically significant mutations cancer (v2, 2017) TCGA - somatic mutations discovered across 33 tumor type cohorts (release 31.0, October 2021) ICGC-PCAWG - ICGC Pancancer Analysis Whole Genomes - (release 28, March 17th, 2019)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"variant-databases-of-clinical-utility","dir":"Articles","previous_headings":"","what":"Variant databases of clinical utility","title":"Annotation resources","text":"ClinVar - database clinically related variants (February 2022) DoCM - database curated mutations (v3.2, April 2016) CIViC - clinical interpretations variants cancer (February 1st 2022) CGI - Cancer Genome Interpreter Cancer Biomarkers Database (CGI) (January 17th 2018) ChEMBL - database drugs, drug-like small molecules targets (ChEMBL_28, February 2021)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"protein-domainsfunctional-features","dir":"Articles","previous_headings":"","what":"Protein domains/functional features","title":"Annotation resources","text":"UniProt/SwissProt KnowledgeBase - resource protein sequence functional information (2021_04, November 2021) Pfam - database protein families domains (v35.0, November 2021)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"knowledge-resources-on-gene-and-protein-targets","dir":"Articles","previous_headings":"","what":"Knowledge resources on gene and protein targets","title":"Annotation resources","text":"CancerMine - Literature-mined database tumor suppressor genes/proto-oncogenes (v42, December 2021) Open Targets Platform - Database disease-target associations, molecularly targeted drugs tractability aggregated multiple sources (literature, pathways, mutations) (2021.11) TCGA driver genes - predicted cancer driver genes based application multiple driver gene prediction tools TCGA pan-cancer cohort","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"pathway-databases","dir":"Articles","previous_headings":"","what":"Pathway databases","title":"Annotation resources","text":"KEGG PATHWAY Database - December 21st 2021 Oncogenic Signaling Pathways - TCGA - Sanchez-Vega et al., Cell, 2018","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"genome-mapping","dir":"Articles","previous_headings":"Notes on variant annotation datasets","what":"Genome mapping","title":"Annotation resources","text":"requirement PCGR variant annotation datasets variants mapped unambiguously reference human genome. datasets requirement issue (.e. dbSNP, ClinVar etc.). fraction variants annotation datasets related clinical interpretation, CIViC CBMDB, however mapped genome. Whenever possible, utilized TransVar identify actual genomic variants (e.g. g.chr7:140453136A>T) correspond variants reported amino acid level HGVS nomenclature (e.g. p.V600E). variants mapped specific build (GRCh37/GRCh38), utilized crossmap package lift datasets build.","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"data-quality","dir":"Articles","previous_headings":"Notes on variant annotation datasets","what":"Data quality","title":"Annotation resources","text":"Clinical biomarkers Clinical biomarkers included PCGR limited following: Evidence items specific markers CIViC must accepted (submitted evidence items considered) Markers reported variant level (e.g. BRAF p.V600E) Markers reported codon level (e.g. KRAS p.G12) Markers reported exon level (e.g. KIT exon 11 mutation) Within Cancer bioMarkers database (CGI), markers collected FDA/NCCN guidelines, scientific literature, clinical trials included (markers collected conference abstracts etc. included) Copy number gains/losses See also comment closed GitHib issue IMPORTANT NOTE: variant consequence reported CIViC may deviate reported PCGR. PCGR picks variant consequence according VEP’s pick option (depending ranked list criteria can configured user), particular transcript consequence may differ reported literature. Molecularly targeted drugs targeted drugs extracted Open Targets Platform, distinguish drugs late clinical development (phase 3-4), versus early clinical development (phase 1-2). Gene-disease associations Phenotype associations Open Targets Platform assembled variety different data sources. Target-disease associations included PCGR must supported least two distinct sources weakest associations, defined association score < 0.4 (scale 0 1), ommitted done within Open Targets Platform, association scores (genes) represented varying shades blue: darker blue, stronger association. Variant hits tier 3/4 noncoding section arranged according association score. several disease subtypes associated gene, maximum association score chosen. Tumor suppressor genes/proto-oncogenes Five publications biomedical literature suggests oncogenic/tumor suppressor role given gene (collected CancerMine text-mining resource), least two publications CancerMine suggests oncogenic/tumor suppressor role given gene existing record gene tumor suppressor/oncogene Network Cancer Genes (NCG) Status oncogene ignored given gene three times much (literature evidence) support role tumor suppressor gene (vice versa) Oncogenes/tumor suppressor candidates CancerMine/NCG found curated list false positive cancer drivers compiled Bailey et al. (Cell, 2018) excluded TCGA somatic calls TCGA employs four different variant callers detection somatic variants (SNVs/InDels): mutect2, varscan2, somaticsniper muse. TCGA dataset bundled PCGR, somatic SNVs restricted detected least two independent callers (.e. calls found single algorithm considered low-confident disregarded)","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input files","title":"Input files","text":"PCGR workflow accepts two main input files: unannotated, single-sample VCF file (>= v4.2) called somatic variants (SNVs/InDels) copy number segment file input VCF required input file, somatic copy number file optional. following arguments pcgr command used input files: --input_vcf (required argument pcgr) --input_cna addition two main input files, user can also opt provide panel--normals VCF file, well CPSR report (JSON), input.","code":""},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"vcf","dir":"Articles","previous_headings":"Input files","what":"VCF","title":"Input files","text":"strongly recommend input VCF compressed indexed using bgzip tabix input VCF contains multi-allelic sites, subject decomposition. Either way, encourage users prepare input VCF without presence multi-allelic sites. Variants used reporting designated PASS VCF FILTER column. Variants denoted e.g. Reject FILTER value subject analysis PCGR. records undefined values FILTER column ('.'), considered PASS variants.","code":""},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"formatting-of-allelic-depthsupport-dpad","dir":"Articles","previous_headings":"Input files > VCF","what":"Formatting of allelic depth/support (DP/AD)","title":"Input files","text":"representation variant genotype data (allelic depth support tumor vs. control sample) usually formatted genotype fields VCF file, per-sample basis. However, considering VCF output numerous somatic SNV/InDel callers use, experienced general lack uniformity information encoded genotype fields. order PCGR recognize type information robustly, currently require encode unambiguously INFO field VCF file. Shown VCF header entries look like input VCF, corresponding variant data encoded per record: VCF header VCF records run PCGR, make sure feed name INFO tags tool, .e. using tumor_dp_tagand tumor_af_tag options: effort support users procedure, currently trying establish VCF pre-processing script, accepts VCF (caller), ensure file adheres formatting requirements PCGR. See also issue.","code":"##INFO=<ID=TVAF,Number=.,Type=Float,Description=\"Allelic fraction of alternative allele in tumor\"> ##INFO=<ID=TDP,Number=.,Type=Integer,Description=\"Read depth across variant site in tumor\"> #CHROM  POS ID  REF ALT QUAL    FILTER  INFO 1       23519660        .       G       C       .       PASS    TVAF=0.0980;TDP=51 pcgr --tumor_dp_tag TDP --tumor_af_tag TVAF"},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"other-notes-regarding-input-vcf","dir":"Articles","previous_headings":"Input files > VCF","what":"Other notes regarding input VCF","title":"Input files","text":"PCGR generates number VCF INFO annotation tags appended query VCF. therefore encourage users submit query VCF files subject annotations means, rather VCF file comes directly variant calling. , likely INFO tags query VCF file coincide produced PCGR. Note can preserve particular tags INFO field towards TSV output PCGR. Sometimes, can convenient investigate particular properties variants (encoded VCF) functional annotations (provided PCGR). achieve , use option --preserved_info_tags <TAG1>,<TAG2> etc.","code":""},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"panel-of-normals-pon-vcf","dir":"Articles","previous_headings":"Input files","what":"Panel-of-normals (PON) VCF","title":"Input files","text":"user can submit panel--normals VCF file PCGR, indicating variants excluded/filtered input VCF tumor-setting (.e. option --tumor_only). --pon_vcf <VCF_FILE> panel--normals VCF file needs contain following. following description needs present VCF header: ##INFO=<ID=PANEL_OF_NORMALS,Number=0,Type=Flag,Description=\"Overlap germline call among panel normals\"> record panel--normals VCF file needs contain PANEL_OF_NORMALS flag INFO field","code":""},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"copy-number-segments","dir":"Articles","previous_headings":"Input files","what":"Copy number segments","title":"Input files","text":"tab-separated values file copy number aberrations MUST contain following four columns: Chromosome Start End Segment_Mean , Chromosome, Start, End denote chromosomal segment, Segment_Mean denotes log(2) ratio particular segment, common output somatic copy number alteration callers. Note coordinates must one-based (.e. chromosomes start 1, 0). shows initial part copy number segment file formatted correctly according PCGR’s requirements: Importantly, can configure predefined log(2) thresholds segments considered high-level copy-number amplifications homozygous deletions, following options: --logr_gain (minimum log(2) value segment considered amplification, default 0.8) --logr_homdel (maximum log(2) value segment considered homozygous deletion, default -0.8)","code":"Chromosome    Start   End Segment_Mean   1 3218329 3550598 0.0024   1 3552451 4593614 0.1995   1 4593663 6433129 -1.0277"},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"cpsr-report","dir":"Articles","previous_headings":"Input files","what":"CPSR report","title":"Input files","text":"One may feed output cancer predisposition analysis CPSR (https://github.com/sigven/cpsr) PCGR --cpsr_report option. result dedicated germline section PCGR report. Note one input compressed JSON file output CPSR.","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"conda","dir":"Articles","previous_headings":"Quick Installation","what":"Conda","title":"Installation","text":"know conda , need run following commands order install PCGR software requirements:","code":"PCGR_VERSION=\"1.1.0\" PCGR_REPO=\"https://raw.githubusercontent.com/sigven/pcgr/v${PCGR_VERSION}/conda/env/lock/\" PLATFORM=\"linux\" # or \"osx\"  # mamba is a much faster alternative to conda conda install mamba -c conda-forge  mamba create --file ${PCGR_REPO}/pcgr-${PLATFORM}-64.lock --prefix ./pcgr mamba create --file ${PCGR_REPO}/pcgrr-${PLATFORM}-64.lock --prefix ./pcgrr  # you need to specify the directory of the conda env when using --prefix conda activate ./pcgr  # test that it works pcgr --version"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"data","dir":"Articles","previous_headings":"Quick Installation","what":"Data","title":"Installation","text":"downloading data bundle, see STEP 1 .","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"docker","dir":"Articles","previous_headings":"Quick Installation","what":"Docker","title":"Installation","text":"know Docker , instead using conda method can jump straight PCGR Docker setup section.","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"detailed-installation","dir":"Articles","previous_headings":"","what":"Detailed Installation","title":"Installation","text":"PCGR requires data bundle contains reference data, sample inputs (e.g. somatic variants VCF), output directory output results . ’s example scenario used following sections: data bundle downloaded /Users//dir1/data; sample inputs /Users//dir2/pcgr_inputs; output goes /Users//dir3/pcgr_outputs (make sure directory exists); PCGR codebase installed /Users//dir4/PCGR;","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"step-1-download-data-bundle","dir":"Articles","previous_headings":"Detailed Installation","what":"STEP 1: Download data bundle","title":"Installation","text":"Download unpack human assembly-specific data bundle: grch37 data bundle - 20220203 (approx 20Gb) grch38 data bundle - 20220203 (approx 21Gb) Example:","code":"GENOME=\"grch38\" # or \"grch37\" BUNDLE_VERSION=\"20220203\" BUNDLE=\"pcgr.databundle.${GENOME}.${BUNDLE_VERSION}.tgz\"  wget http://insilico.hpc.uio.no/pcgr/${BUNDLE} gzip -dc ${BUNDLE} | tar xvf -"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"step-2-download-pcgr-github-repository","dir":"Articles","previous_headings":"Detailed Installation","what":"STEP 2: Download PCGR GitHub repository","title":"Installation","text":"Download unpack latest software release https://github.com/sigven/pcgr/releases. Alternatively git installed, can : Note --depth 1 option ensures clone specific version, entire git history repo.","code":"PCGR_VERSION=\"1.1.0\" OUTPUT_DIRECTORY=\"PCGR\"  git clone \\     -b \"v${PCGR_VERSION}\" \\     --depth 1 \\     https://github.com/sigven/pcgr.git \\     \"${OUTPUT_DIRECTORY}\""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"step-3-set-up-conda-or-docker","dir":"Articles","previous_headings":"Detailed Installation","what":"STEP 3: Set up Conda or Docker","title":"Installation","text":"Step 3 depends want use Conda Docker: Conda, continue reading PCGR Conda setup. Docker, skip PCGR Docker setup.","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"a-miniconda-and-mamba","dir":"Articles","previous_headings":"Detailed Installation > Option 1: Conda","what":"a) Miniconda and Mamba","title":"Installation","text":"Download install Miniconda installer https://docs.conda.io/en/latest/miniconda.html: Make sure download Linux MacOSX script according platform ’re currently . Run bash miniconda.sh follow prompts (okay accept defaults, unless want choose different installation location default ~/miniconda3). Exit current terminal session open new one. now notice something like (base) string prefix terminal prompt. means ’re base conda environment, ’re ready start installing conda environments PCGR. Install Mamba base environment, fast conda package installer.","code":"PLATFORM=\"MacOSX\" # or \"Linux\" MINICONDA_URL=\"https://repo.continuum.io/miniconda/Miniconda3-latest-${PLATFORM}-x86_64.sh\" wget ${MINICONDA_URL} -O miniconda.sh && chmod +x miniconda.sh bash miniconda.sh # exit terminal and open new one - you should now see: (base) $ (base) $ conda install -c conda-forge mamba  (base) $ mamba --version mamba 0.19.1 conda 4.11.0"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"b-create-pcgr-conda-environments","dir":"Articles","previous_headings":"Detailed Installation > Option 1: Conda","what":"b) Create PCGR conda environments","title":"Installation","text":"conda/env/lock directory PCGR codebase contains two .lock files can used create required conda environments Python component (pcgr) R components (pcgrr (cpsr)). install conda dependencies two environments local conda/env directory following example: process takes 10-15min installing scratch. end, can confirm conda environments installed correctly (notice paths different base env installation using --prefix option ):","code":"cd /Users/you/dir4/PCGR PLATFORM=\"osx-64\" # or \"linux-64\" PCGR_CONDA_ENV_DIR=\"./conda/env\"  mamba create --prefix ${PCGR_CONDA_ENV_DIR}/pcgr --file ${PCGR_CONDA_ENV_DIR}/lock/pcgr-${PLATFORM}.lock mamba create --prefix ${PCGR_CONDA_ENV_DIR}/pcgrr --file ${PCGR_CONDA_ENV_DIR}/lock/pcgrr-${PLATFORM}.lock  ## Alternatively, for installing in your central conda directory, use the following: # mamba create --name pcgr --file ${PCGR_CONDA_ENV_DIR}/lock/pcgr-${PLATFORM}.lock # mamba create --name pcgrr --file ${PCGR_CONDA_ENV_DIR}/lock/pcgrr-${PLATFORM}.lock  ## For MacOS M1, you need to have 'CONDA_SUBDIR=osx-64' before the mamba command, i.e.: # CONDA_SUBDIR=osx-64 mamba create --prefix [...] --file [...] ## See https://github.com/conda-forge/miniforge/issues/165#issuecomment-860233092 $ (base) conda env list # conda environments: # base    *  /Users/you/miniconda3 pcgr       /Users/you/dir4/PCGR/conda/env/pcgr pcgrr      /Users/you/dir4/PCGR/conda/env/pcgrr"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"c-activate-pcgr-conda-environment","dir":"Articles","previous_headings":"Detailed Installation > Option 1: Conda","what":"c) Activate pcgr conda environment","title":"Installation","text":"need activate PCGR/conda/env/pcgr conda environment, test works correctly e.g. pcgr --version: now set run PCGR! Continue example run.","code":"$ cd /Users/you/dir4/PCGR (base) $ conda activate ./conda/env/pcgr # note how the full path to the locally installed conda environment is now displayed  (/Users/you/dir4/PCGR) $ which pcgr /Users/you/dir4/PCGR/conda/env/pcgr/bin/pcgr  (/Users/you/dir4/PCGR) $ pcgr --version pcgr X.X.X  (/Users/you/dir4/PCGR) $ which pcgrr.R /Users/you/dir4/PCGR/conda/env/pcgr/bin/pcgrr.R"},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"a-install-docker","dir":"Articles","previous_headings":"Detailed Installation > Option 2: Docker","what":"a) Install Docker","title":"Installation","text":"installing Docker, follow instructions https://docs.docker.com/engine/install/ Linux MacOSX machine. NOTE: able perform enough testing Windows platform, received feedback particular versions Docker/Windows work PCGR (example mounting data volumes). Test Docker running, e.g. typing docker ps docker images terminal window. Adjust computing resources dedicated Docker, .e.: Memory minimum 5GB, CPUs minimum 4 (see e.g. MacOSX).","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"b-download-pcgr-docker-image","dir":"Articles","previous_headings":"Detailed Installation > Option 2: Docker","what":"b) Download PCGR Docker Image","title":"Installation","text":"Pull PCGR Docker image DockerHub (approx 5.7Gb) : docker pull sigven/pcgr:vX.X.X","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"c-run-pcgr-docker-container","dir":"Articles","previous_headings":"Detailed Installation > Option 2: Docker","what":"c) Run PCGR Docker Container","title":"Installation","text":"familiar working Docker volumes (https://docs.docker.com/storage/volumes/) can run PCGR using Docker instead conda using -v <host>:<container> Docker option. ’ll need map PCGR inputs Docker container paths. example, say input VCF sampleX.vcf.gz stored directory /Users//project1. need supply Docker --volume (-v) option mapping directory VCF directory inside Docker container, e.g. /home/input_vcf_dir. become: -v /Users//project1:/home/input_vcf_dir (note : separating directory container’s directory). command look something like : Note path mappings. ’re using container paths command, host (machine’s) paths.","code":"docker container run -it --rm \\     -v /Users/you/dir1/data:/root/pcgr_data \\     -v /Users/you/dir2/pcgr_inputs:/root/pcgr_inputs \\     -v /Users/you/dir3/pcgr_outputs:/root/pcgr_outputs \\     sigven/pcgr:1.1.0 \\     pcgr \\       --input_vcf \"/root/pcgr_inputs/tumor_sample.BRCA.vcf.gz\" \\       --pcgr_dir \"/root/pcgr_data\" \\       --output_dir \"/root/pcgr_outputs\" \\       --genome_assembly \"grch38\" \\       --sample_id \"SampleB\" \\       --assay \"WGS\" \\       --vcf2maf"},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"output-files","dir":"Articles","previous_headings":"","what":"Output files","title":"Output files","text":"PCGR generates multiple output files, including interactive HTML reports pure variant annotation files (tab-separated values (TSV)).","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"html-report---dashboard","dir":"Articles","previous_headings":"Output files","what":"HTML report - dashboard","title":"Output files","text":"interactive tier-structured HTML report (dashboard-like) shows relevant findings query cancer genome following naming convention: sample_id provided input user, reflects unique identifier tumor-normal sample pair analyzed.","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"html-report---rmarkdown","dir":"Articles","previous_headings":"Output files","what":"HTML report - rmarkdown","title":"Output files","text":"interactive tier-structured HTML report shows relevant findings query cancer genome following naming convention: sample_id provided input user, reflects unique identifier tumor-normal sample pair analyzed. report structured seven main sections, described detail : Lists key configurations provided user Tumor purity - provided user Tumor ploidy - provided user Mutational signatures - two prevalent signatures (aging) Tier 1 variants (top four) Tier 2 variants (top four) Tumor mutational burden (TMB) Microsatellite instability (MSI) status Somatic copy number aberrations clinical significance Kataegis events given coding target region size specified user (ideally callable target size), estimate mutational burden provided estimated TMB shown context TMB distributions different primary sites TCGA indicate total variant numbers across variant types, coding types tiers distribution (histogram) variant allelic support somatic variants (present report specific fields input VCF defined specified user) permits exploration whole SNV/InDel dataset filtering along several dimensions (call confidence, variant sequencing depth/support, variant consequence etc.) Variants organized five (tier 1-4 + noncoding) interactive datatables) according clinical utility Contents tier tables outlined Based user-defined/default log-ratio thresholds gains/losses, whole CNA dataset can navigated filters: cytoband type CNA event - focal (less 25% chromosome arm affected) broad log ratio Datatable listing known proto-oncogenes covered user-defined/default amplifications potential targeted therapies Datatable listing known tumor suppressor genes covered user-defined/default losses potential targeted therapies drug targets subject copy number aplifications Interactive data table user can navigate aberrations acting biomarkers across therapeutic contexts, tumor subtypes, evidence levels etc Indicates predicted microsatellite stability somatic mutation profile supporting evidence (details underlying MSI statistical classifier can found ) MSI classifier trained TCGA exome samples. Estimation relative contribution 67 known mutational signatures tumor sample (using MutationalPatterns underlying framework) Datatable signatures proposed underlying etiologies Detection potential kataegis events using algorithm outlined Kataegis Portal Main findings CPSR report Interactive table annotated, molecularly targeted clinical trials clinicaltrials.gov relevant tumor type Annotation resources - software, databases tools version information Report content References - supporting scientific literature (key report elements)","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"interactive-datatables","dir":"Articles","previous_headings":"Output files > HTML report - rmarkdown","what":"Interactive datatables","title":"Output files","text":"interactive datatables contain number hyperlinked annotations similar defined annotated VCF file, including following:","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"example-reports","dir":"Articles","previous_headings":"Output files > HTML report - rmarkdown","what":"Example reports","title":"Output files","text":"HTML reports tested using following browsers: Safari (Version 14.1.1 (16611.2.7.1.4)) Mozilla Firefox (83.0) Google Chrome (Version 90.0.4430.212 (Official Build) (x86_64))","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"json","dir":"Articles","previous_headings":"Output files","what":"JSON","title":"Output files","text":"compressed JSON file stores essential content report provided. file easen process extracting particular parts report analysis integration workflows. JSON contains two main objects, metadata content, former contains information settings, data versions, latter contains various sections report.","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"variant-call-format---vcf","dir":"Articles","previous_headings":"Output files > SNVs/InDels","what":"1. Variant call format - VCF","title":"Output files","text":"VCF file containing annotated, somatic calls (single nucleotide variants insertion/deletions) generated following naming convention: sample_id provided input user, reflects unique identifier tumor-normal sample pair analyzed. Following common standards, annotated VCF file compressed bgzip indexed tabix. follows description annotations/tags present VCF INFO column processing PCGR annotation pipeline:","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"tab-separated-values-tsv","dir":"Articles","previous_headings":"Output files > SNVs/InDels","what":"2. Tab-separated values (TSV)","title":"Output files","text":"provide tab-separated values file important annotations SNVs/InDels. file following naming convention: <sample_id>.pcgr_acmg.<genome_assembly>.snvs_indels.tiers.tsv SNVs/InDels organized different tiers (defined HTML report) following variables included tiered TSV file (VCF tags issued user (--preserved_info_tags) appended end):","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"mutational-signature-contributions","dir":"Articles","previous_headings":"Output files > SNVs/InDels","what":"3. Mutational signature contributions","title":"Output files","text":"provide tab-separated values file information mutational signatures detected tumor sample. file following naming convention: <sample_id>.pcgr_acmg.<genome_assembly>.mutational_signatures.tsv format TSV file following:","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"tab-separated-values-tsv-1","dir":"Articles","previous_headings":"Output files > Copy number aberrations","what":"1. Tab-separated values (TSV)","title":"Output files","text":"Copy number segments intersected genomic coordinates transcripts GENCODE’s basic gene annotation. addition, PCGR attaches cancer-relevant annotations affected transcripts. naming convention compressed TSV file follows: NOTE: file organized according affected transcripts (.e. one line/record per affected transcript). format compressed TSV file following:","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"key-settings","dir":"Articles","previous_headings":"","what":"Key settings","title":"Running","text":", outline key settings important respect sequencing assay conducted.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"whole-genome-whole-exome-or-targeted-sequencing-assay","dir":"Articles","previous_headings":"Key settings","what":"Whole-genome, whole-exome or targeted sequencing assay","title":"Running","text":"default, PCGR expects input VCF comes whole-exome sequencing. can adjusted assay option, takes three alternative values: --assay <WGS|WES|TARGETED> input VCF comes targeted sequencing assay/panel (.e. --assay TARGETED), target size assay/panel adjusted accordingly, critical tumor mutational burden estimation. Assay target size, reflecting protein-coding portion assayed genomic region megabases, can configured following option: --target_size_mb <value>","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"tumor-control-vs--tumor-only","dir":"Articles","previous_headings":"Key settings","what":"Tumor-control vs. tumor-only","title":"Running","text":"default, PCGR expects input VCF contains somatic variants identified tumor-control sequencing setup. implies VCF contains information respect variant allelic depth/support tumor sample corresponding control sample. input VCF comes tumor-assay, turn --tumor_only option. mode, PCGR conducts set successive filtering steps raw input set variants, aiming exclude majority germline variants tumor-input set. addition default filtering applied variants found gnomAD/1000 Genomes Project databases (population-specific allele frequency thresholds can configured, see ), additional filtering procedures can explicitly set, .e.: --exclude_dbsnp_nonsomatic (recommended) --exclude_likely_het_germline --exclude_likely_hom_germline --exclude_nonexonic user provided panel--normals VCF file input(--pon_vcf), one may also opt remove variants found variant collection using dedicated option: --exclude_pon IMPORTANT NOTE 1: Note number analyses available PCGR particularly well-suited tumor-input, e.g. mutational signature analysis MSI status prediction. IMPORTANT NOTE 2: run PCGR tumor-WGS assays, strongly recommend pre-filter VCF exome, since frequently encountered large unfiltered variant set assays cause crash PCGR. See also issue.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"sample-properties","dir":"Articles","previous_headings":"Key settings","what":"Sample properties","title":"Running","text":"properties tumor sample can fed report, currently used display/reporting: --tumor_ploidy <value> - ploidy estimate --tumor_purity <value> - purity estimate --cell_line - cell line sample","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"allelic-support","dir":"Articles","previous_headings":"Key settings","what":"Allelic support","title":"Running","text":"Proper designation INFO tags input VCF denote variant depth/allelic fraction critical make report comprehensive possible. See input section accomplish . Several options used inform PCGR tags VCF INFO field encodes information: --tumor_dp_tag <value> --tumor_af_tag <value> --control_dp_tag <value> --control_af_tag <value> --call_conf_tag <value> tags set correctly, one may set thresholds (sequencing depth /allelic fraction) variants included report, .e. : --tumor_dp_min <value> --tumor_af_min <value> --control_dp_min <value> --control_af_max <value>","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"tumor-site","dir":"Articles","previous_headings":"Key settings","what":"Tumor site","title":"Running","text":"primary tissue/site tumor sample analyzed can provided, following option: --tumor_site <value> option takes value 0 30, reflecting main primary sites/tissues human cancers. Note default value 0 (implies tissue/site), essentially prohibits presence tier 1 variants occurring report. want check nature cancer subtypes attributed primary tissue/sites, take look table phenotype terms associated primary sites.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"large-input-sets-vcf","dir":"Articles","previous_headings":"Key settings","what":"Large input sets (VCF)","title":"Running","text":"input VCF files > 500,000 variants, note subject filtering prior final step PCGR (step 4: reporting). scenarios, raw input sets filtered according consequence type, sense intergenic/intronic/upstream/downstream gene variants excluded prior reporting. necessary step avoid memory issues etc. processing PCGR R package. large input VCF, sufficient memory capacity compute platform, also recommend increase VEP buffer size (option --vep_buffer_size), speed VEP processing significantly.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"all-options","dir":"Articles","previous_headings":"","what":"All options","title":"Running","text":"tumor sample report generated running pcgr command, takes following arguments options:","code":"usage:     pcgr -h [options]     --input_vcf <INPUT_VCF>     --pcgr_dir <PCGR_DIR>     --output_dir <OUTPUT_DIR>     --genome_assembly <GENOME_ASSEMBLY>     --sample_id <SAMPLE_ID>  Personal Cancer Genome Reporter (PCGR) workflow for clinical interpretation of somatic nucleotide variants and copy number aberration segments  Required arguments:   --input_vcf INPUT_VCF - VCF input file with somatic variants in tumor sample, SNVs/InDels   --pcgr_dir PCGR_DIR - PCGR base directory with accompanying data directory, e.g. ~/pcgr-0.9.4   --output_dir OUTPUT_DIR - Output directory   --genome_assembly {grch37,grch38} - Human genome assembly build: grch37 or grch38   --sample_id SAMPLE_ID - Tumor sample/cancer genome identifier - prefix for output files  vcfanno options:   --vcfanno_n_proc VCFANNO_N_PROC - Number of vcfanno processes (option '-p' in vcfanno), default: 4  VEP options:   --vep_n_forks VEP_N_FORKS - Number of forks (option '--fork' in VEP), default: 4   --vep_buffer_size VEP_BUFFER_SIZE - Variant buffer size (variants read into memory simultaneously, option '--buffer_size' in VEP)                                       set lower to reduce memory usage, default: 100   --vep_pick_order VEP_PICK_ORDER - Comma-separated string of ordered transcript/variant properties for selection of primary variant consequence                                     (option '--pick_order' in VEP), default: canonical,appris,biotype,ccds,rank,tsl,length,mane   --vep_no_intergenic   - Skip intergenic variants during processing (option '--no_intergenic' in VEP), default: False   --vep_regulatory      - Add VEP regulatory annotations (option '--regulatory' )or non-coding interpretation, default: False   --vep_gencode_all     - Consider all GENCODE transcripts with Variant Effect Predictor (VEP) (option '--gencode_basic' in VEP is used by default in PCGR) default: False  Tumor mutational burden (TMB) and MSI options:   --target_size_mb TARGET_SIZE_MB - For mutational burden analysis - approximate protein-coding target size in Mb of sequencing assay (default: 34 (WES/WGS))   --estimate_tmb        - Estimate tumor mutational burden from the total number of somatic mutations and target region size, default: False   --estimate_msi_status - Predict microsatellite instability status from patterns of somatic mutations/indels, default: False   --tmb_algorithm {all_coding,nonsyn} - Method for calculation of TMB, all coding variants (Chalmers et al., Genome Medicine, 2017), or non-synonymous variants only, default: all_coding  Mutational signature options:   --estimate_signatures - Estimate relative contributions of reference mutational signatures in query sample and detect potential kataegis events, default: False   --min_mutations_signatures MIN_MUTATIONS_SIGNATURES - Minimum number of SNVs required for reconstruction of mutational signatures (SBS) by MutationalPatterns (default: 200, minimum n = 100)   --all_reference_signatures - Use all reference mutational signatures (SBS, n = 67) in signature reconstruction rather than only those already attributed to the tumor type (default: False)   --include_artefact_signatures - Include sequencing artefacts in the collection of reference signatures (default: False   --prevalence_reference_signatures {1,2,5,10,15,20} - Minimum tumor-type prevalence (in percent) of reference signatures to be included in refitting procedure (default: 5)  Tumor-only options:   --tumor_only          - Input VCF comes from tumor-only sequencing, calls will be filtered for variants of germline origin, (default: False)   --cell_line           - Input VCF comes from tumor cell line sequencing (requires --tumor_only), calls will be filtered for variants of germline origin, (default: False)   --pon_vcf PON_VCF     - VCF file with germline calls from Panel of Normals (PON) - i.e. blacklisted variants, (default: None)   --maf_onekg_eur MAF_ONEKG_EUR - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - European pop, default: 0.002)   --maf_onekg_amr MAF_ONEKG_AMR - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - Ad Mixed American pop, default: 0.002)   --maf_onekg_afr MAF_ONEKG_AFR - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - African pop, default: 0.002)   --maf_onekg_eas MAF_ONEKG_EAS - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - East Asian pop, default: 0.002)   --maf_onekg_sas MAF_ONEKG_SAS - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - South Asian pop, default: 0.002)   --maf_onekg_global MAF_ONEKG_GLOBAL - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold (1000 Genomes Project - global pop, default: 0.002)   --maf_gnomad_nfe MAF_GNOMAD_NFE - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - European (non-Finnish), default: 0.002)   --maf_gnomad_asj MAF_GNOMAD_ASJ - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - Ashkenazi Jewish, default: 0.002)   --maf_gnomad_fin MAF_GNOMAD_FIN - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - European (Finnish), default: 0.002)   --maf_gnomad_oth MAF_GNOMAD_OTH - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - Other, default: 0.002)   --maf_gnomad_amr MAF_GNOMAD_AMR - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - Latino/Admixed American, default: 0.002)   --maf_gnomad_afr MAF_GNOMAD_AFR - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - African/African-American, default: 0.002)   --maf_gnomad_eas MAF_GNOMAD_EAS - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - East Asian, default: 0.002)   --maf_gnomad_sas MAF_GNOMAD_SAS - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - South Asian, default: 0.002)   --maf_gnomad_global MAF_GNOMAD_GLOBAL - Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF above the given percent threshold, (gnomAD - global population, default: 0.002)   --exclude_pon        - Exclude variants occurring in PoN (Panel of Normals, if provided as VCF (--pon_vcf), default: False)   --exclude_likely_hom_germline - Exclude likely homozygous germline variants (100 pct allelic fraction for alternate allele in tumor, very unlikely somatic event, default: False)   --exclude_likely_het_germline - Exclude likely heterozygous germline variants (40-60 pct allelic fraction, AND presence in dbSNP + gnomAD, AND not existing as somatic event in COSMIC/TCGA, default: False)   --exclude_dbsnp_nonsomatic - Exclude variants found in dbSNP (only those that are NOT found in ClinVar(somatic origin)/DoCM/TCGA/COSMIC, defult: False)   --exclude_nonexonic - Exclude non-exonic variants, default: False)  Allelic support options:   --tumor_dp_tag TUMOR_DP_TAG - Specify VCF INFO tag for sequencing depth (tumor, must be Type=Integer, default: _NA_   --tumor_af_tag TUMOR_AF_TAG - Specify VCF INFO tag for variant allelic fraction (tumor,  must be Type=Float, default: _NA_   --control_dp_tag CONTROL_DP_TAG - Specify VCF INFO tag for sequencing depth (control, must be Type=Integer, default: _NA_   --control_af_tag CONTROL_AF_TAG - Specify VCF INFO tag for variant allelic fraction (control, must be Type=Float, default: _NA_   --call_conf_tag CALL_CONF_TAG - Specify VCF INFO tag for somatic variant call confidence (must be categorical, e.g. Type=String, default: _NA_   --tumor_dp_min TUMOR_DP_MIN - If VCF INFO tag for sequencing depth (tumor) is specified and found, set minimum required depth for inclusion in report (default: 0)   --tumor_af_min TUMOR_AF_MIN - If VCF INFO tag for variant allelic fraction (tumor) is specified and found, set minimum required AF for inclusion in report (default: 0)   --control_dp_min CONTROL_DP_MIN - If VCF INFO tag for sequencing depth (control) is specified and found, set minimum required depth for inclusion in report (default: 0)   --control_af_max CONTROL_AF_MAX - If VCF INFO tag for variant allelic fraction (control) is specified and found, set maximum tolerated AF for inclusion in report (default: 1)  Other options:   --input_cna INPUT_CNA - Somatic copy number alteration segments (tab-separated values)   --logr_gain LOGR_GAIN - Log ratio-threshold (minimum) for segments containing copy number gains/amplifications (default: 0.8)   --logr_homdel LOGR_HOMDEL - Log ratio-threshold (maximum) for segments containing homozygous deletions (default: -0.8)   --cna_overlap_pct CNA_OVERLAP_PCT - Mean percent overlap between copy number segment and gene transcripts for reporting of gains/losses in tumor suppressor genes/oncogenes, (default: 50)   --tumor_site TSITE  - Optional integer code to specify primary tumor type/site of query sample, choose any of the following identifiers:                         0 = Any, 1 = Adrenal Gland, 2 = Ampulla of Vater, 3 = Biliary Tract, 4 = Bladder/Urinary Tract, 5 = Bone, 6 = Breast, 7 = Cervix, 8 = CNS/Brain, 9 = Colon/Rectum, 10 = Esophagus/Stomach,                         11 = Eye, 12 = Head and Neck, 13 = Kidney, 14 = Liver, 15 = Lung, 16 = Lymphoid, 17 = Myeloid, 18 = Ovary/Fallopian Tube, 19 = Pancreas, 20 = Peripheral Nervous System,                         21 = Peritoneum, 22 = Pleura, 23 = Prostate, 24 = Skin, 25 = Soft Tissue, 26 = Testis, 27 = Thymus, 28 = Thyroid, 29 = Uterus, 30 = Vulva/Vagina,                         (default: 0 - any tumor type)   --tumor_purity TUMOR_PURITY - Estimated tumor purity (between 0 and 1, (default: None)   --tumor_ploidy TUMOR_PLOIDY - Estimated tumor ploidy (default: None)   --cpsr_report CPSR_REPORT - CPSR report file (Gzipped JSON - file ending with 'cpsr.<genome_assembly>.json.gz' -  germline report of patient's blood/control sample   --vcf2maf             Generate a MAF file for input VCF using https://github.com/mskcc/vcf2maf (default: False)   --show_noncoding      List non-coding (i.e. non protein-altering) variants in report, default: False   --assay {WES,WGS,TARGETED} - Type of DNA sequencing assay performed for input data (VCF) default: WES   --include_trials      (Beta) Include relevant ongoing or future clinical trials, focusing on studies with molecularly targeted interventions   --preserved_info_tags PRESERVED_INFO_TAGS Comma-separated string of VCF INFO tags from query VCF that should be kept in PCGR output TSV file   --report_theme {default,cerulean,journal,flatly,readable,spacelab,united,cosmo,lumen,paper,sandstone,simplex,yeti} - Visual report theme (rmarkdown)   --report_nonfloating_toc - Do not float the table of contents (TOC) in output report (rmarkdown), default: False   --force_overwrite     By default, the script will fail with an error if any output file already exists. You can force the overwrite of existing result files by using this flag, default: False   --version             show program's version number and exit   --basic               Run functional variant annotation on VCF through VEP/vcfanno, omit other analyses (i.e. Tier assignment/MSI/TMB/Signatures etc. and report generation (STEP 4), default: False   --no_vcf_validate     Skip validation of input VCF with Ensembl's vcf-validator, default: False   --docker_uid DOCKER_USER_ID - Docker user ID. default is the host system user ID. If you are experiencing permission errors, try setting this up to root (`--docker-uid root`)   --no_docker           Run the PCGR workflow in a non-Docker mode (see install_no_docker/ folder for instructions)   --debug               Print full Docker commands to log, default: False"},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"example-run","dir":"Articles","previous_headings":"","what":"Example run","title":"Running","text":"examples folder contains input VCF files two tumor samples sequenced within TCGA (GRCh37 ). report colorectal tumor case can generated running following command terminal window: command run Conda-based PCGR workflow produce following output files examples folder: tumor_sample.COAD.pcgr_acmg.grch37.html - interactive HTML report clinical interpretation (rmarkdown) tumor_sample.COAD.pcgr_acmg.grch37.flexdb.html - interactive HTML report clinical interpretation (flexdashboard) tumor_sample.COAD.pcgr_acmg.grch37.vcf.gz (.tbi) - Bgzipped VCF file rich set annotations precision oncology tumor_sample.COAD.pcgr_acmg.grch37.pass.vcf.gz (.tbi) - Bgzipped VCF file rich set annotations precision oncology (PASS variants ) tumor_sample.COAD.pcgr_acmg.grch37.pass.tsv.gz - Compressed vcf2tsv-converted file rich set annotations precision oncology tumor_sample.COAD.pcgr_acmg.grch37.snvs_indels.tiers.tsv - Tab-separated values file variants organized according tiers functional relevance tumor_sample.COAD.pcgr_acmg.grch37.mutational_signatures.tsv - Tab-separated values file information contribution mutational signatures tumor_sample.COAD.pcgr_acmg.grch37.json.gz - Compressed JSON dump HTML report content tumor_sample.COAD.pcgr_acmg.grch37.cna_segments.tsv.gz - Compressed tab-separated values file annotations gene transcripts overlap somatic copy number aberrations tumor_sample.COAD.pcgr_config.rds - PCGR configuration object (RDS format), mostly debugging purposes","code":"$ (base) conda activate pcgr $ (pcgr) pcgr \\     --pcgr_dir /Users/you/dir2/data \\     --output_dir /Users/you/dir3/pcgr_outputs \\     --sample_id tumor_sample.COAD \\     --tumor_dp_tag TDP \\     --tumor_af_tag TVAF \\     --call_conf_tag TAL \\     --genome_assembly grch37 \\     --input_vcf /Users/you/pcgr/examples/tumor_sample.COAD.vcf.gz \\     --tumor_site 9 \\     --input_cna /Users/you/pcgr/examples/tumor_sample.COAD.cna.tsv \\     --tumor_purity 0.9 \\     --tumor_ploidy 2.0 \\     --include_trials \\     --assay WES \\     --estimate_signatures \\     --estimate_msi_status \\     --estimate_tmb \\     --no_docker \\     --force_overwrite"},{"path":"https://sigven.github.io/pcgr/articles/variant_classification.html","id":"tier-models","dir":"Articles","previous_headings":"","what":"Tier models","title":"Variant classification","text":"PCGR performs variant classification, meaning variants organized prioritized according clinical impact. Currently, PCGR implements tier classsification framework along proposed ACMG guidelines, detailed .","code":""},{"path":"https://sigven.github.io/pcgr/articles/variant_classification.html","id":"pcgr_acmg","dir":"Articles","previous_headings":"Tier models","what":"pcgr_acmg","title":"Variant classification","text":"tier model attempts adopt concensus recommendations ACMG, outlined Li et al., 2017: : found within tumor type/class specified user, B: strong clinical evidence (.e. part guidelines, validated discovered late clinical trials) : strong clinical evidence tumor types/classes one specified user, B: weak clinical evidence (early trials, case reports etc.) tumor type/class specified user Tier 3: Variants uncertain clinical significance - includes coding variants found oncogenes tumor suppressor genes Tier 4 - includes coding variants copy number aberrations, aberrations linked Tier 1 & 2 displayed, within following sections HTML report: Copy number aberrations biomarkers: Aberrations strong clinical significance (Tier 1) Copy number aberrations biomarkers: Aberrations potential clinical significance (Tier 2)","code":""},{"path":"https://sigven.github.io/pcgr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sigve Nakken. Author, maintainer. Peter Diakumis. Author, contributor.","code":""},{"path":"https://sigven.github.io/pcgr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sigve Nakken, Ghislain Fournous, Daniel Vodák, Lars Birger Aaasheim, Ola Myklebost, Eivind Hovig. Personal Cancer Genome Reporter: variant interpretation report precision oncology (2017). Bioinformatics. 34(10):1778–1780. doi:10.1093/bioinformatics/btx817","code":"@Article{,   title = {Personal Cancer Genome Reporter: variant interpretation report for precision oncology},   author = {Sigve Nakken and Ghislain Fournous and Daniel Vodák and Lars Birger Aasheim and Ola Myklebost and Eivind Hovig},   journal = {Bioinformatics},   year = {2017},   month = {12},   volume = {34},   number = {10},   pages = {1778-1780},   url = {https://doi.org/10.1093/bioinformatics/btx817}, }"},{"path":"https://sigven.github.io/pcgr/index.html","id":"personal-cancer-genome-reporter-","dir":"","previous_headings":"","what":"Personal Cancer Genome ReporteR","title":"Personal Cancer Genome ReporteR","text":"Personal Cancer Genome Reporter (PCGR) stand-alone software package functional annotation translation individual tumor genomes precision cancer medicine. interprets somatic SNVs/InDels copy number aberrations. software extends basic gene variant annotations Ensembl’s Variant Effect Predictor (VEP) oncology-relevant, --date annotations retrieved flexibly vcfanno. Variants classified tiers clinical significance. Interactive HTML output reports allow user interrogate clinical impact molecular findings individual tumor. Example views dashboard HTML output:  PCGR originates Norwegian Cancer Genomics Consortium (NCGC), Institute Cancer Research, Oslo University Hospital, Norway.","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"example-reports","dir":"","previous_headings":"","what":"Example reports","title":"Personal Cancer Genome ReporteR","text":"Cervical cancer sample (tumor-control) Stomach cancer sample (tumor-control) Breast cancer sample (tumor-) (view rmarkdown-based reports, simply remove .flexdb. file names flexdashboard reports)","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"why-use-pcgr","dir":"","previous_headings":"","what":"Why use PCGR?","title":"Personal Cancer Genome ReporteR","text":"great complexity acquired mutations individual tumor genomes poses severe challenge clinical interpretation. PCGR aims comprehensive reporting platform can systematically interrogate tumor-specific variants context known therapeutic prognostic biomarkers prioritize highlight relevant findings present results format accessible clinical experts PCGR integrates comprehensive set knowledge resources related tumor biology therapeutic biomarkers, gene, variant level. software generates tiered genome report aid translation individual cancer genomes novel treatment strategies.","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Personal Cancer Genome ReporteR","text":"Installation instructions Run example Learn Details regarding PCGR input files, formatted Configuration key settings types contents PCGR output files Variant tier system implemented PCGR Primary tumor sites used PCGR list gene variant annotation resources available PCGR Frequenty asked questions (FAQ)","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Personal Cancer Genome ReporteR","text":"use PCGR, please cite publication: Sigve Nakken, Ghislain Fournous, Daniel Vodák, Lars Birger Aaasheim, Ola Myklebost, Eivind Hovig. Personal Cancer Genome Reporter: variant interpretation report precision oncology (2017). Bioinformatics. 34(10):1778–1780. doi.org/10.1093/bioinformatics/btx817","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Personal Cancer Genome ReporteR","text":"sigven@ifi.uio.","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_annotation_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","title":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"Function appends multiple HTML annotation links variant identifiers e.g. COSMIC, CLINVAR, REFSEQ etc","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_annotation_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"","code":"append_annotation_links(vcf_data_df, skip = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/append_annotation_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends multiple HTML annotation links to variant identifiers\ne.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"vcf_data_df data frame variant entries skip elements ignored annotation","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbmts_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"Function adds miRNA target annotations (dbMTS) genetic variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbmts_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"","code":"append_dbmts_var_link(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/append_dbmts_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"var_df data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"Function assigns HTML links dbNSFP prediction entries","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"","code":"append_dbnsfp_var_link(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"var_df data frame variant entries","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"var_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_drug_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","title":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","text":"Function adds HTML links different genetic variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_drug_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","text":"","code":"append_drug_var_link(var_df, pcgr_data = NULL, linktype = \"dbsource\")"},{"path":"https://sigven.github.io/pcgr/reference/append_drug_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds HTML links to different genetic variant identifiers — append_drug_var_link","text":"var_df data frame variants pcgr_data PCGR data structure linktype type link","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"Function adds GWAS citation/phenotype GWAS hit found PCGR annotation","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"","code":"append_gwas_citation_phenotype(   vcf_data_df = NULL,   gwas_citations_phenotypes = NULL,   p_value_threshold = 0.000001 )"},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"vcf_data_df Data frame sample variants VCF gwas_citations_phenotypes data frame variant-phenotype associations (including citations) GWAS p_value_threshold Required p-value report associations GWAS catalog","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"vcf_data_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_otargets_pheno_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","title":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","text":"Function adds HTML links different genetic variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_otargets_pheno_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","text":"","code":"append_otargets_pheno_link(   var_df,   pcgr_data = NULL,   oncotree = NULL,   linktype = \"dbsource\" )"},{"path":"https://sigven.github.io/pcgr/reference/append_otargets_pheno_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds HTML links to different genetic variant identifiers — append_otargets_pheno_link","text":"var_df data frame variants pcgr_data PCGR data structure oncotree Oncotree data frame linktype type link","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_pfeature_descriptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"Function adds SwissProt feature descriptions based key identifiers coming PCGR pipeline","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_pfeature_descriptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"","code":"append_pfeature_descriptions(vcf_data_df, feature_descriptions)"},{"path":"https://sigven.github.io/pcgr/reference/append_pfeature_descriptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"vcf_data_df Data frame sample variants VCF feature_descriptions Data frame SwissProt feature descriptions","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_pfeature_descriptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds SwissProt feature descriptions based on\nkey identifiers coming from PCGR pipeline — append_pfeature_descriptions","text":"vcf_data_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_read_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"Function adds read support (depth, allelic fraction) tumor normal filters according settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_read_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"","code":"append_read_support(vcf_df, config = NULL, precision = 3)"},{"path":"https://sigven.github.io/pcgr/reference/append_read_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"vcf_df data frame variants config list workflow configuration values precision number significant digits allelic fraction estimation","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_read_support.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds read support (depth, allelic fraction) for\ntumor and normal and filters according to settings — append_read_support","text":"vcf_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"Function adds TCGA annotations (cohort, frequency etc.) variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"","code":"append_tcga_var_link(var_df, pcgr_data = NULL, linktype = \"dbsource\")"},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"var_df data frame variants pcgr_data PCGR data structure linktype type link","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"var_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tfbs_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"Function adds TFBS annotations (dbMTS) genetic variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tfbs_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"","code":"append_tfbs_annotation(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/append_tfbs_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"var_df data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_ucsc_segment_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"Function appends link UCSC genomic segment","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_ucsc_segment_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"","code":"append_ucsc_segment_link(   var_df,   hgname = \"hg38\",   chrom = NULL,   start = NULL,   end = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/append_ucsc_segment_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"var_df data frame genomic variants hgname name genoome assembly ('hg38','hg19') chrom chromosome name start chromosome start coordinate end chromosome end coordinate","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_ucsc_segment_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that appends a link to UCSC for a genomic segment — append_ucsc_segment_link","text":"var_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"Function sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED TRUE variants population frequency exceeds max_tolerated_af","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"","code":"assign_germline_popfreq_status(   sample_calls,   pop = \"EUR\",   dbquery = \"1KG\",   max_tolerated_af = 0.01 )"},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"sample_calls data frame variants pop population code (1000 Genomes/gnomAD) dbquery 1KG gnomAD max_tolerated_af max tolerated germline allele frequency","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/\nSTATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants\nif any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"sample_calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"Function assigns one six mutation types list mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"","code":"assign_mutation_type(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"var_df data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"var_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"Function assigns SOMATIC_CLASSIFICATION variants based evidence found variant set, potentially limited user-defined options","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"","code":"assign_somatic_classification(sample_calls, config)"},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"sample_calls data frame variants config configuration object","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants\nbased on evidence found in variant set,\npotentially limited by user-defined options — assign_somatic_classification","text":"sample_calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"Function appends several tags denoting evidence somatic/germline status variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"","code":"assign_somatic_germline_evidence(sample_calls, config)"},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"sample_calls data frame variants config configuration object","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that appends several tags denoting\nevidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"sample_calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"Function assigns evidence items SNVs/InDels ACMG tiers 1 2","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"","code":"assign_tier1_tier2_acmg(pcg_report_snv_indel)"},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"pcg_report_snv_indel report object snv/indels","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns evidence items for SNVs/InDels to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg","text":"pcg_report_snv_indel data frame report elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"Function assigns evidence items SCNAs ACMG tiers 1 2","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"","code":"assign_tier1_tier2_acmg_cna(pcg_report_cna)"},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"pcg_report_cna report object CNAs","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_tier1_tier2_acmg_cna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns evidence items for SCNAs to ACMG tiers 1 and 2 — assign_tier1_tier2_acmg_cna","text":"pcg_report_cna data frame report elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"Regular expression terms indicative cancer-related phenotypes syndromes","code":""},{"path":"https://sigven.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"","code":"cancer_phenotypes_regex"},{"path":"https://sigven.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"long regular expression cancer-related phenotype terms","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"Function checks whether set column names present two different data frames","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"","code":"check_common_colnames(df1 = NULL, df2 = NULL, cnames = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"df1 data frame 1 df2 data frame 2 cnames character vector column names check presence","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that checks whether a set of column names are present in two\ndifferent data frames — check_common_colnames","text":"existing_common_columns T/F","code":""},{"path":"https://sigven.github.io/pcgr/reference/clinvar_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","text":"Function assigns logical STATUS_CLINVAR_GERMLINE based whether ClinVar entry germline origin found given variant (entries data frame)","code":""},{"path":"https://sigven.github.io/pcgr/reference/clinvar_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","text":"","code":"clinvar_germline_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/clinvar_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on\nwhether a ClinVar entry of germline origin is found for a given variant\n(for entries in a data frame) — clinvar_germline_status","text":"sample_calls data frame sample calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Color encodings for report elements of PCGR/CPSR — color_palette","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"Color encodings report elements PCGR/CPSR","code":""},{"path":"https://sigven.github.io/pcgr/reference/color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"","code":"color_palette"},{"path":"https://sigven.github.io/pcgr/reference/color_palette.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"list object different report elements color-coded PCGR/CPSR reports. list element two vectors: 'levels' 'values'. Currently, following list elements included: pathogenicity - Colors five-level pathogenicity levels (CPSR) clinical_evidence - Colors strength evidence cancer-variant associations (-E) tier - Colors tier levels variant prioritization (PCGR) report_color - Colors PCGR assay mode (tumor-control vs. tumor-) warning - Color warning (low confidence PCGR analysis output) success - Color success (evident uncertainty PCGR analysis output)","code":""},{"path":"https://sigven.github.io/pcgr/reference/cosmic_somatic_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"Function assigns logical (STATUS_COSMIC) reflecting whether variant co-incides entry COSMIC (germline)","code":""},{"path":"https://sigven.github.io/pcgr/reference/cosmic_somatic_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"","code":"cosmic_somatic_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/cosmic_somatic_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether\na variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/cpsr_acmg.html","id":null,"dir":"Reference","previous_headings":"","what":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","title":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","text":"Scores documentation ACMG evidence criteria used variant classification CPSR","code":""},{"path":"https://sigven.github.io/pcgr/reference/cpsr_acmg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","text":"","code":"cpsr_acmg"},{"path":"https://sigven.github.io/pcgr/reference/cpsr_acmg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Scores and documentation of ACMG evidence criteria used for variant classification\nin CPSR — cpsr_acmg","text":"list object three elements: 'score2tier', 'evidence_codes', 'pathogenic_range_gnomad' score2tier - data frame 5 rows two columns indicate current score thresholds variant classification CPSR: CPSR_CLASSIFICATION - variant classification level (P, LP, VUS etc) CPSR_PATHOGENICITY_SCORE - indication CPSR \"score bucket\" given classification (HTML string) #' @format evidence_codes - data frame 34 rows 7 columns document ACMG evidence criteria used variant classification CPSR: cpsr_evidence_code - code evidence criterion ('ACMG_BA1_AD' etc) category - type evidence feature ('clinpop','funcvarpop','funcvar','funccomp') pathogenicity_pole - whether given evidence support benign variant character ('B'), pathogenic character ('P') category_long - long version 'category' column description - Verbose description given evidence criterion sherloc_code - Corresponding code identifier SherLoc (Nykamp et al., GiM, 2017) path_score - Score associated given evidence criterion (negative positive)","code":""},{"path":"https://sigven.github.io/pcgr/reference/custom_bed_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","title":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","text":"Function reports protein-coding geneset overlaps BED file","code":""},{"path":"https://sigven.github.io/pcgr/reference/custom_bed_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","text":"","code":"custom_bed_genes(bed_file, pcgr_data)"},{"path":"https://sigven.github.io/pcgr/reference/custom_bed_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reports protein-coding geneset that overlaps BED file — custom_bed_genes","text":"bed_file BED file name selected transcripts panel 0 pcgr_data object PCGR annotation data","code":""},{"path":"https://sigven.github.io/pcgr/reference/data_integrity_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","title":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","text":"Function performs sanity check query VCF pcgrr package, ensuring required tags present annotated VCF","code":""},{"path":"https://sigven.github.io/pcgr/reference/data_integrity_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","text":"","code":"data_integrity_check(vcf_df, pcgr_data, config = NULL, workflow = \"pcgr\")"},{"path":"https://sigven.github.io/pcgr/reference/data_integrity_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that performs a sanity check of query VCF for pcgrr package,\nensuring that all required tags are present in annotated VCF — data_integrity_check","text":"vcf_df data frame variants VCF pcgr_data PCGR data object config PCGR/CPSR config object workflow type workflow (pcgr/cpsr)","code":""},{"path":"https://sigven.github.io/pcgr/reference/dbsnp_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","title":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"Function assigns logical (STATUS_DBSNP_GERMLINE) reflecting whether variant co-incides entry dbSNP (germline)","code":""},{"path":"https://sigven.github.io/pcgr/reference/dbsnp_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"","code":"dbsnp_germline_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/dbsnp_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_DBSNP_GERMLINE) reflecting whether\na variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/deduplicate_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","title":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","text":"Function removes redundancy variant evidence items (.e. variant assicated evidence codon level, evidence exon/gene level ignored)","code":""},{"path":"https://sigven.github.io/pcgr/reference/deduplicate_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","text":"","code":"deduplicate_eitems(   var_eitems = NULL,   target_type = \"exact\",   target_other = c(\"codon\", \"exon\", \"gene\") )"},{"path":"https://sigven.github.io/pcgr/reference/deduplicate_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes redundancy in variant evidence items (i.e. if\na variant is assicated with evidence at the codon level, evidence\nat the exon/gene level is ignored) — deduplicate_eitems","text":"var_eitems data frame variant evidence items target_type resolution level used \"best\" level ('exact' 'codon) target_other resolution levels evidence items ignored evidence found target_type level","code":""},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"function detects whether sample name variant data frame unique (present column name VCF_SAMPLE_ID), throws error multiple sample names present CPSR workflow","code":""},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"","code":"detect_vcf_sample_name(df, sample_name = NULL, cpsr = FALSE)"},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"df VCF data frame sample_name name sample identifier cpsr logical indicating CPSR workflow","code":""},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that detects whether the sample name in\nvariant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if\nmultiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"df Vranges object","code":""},{"path":"https://sigven.github.io/pcgr/reference/determine_genotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"Function assigns explicit genotype (heterozygous/homozygous) VCF GT tag","code":""},{"path":"https://sigven.github.io/pcgr/reference/determine_genotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"","code":"determine_genotype(vcf_df)"},{"path":"https://sigven.github.io/pcgr/reference/determine_genotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"vcf_df data frame variant data VCF","code":""},{"path":"https://sigven.github.io/pcgr/reference/determine_genotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns explicit genotype (heterozygous/homozygous) from VCF GT tag — determine_genotype","text":"vcf_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"Function performs stringr::str_replace strings multiple string columns dataframe","code":""},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"","code":"df_string_replace(df, strings, pattern, replacement, replace_all = F)"},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"df data frame strings name columns string replace performed pattern pattern replace replacement string replace replace_all logical - replace occurrences","code":""},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that performs stringr::str_replace on strings of multiple\nstring columns of a dataframe — df_string_replace","text":"df","code":""},{"path":"https://sigven.github.io/pcgr/reference/effect_prediction_algos.html","id":null,"dir":"Reference","previous_headings":"","what":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"List URLs range variant effect prediction algorithms","code":""},{"path":"https://sigven.github.io/pcgr/reference/effect_prediction_algos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"","code":"effect_prediction_algos"},{"path":"https://sigven.github.io/pcgr/reference/effect_prediction_algos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"data.frame 21 rows 3 columns indicates URL's variant effect prediction algorithms algorithm - Name encoding effect prediction algorithm url - URL display_name - Display name use reporting","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_eitems_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"Function filters clinical evidence items tumor type/primary site","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_eitems_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"","code":"filter_eitems_by_site(eitems = NULL, ontology = NULL, primary_site = \"\")"},{"path":"https://sigven.github.io/pcgr/reference/filter_eitems_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"eitems data frame clinical evidence items ontology phenotype ontology data frame primary_site primary tumor site","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"Function filters variant set (depth, allelic fraction) tumor normal filters according settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"","code":"filter_read_support(vcf_df, config = NULL, precision = 3)"},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"vcf_df data frame variants config list workflow configuration values precision number significant digits allelic fraction estimation","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that filters variant set on (depth, allelic fraction)\nfor tumor and normal and filters according to settings — filter_read_support","text":"vcf_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"function generates HTML link selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"","code":"generate_annotation_link(   df,   vardb = \"DBSNP\",   group_by_var = \"VAR_ID\",   url_prefix = \"http://www.ncbi.nlm.nih.gov/projects/SNP/snp_ref.cgi?rs=\",   link_key_var = \"DBSNPRSID\",   link_display_var = \"DBSNPRSID\" )"},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"df data frame vardb type database group_by_var variable used grouping (VAR_ID) url_prefix url prefix link generation link_key_var variable used url linking link_display_var variable used url display","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that generates a HTML link for selected\nidentifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"df_annotation_links","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_pcgr_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","text":"Function generates contents cancer genome report (PCGR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_pcgr_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","text":"","code":"generate_pcgr_report(   project_directory = NULL,   pcgr_data = NULL,   config = NULL,   tier_model = \"pcgr_acmg\" )"},{"path":"https://sigven.github.io/pcgr/reference/generate_pcgr_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_pcgr_report","text":"project_directory name project directory pcgr_data List object multiple PCGR data bundle annotations config Object PCGR configuration parameters tier_model Variant tier model","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that annotates CNV segment files — generate_report_data_cna","title":"Function that annotates CNV segment files — generate_report_data_cna","text":"Function annotates CNV segment files","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that annotates CNV segment files — generate_report_data_cna","text":"","code":"generate_report_data_cna(   cna_segments_tsv,   pcgr_data,   sample_name,   pcgr_config,   oncotree,   transcript_overlap_pct = 100 )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that annotates CNV segment files — generate_report_data_cna","text":"cna_segments_tsv CNV file name chromosomal log(2)-ratio segments pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters oncotree Data frame phenotype terms relevant tumor type transcript_overlap_pct required aberration overlap fraction (percent) reported transcripts (default 100 percent)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_kataegis.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"Function generates data frame potential kataegis events","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_kataegis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"","code":"generate_report_data_kataegis(   variant_set,   sample_name = \"SampleX\",   build = \"grch37\" )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_kataegis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"variant_set data frame SNVs/InDels (must contain 'CHROM', 'POS','REF','ALT') sample_name name tumor sample build genome assembly (grch37/grch38)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_msi.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"Function generates MSI prediction data PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_msi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"","code":"generate_report_data_msi(sample_calls, pcgr_data, sample_name, pcgr_config)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_msi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"sample_calls variant calls subject mutational signature analysis pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_rainfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","title":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","text":"Function generates data rainfall plot (mutation density along genome, considering SNVs )","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_rainfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","text":"","code":"generate_report_data_rainfall(   variant_set,   colors = NULL,   autosomes = FALSE,   build = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_rainfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates data for rainfall plot (mutation density\nalong genome, considering SNVs only) — generate_report_data_rainfall","text":"variant_set data frame SNVs/InDels (must contain \"CHROM\", \"POS\",\"REF\",\"ALT\") colors character vector six color codes (denoting different mutation types) autosomes logical indicating plotting consider autosomes build genome assembly (grch37/grch38)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_signatures_mp.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","text":"Function generates mutational signatures data PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_signatures_mp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","text":"","code":"generate_report_data_signatures_mp(   vcf_fname,   pcgr_data,   sample_name,   pcgr_config,   type_specific = T )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_signatures_mp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures_mp","text":"vcf_fname VCF file processed PCGR annotation pipeline - possibly filtered depth/allelic fraction pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters type_specific logical indicating reference signatures included (F) rather known prevalent tumor (T)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"Function generates tiered variant sets SNVs/InDels","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"","code":"generate_report_data_snv_indel(   sample_calls,   pcgr_data,   sample_name,   config,   callset = \"somatic calls\",   biomarker_mapping_stringency = 1,   tier_model = \"pcgr_acmg\" )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"sample_calls variant calls subject mutational signature analysis pcgr_data object PCGR annotation data sample_name sample identifier config Object PCGR configuration parameters callset type calls biomarker_mapping_stringency quality level biomarkers tier_model tier model (pcgr_acmg)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_snv_indel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that generates tiered variant sets for SNVs/InDels — generate_report_data_snv_indel","text":"pcg_report_data data frame report elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"Function tiered variant sets SNVs/InDels","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"","code":"generate_report_data_tmb(sample_calls, pcgr_data, sample_name, pcgr_config)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"sample_calls variant calls subject mutational signature analysis pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that tiered variant sets for SNVs/InDels — generate_report_data_tmb","text":"pcg_report_data data frame report elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"Function retrieves relevant (interventional based molecular target) clinical trials given tumor type","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"","code":"generate_report_data_trials(pcgr_data, config, sample_name)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"pcgr_data PCGR data bundle object config PCGR run configurations sample_name sample name","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves relevant (interventional based on molecular target)\nclinical trials for a given tumor type — generate_report_data_trials","text":"pcg_report_trials data frame report elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","title":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","text":"Function generates germline-filtered callset PCGR report statistics given tumor-callsets","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tumor_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","text":"","code":"generate_report_data_tumor_only(   unfiltered_sample_calls,   sample_name,   pcgr_config )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates germline-filtered callset and PCGR\nreport statistics for a given tumor-only callsets — generate_report_data_tumor_only","text":"unfiltered_sample_calls variant calls sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_value_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates value box data for PCGR report — generate_report_data_value_box","title":"Function that generates value box data for PCGR report — generate_report_data_value_box","text":"Function generates value box data PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_value_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates value box data for PCGR report — generate_report_data_value_box","text":"","code":"generate_report_data_value_box(pcg_report, pcgr_data, sample_name, pcgr_config)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_value_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates value box data for PCGR report — generate_report_data_value_box","text":"pcg_report object existing PCGR report data elements pcgr_data object PCGR annotation data sample_name sample identifier pcgr_config Object PCGR configuration parameters","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"Function generates dense tiered annotated variant datasets","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"","code":"generate_tier_tsv(variant_set, config, annotation_tags, sample_name = \"test\")"},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"variant_set List tiered variants config PCGR configuration settings annotation_tags List display columns sample_name Sample identifier","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"tsv_variants data frame tier-annotated list variants tab-separated output","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"Function reads fully annotated VCF PCGR VEP/vcfanno pipeline","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"","code":"get_calls(   tsv_gz_file,   pcgr_data,   sample_name,   config,   oncotree = NULL,   cpsr = F,   n_lines_skip = 1,   maf_filenames = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/get_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"tsv_gz_file Bgzipped VCF file pcgr_data object PCGR annotation data sample_name sample identifier config Object PCGR configuration parameters oncotree data frame sample-dependent phenotype terms UMLS cpsr logical indicating call retrieval CPSR workflow n_lines_skip number lines skip vcf2tsv file maf_filenames list filenames sample MAFs (temp final)","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_calls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that reads a fully annotated VCF from PCGR VEP/vcfanno pipeline — get_calls","text":"vcf_data_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"Function retrieves clinical evidence items (CIVIC, CBMDB) CNA aberrations","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"","code":"get_clin_assocs_cna(onco_ts_sets, annotation_tags = NULL, eitems = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"onco_ts_sets data frame annotations respect lost tumor suppressor genes gained oncogenes annotation_tags list annotation tags display report eitems Data frame clinical evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for\nCNA aberrations — get_clin_assocs_cna","text":"list","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"Function matches clinical evidence items (CIVIC, CBMDB) somatic cancer variants detected tumor","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"","code":"get_clin_assocs_snv_indel(sample_calls, annotation_tags = NULL, eitems = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"sample_calls data frame sample variants annotation_tags list annotation tags display report eitems data frame clinical evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_snv_indel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that matches clinical evidence items (CIVIC, CBMDB)\nagainst somatic cancer variants detected in tumor — get_clin_assocs_snv_indel","text":"list","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_cna_cytoband.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","title":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","text":"Function gets chromosome bands copy number segments","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_cna_cytoband.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","text":"","code":"get_cna_cytoband(cna_df, pcgr_data = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/get_cna_cytoband.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that gets the chromosome bands of copy number segments — get_cna_cytoband","text":"cna_df genomic ranges object copy number aberrations pcgr_data pcgr data bundle object","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_cna_overlapping_transcripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","title":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","text":"Functions finds transcripts overlap CNA segments. new data frame one entry per transcript-CNA overlap entry returned","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_cna_overlapping_transcripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","text":"","code":"get_cna_overlapping_transcripts(cna_df, pcgr_data)"},{"path":"https://sigven.github.io/pcgr/reference/get_cna_overlapping_transcripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions that finds all transcripts that overlap with CNA segments. A\nnew data frame with one entry per transcript-CNA overlap entry is returned — get_cna_overlapping_transcripts","text":"cna_df data frame copy number segments pcgr_data PCGR list object data","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get BSgenome Object — get_genome_obj","title":"Get BSgenome Object — get_genome_obj","text":"Gets BSgenome object given human genome assembly string.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get BSgenome Object — get_genome_obj","text":"","code":"get_genome_obj(genome)"},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get BSgenome Object — get_genome_obj","text":"genome Human genome assembly string: hg38 hg19.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get BSgenome Object — get_genome_obj","text":"BSgenome object.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get BSgenome Object — get_genome_obj","text":"","code":"if (FALSE) { get_genome_obj(\"hg38\") }"},{"path":"https://sigven.github.io/pcgr/reference/get_oncogene_tsgene_target_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","title":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","text":"Function detects assigns oncogenes subject copy number amplifications, tumor suppressor genes subject homozygous deletions Also detects drug targets subject copy number amplifications","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_oncogene_tsgene_target_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","text":"","code":"get_oncogene_tsgene_target_sets(   cna_df,   transcript_overlap_pct = 100,   log_r_gain = 0.8,   log_r_homdel = -0.8,   tumor_type = \"Any\",   pcgr_data = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/get_oncogene_tsgene_target_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects and assigns oncogenes subject to copy number\namplifications, and tumor suppressor genes subject to homozygous deletions\nAlso detects other drug targets subject to copy number amplifications — get_oncogene_tsgene_target_sets","text":"cna_df data frame copy number-transcript records transcript_overlap_pct minimum level overlap transcripts (pct) log_r_gain logR threshold copy number amplifications log_r_homdel logR threshold homozygous deletions tumor_type type tumor pcgr_data PCGR data object","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"Function excludes genomic aberrations non-nuclear chromosomes","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"","code":"get_ordinary_chromosomes(vcf_df, chrom_var = \"CHROM\")"},{"path":"https://sigven.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"vcf_df data frame chrom_var variable name chromosome data frame","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_ordinary_chromosomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — get_ordinary_chromosomes","text":"vcf_df data frame mutations nuclear chromosomes ","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_population_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"Function retrieves name VCF INFO tag population description gnomad/1000G population","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_population_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"","code":"get_population_tag(population_code, db = \"1KG\", subset = NA)"},{"path":"https://sigven.github.io/pcgr/reference/get_population_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"population_code three-letter code db 1KG GNOMAD subset NA \"non_cancer\" (GNOMAD)","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_population_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves name of VCF INFO tag and\npopulation description for gnomad/1000G population — get_population_tag","text":"pop_tag_info","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","title":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","text":"Function retrieves prevalent signatures given tumor type/primary site Data collected COSMIC v3.2.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","text":"","code":"get_prevalent_site_signatures(   site = \"Any\",   custom_collection = NULL,   pcgr_data = NULL,   min_prevalence_pct = 5,   incl_poss_artifacts = T )"},{"path":"https://sigven.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves prevalent signatures for a given tumor type/primary site\nData is collected from COSMIC v3.2. — get_prevalent_site_signatures","text":"site Primary tumor site custom_collection Custom collection signatures COSMIC pcgr_data PCGR data object min_prevalence_pct Minimum prevalence (pct) signature cohorts associated primary site - used select reference signatures inclusion signature reconstruction incl_poss_artifacts logical indicating artefact signatures included","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_proper_maf_alleles.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"Function transforms tier-structured variant data frame MAF-like data frame (input 2020plus, MutSigCV)","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_proper_maf_alleles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"","code":"get_proper_maf_alleles(maf_df, genome_seq, seqinfo)"},{"path":"https://sigven.github.io/pcgr/reference/get_proper_maf_alleles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"maf_df data frame somatic mutations genome_seq BSgenome object seqinfo seqinfo object","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_proper_maf_alleles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that transforms a tier-structured variant data frame\ninto a MAF-like data frame (for input to 2020plus, MutSigCV) — get_proper_maf_alleles","text":"maf_all","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosome_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","title":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","text":"Function removes copy number segments go beyond chrosomal lengths given assembly","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosome_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","text":"","code":"get_valid_chromosome_segments(cna_segments_df, genome_assembly, bsg)"},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosome_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes copy number segments that go\nbeyond chrosomal lengths for the given assembly — get_valid_chromosome_segments","text":"cna_segments_df genomic segments CNA genome_assembly genome assembly (grch37/grch38) bsg BSgenome object","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"Checks valid chromosome names data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"","code":"get_valid_chromosomes(vcf_data_df, chromosome_column = \"CHROM\", bsg = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"vcf_data_df data frame chromosome_column name chromosome column bsg BSGenome object","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"vcf_data_df valid data frame valid mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/het_af_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"Function assigns logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether variant likely heterozygous (germline) - based allelic fraction (AF_TUMOR), presence gnomAD dbSNP, presence TCGA COSMIC","code":""},{"path":"https://sigven.github.io/pcgr/reference/het_af_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"","code":"het_af_germline_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/het_af_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether\na variant is likely heterozygous (germline) - based on allelic fraction (AF_TUMOR),\npresence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/heterozygous_states.html","id":null,"dir":"Reference","previous_headings":"","what":"VCF encodings of heterozygous variant states — heterozygous_states","title":"VCF encodings of heterozygous variant states — heterozygous_states","text":"VCF encodings heterozygous variant states","code":""},{"path":"https://sigven.github.io/pcgr/reference/heterozygous_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCF encodings of heterozygous variant states — heterozygous_states","text":"","code":"heterozygous_states"},{"path":"https://sigven.github.io/pcgr/reference/heterozygous_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VCF encodings of heterozygous variant states — heterozygous_states","text":"vector potential VCF encodings heterozygous variant states","code":""},{"path":"https://sigven.github.io/pcgr/reference/hom_af_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","text":"Function assigns logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether variant likely homozygous (germline) - based allelic fraction (AF_TUMOR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/hom_af_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","text":"","code":"hom_af_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/hom_af_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether\na variant is likely homozygous (germline) - based on allelic fraction (AF_TUMOR) — hom_af_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/homozygous_states.html","id":null,"dir":"Reference","previous_headings":"","what":"VCF encodings of homozygous variant states — homozygous_states","title":"VCF encodings of homozygous variant states — homozygous_states","text":"VCF encodings homozygous variant states","code":""},{"path":"https://sigven.github.io/pcgr/reference/homozygous_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VCF encodings of homozygous variant states — homozygous_states","text":"","code":"homozygous_states"},{"path":"https://sigven.github.io/pcgr/reference/homozygous_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VCF encodings of homozygous variant states — homozygous_states","text":"vector potential VCF encodings homozygous variant states","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_cna_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with CNA information — init_cna_content","title":"Function that initiates report element with CNA information — init_cna_content","text":"Function initiates report element CNA information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_cna_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with CNA information — init_cna_content","text":"","code":"init_cna_content(rep = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/init_cna_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates report element with CNA information — init_cna_content","text":"rep PCGR report structure","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_cna_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with CNA information — init_cna_content","text":"rep updated PCGR report structure - initialized CNA content","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_germline_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"Function initiates report element germline variant information (CPSR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_germline_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"","code":"init_germline_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_germline_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"rep Report structure initialized germline data (CPSR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_m_signature_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with mutational signatures information — init_m_signature_content","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"Function initiates report element mutational signatures information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_m_signature_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"","code":"init_m_signature_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_m_signature_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"rep Report structure initialized signature data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_rainfall_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with rainfall information — init_rainfall_content","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"Function initiates report element rainfall information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_rainfall_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"","code":"init_rainfall_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_rainfall_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"rep Report structure initialized rainfall data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates PCGR/CPSR report object — init_report","title":"Function that initiates PCGR/CPSR report object — init_report","text":"Function initiates PCGR/CPSR report object","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates PCGR/CPSR report object — init_report","text":"","code":"init_report(   config = NULL,   class = NULL,   pcgr_data = NULL,   type = \"somatic\",   virtual_panel_id = \"-1\",   custom_bed = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/init_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates PCGR/CPSR report object — init_report","text":"config Object configuration parameters class report analysis section (NULL defaults full report) pcgr_data PCGR data bundle type Type report ('somatic' 'germline') virtual_panel_id identifier(s) virtual panel id custom_bed custom BED file target loci screening","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_report_display_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates ranked report display information — init_report_display_content","title":"Function that initiates ranked report display information — init_report_display_content","text":"Function initiates ranked report display information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_report_display_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates ranked report display information — init_report_display_content","text":"","code":"init_report_display_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_report_display_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates ranked report display information — init_report_display_content","text":"rep Report structure initialized ranked display","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_snv_indel_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"Function initiates report element SNV/InDel information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_snv_indel_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"","code":"init_snv_indel_content(rep = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/init_snv_indel_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"rep PCGR report structure","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_snv_indel_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with SNV/InDel information — init_snv_indel_content","text":"rep updated PCGR report structure - initialized SNV/InDel content","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with TMB information — init_tmb_content","title":"Function that initiates report element with TMB information — init_tmb_content","text":"Function initiates report element TMB information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with TMB information — init_tmb_content","text":"","code":"init_tmb_content(tcga_tmb = NULL, config = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates report element with TMB information — init_tmb_content","text":"tcga_tmb data frame TMB distribution TCGA samples config PCGR configuration object","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with TMB information — init_tmb_content","text":"rep TMB report element","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tumor_only_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with tumor-only information — init_tumor_only_content","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"Function initiates report element tumor-information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tumor_only_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"","code":"init_tumor_only_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_tumor_only_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"rep Report structure initialized tumor-data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_valuebox_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with value box information — init_valuebox_content","title":"Function that initiates report element with value box information — init_valuebox_content","text":"Function initiates report element value box information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_valuebox_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with value box information — init_valuebox_content","text":"","code":"init_valuebox_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_valuebox_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with value box information — init_valuebox_content","text":"rep Report structure initialized value box data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_var_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with variant data — init_var_content","title":"Function that initiates report element with variant data — init_var_content","text":"Function initiates report element variant data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_var_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with variant data — init_var_content","text":"","code":"init_var_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_var_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with variant data — init_var_content","text":"rep Report structure initialized variant data","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"Function detects kataegis events data frame genomic cooordinates mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"","code":"kataegis_detect(   data,   sample_id = \"sample_id\",   build = \"grch37\",   min.mut = 6,   max.dis = 1000,   chr = \"chr\",   pos = \"pos\",   txdb = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"data data frame somatic mutations, produced kataegis_input sample_id sample identifier build genomoe assembly build min.mut minimum number mutations localized hypermutated region max.dis maximum distance kataegis event (basepairs) chr column name data denotes chromosome pos column name data denotes position txdb transcript database (txdb)","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_detect","text":"kataegis_df data frame potential kataegis events","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","text":"Function detects kataegis events data frame genomic cooordinates mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","text":"","code":"kataegis_input(   variant_set,   chr = \"chr\",   pos = \"pos\",   ref = \"ref\",   alt = \"alt\",   build = NULL,   context_size = 10 )"},{"path":"https://sigven.github.io/pcgr/reference/kataegis_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects kataegis events from a data frame\nwith genomic cooordinates of mutations — kataegis_input","text":"variant_set data frame raw set somatic mutations chr column name data denotes chromosome pos column name data denotes position ref column name data denotes reference allele alt column name data denotes alternate allele build genome build (grch37 hg38) context_size size neighbouring sequence context","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"Function loads evidence items CIViC CGI, combines unified data.frame","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"","code":"load_all_eitems(eitems_raw = NULL, alteration_type = \"MUT\", origin = \"Somatic\")"},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"eitems_raw raw data frame evidence items alteration_type type alteration ('MUT','MUT_LOF','CNA') origin variant origin ('Germline','Somatic')","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that loads all evidence items from CIViC and CGI, and\ncombines them in a unified data.frame — load_all_eitems","text":"all_eitems","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"Function loads specific set clinical variant evidence items (CIViC + CGI) based given parameters (mutation type, variant origin, tumor type etc)","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"","code":"load_eitems(   eitems_raw = NULL,   ontology = NULL,   alteration_type = \"MUT\",   origin = \"Somatic\",   tumor_type_specificity = NULL,   tumor_type = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"eitems_raw complete set clinical variant evidence items ontology phenotype ontology data frame alteration_type type alteration ('MUT', 'CNA', 'MUT_LOF') origin variant origin ('Somatic','Germline') tumor_type_specificity tumor type specificity ('', 'specific') tumor_type primary tumor site","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based\non given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"eitems variant evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/log_var_eitem_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","title":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","text":"Function logs number evidence items found, different levels resolution","code":""},{"path":"https://sigven.github.io/pcgr/reference/log_var_eitem_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","text":"","code":"log_var_eitem_stats(var_eitems = NULL, target_type = \"exact\")"},{"path":"https://sigven.github.io/pcgr/reference/log_var_eitem_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that logs the number of evidence items found, for different\nlevels of resolution — log_var_eitem_stats","text":"var_eitems data frame variant evidence items target_type resolution evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/make_upset_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"Function makes input data UpSet plot (filtering/intersection results) somatic-germline classification procedure","code":""},{"path":"https://sigven.github.io/pcgr/reference/make_upset_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"","code":"make_upset_plot_data(calls, config)"},{"path":"https://sigven.github.io/pcgr/reference/make_upset_plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"calls unfiltered calls (germline + somatic) config config","code":""},{"path":"https://sigven.github.io/pcgr/reference/make_upset_plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that makes input data for an UpSet plot\n(filtering/intersection results) for the somatic-germline\nclassification procedure — make_upset_plot_data","text":"upset data","code":""},{"path":"https://sigven.github.io/pcgr/reference/match_eitems_to_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that matches variants to evidence items — match_eitems_to_var","title":"Function that matches variants to evidence items — match_eitems_to_var","text":"Function matches variants evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/match_eitems_to_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that matches variants to evidence items — match_eitems_to_var","text":"","code":"match_eitems_to_var(   sample_calls,   db = \"civic\",   colset = NULL,   eitems = NULL,   region_marker = T )"},{"path":"https://sigven.github.io/pcgr/reference/match_eitems_to_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that matches variants to evidence items — match_eitems_to_var","text":"sample_calls data frame variant calls db database evidence items ('civic','cgi') colset character vector column names pull sample_calls eitems raw list evidence items region_marker logical indication region biomarkers matched ","code":""},{"path":"https://sigven.github.io/pcgr/reference/max_af_gnomad.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"Function assigns maximum value variable (MAX_AF_GNOMAD) reflecting maximum allele frequency given variant across gnomAD populations","code":""},{"path":"https://sigven.github.io/pcgr/reference/max_af_gnomad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"","code":"max_af_gnomad(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/max_af_gnomad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting\nthe maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/max_af_onekg.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","title":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","text":"Function assigns maximum value variable (MAX_AF_1KG) reflecting maximum allele frequency given variant across oneKG populations","code":""},{"path":"https://sigven.github.io/pcgr/reference/max_af_onekg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","text":"","code":"max_af_onekg(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/max_af_onekg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a maximum value to a variable (MAX_AF_1KG) reflecting\nthe maximum allele frequency for a given variant across oneKG populations — max_af_onekg","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"Function plots indel fraction given sample contrasts distribution MSI-H/MSS samples TCGA","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"","code":"msi_indel_fraction_plot(tcga_msi_dataset, indel_fraction)"},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"tcga_msi_dataset underlying dataset TCGA used development statistical classifier indel_fraction fraction indels mutations (SNVs + indels)","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots the indel fraction for a given sample and\ncontrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"p","code":""},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"Function orders genomic aberrations according order chromosomes chromosomal position","code":""},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"","code":"order_variants(vcf_df, chrom_var = \"CHROM\", pos_var = \"POS\")"},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"vcf_df data frame chrom_var variable name chromosome data frame pos_var variable name chromosomal position","code":""},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that orders genomic aberrations according to order\nof chromosomes and chromosomal position — order_variants","text":"vcf_df data frame ordered mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Does R Package Exist — pkg_exists","title":"Does R Package Exist — pkg_exists","text":"Checks specified R package exists local system.","code":""},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does R Package Exist — pkg_exists","text":"","code":"pkg_exists(p)"},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does R Package Exist — pkg_exists","text":"p R package check .","code":""},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does R Package Exist — pkg_exists","text":"TRUE package exists, FALSE otherwise.","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","title":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"Function makes plot TMB boxplots TCGA cohorts, highlighting TMB estimate given sample cohort/primary site interest","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"","code":"plot_tmb_primary_site_tcga(   tcga_tmb,   p_site = \"Liver\",   tmb_estimate = 5,   algorithm = \"all_coding\" )"},{"path":"https://sigven.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a plot with TMB boxplots for TCGA cohorts, highlighting\nthe TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"tcga_tmb data frame TMB estimates TCGA samples p_site primary tumor_site (sample) tmb_estimate estimate mutational burden (sample) algorithm type TMB algorithm","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"Function plots four value boxes important findings cancer genome","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"","code":"plot_value_boxes(pcg_report)"},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"pcg_report pcg report list elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots four value boxes with the most\nimportant findings in the cancer genome — plot_value_boxes","text":"p","code":""},{"path":"https://sigven.github.io/pcgr/reference/pon_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","title":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","text":"Function assigns logical (STATUS_PON) reflecting whether variant co-inciding variant present panel--normals database (PANEL_OF_NORMALS column TRUE)","code":""},{"path":"https://sigven.github.io/pcgr/reference/pon_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","text":"","code":"pon_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/pon_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_PON) reflecting whether\na variant is co-inciding with a variant present in a panel-of-normals database\n(PANEL_OF_NORMALS column is TRUE) — pon_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"Function predicts MSI status based fraction indels among calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"","code":"predict_msi_status(   vcf_data_df,   pcgr_data,   msi_prediction_model,   msi_prediction_dataset,   target_size_mb,   sample_name = \"Test\" )"},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"vcf_data_df data frame somatic mutations/indels pcgr_data object PCGR datasets msi_prediction_model statistical model MSI prediction msi_prediction_dataset underlying dataset TCGA used development statistical classifier target_size_mb size targeted genomic region (coding) sample_name name sample","code":""},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"msi_data","code":""},{"path":"https://sigven.github.io/pcgr/reference/qc_var_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","title":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","text":"Function makes quality control check evidence items assigned variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/qc_var_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","text":"","code":"qc_var_eitems(var_eitems = NULL, marker_type = \"codon\")"},{"path":"https://sigven.github.io/pcgr/reference/qc_var_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a quality control check of evidence items assigned\nto variants — qc_var_eitems","text":"var_eitems variant-evidence items marker_type type biomarker","code":""},{"path":"https://sigven.github.io/pcgr/reference/recode_logical_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","title":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","text":"Function assigns proper logical values logical entries read VCF file (TRUE = True (VCF), FALSE = False (VCF))","code":""},{"path":"https://sigven.github.io/pcgr/reference/recode_logical_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","text":"","code":"recode_logical_vars(vcf_data_df)"},{"path":"https://sigven.github.io/pcgr/reference/recode_logical_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns proper logical values to logical entries\nread from VCF file (TRUE = True (VCF), FALSE = False (VCF)) — recode_logical_vars","text":"vcf_data_df variant data frame","code":""},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes column(s) from data frame — remove_cols_from_df","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"Function removes column(s) data frame","code":""},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"","code":"remove_cols_from_df(df, cnames = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"df data.frame data cnames character vector column names","code":""},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"df data.frame columns removed (present originally)","code":""},{"path":"https://sigven.github.io/pcgr/reference/set_report_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that set PCGR report metadata — set_report_metadata","title":"Function that set PCGR report metadata — set_report_metadata","text":"Function set PCGR report metadata","code":""},{"path":"https://sigven.github.io/pcgr/reference/set_report_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that set PCGR report metadata — set_report_metadata","text":"","code":"set_report_metadata(   config,   pcgr_data,   virtual_panel_id = \"-1\",   report_type = NULL,   custom_bed = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/set_report_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that set PCGR report metadata — set_report_metadata","text":"config PCGR config object pcgr_data PCGR data list object virtual_panel_id identifier virtual panel report_type type report ('germline' 'somatic') custom_bed custom BED file target loci screening","code":""},{"path":"https://sigven.github.io/pcgr/reference/set_report_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that set PCGR report metadata — set_report_metadata","text":"report_metadata Object PCGR report metadata","code":""},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"Function sorts chromosomal segments according chromosome chromosomal start/end position","code":""},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"","code":"sort_chromosomal_segments(   df,   chromosome_column = \"CHROM\",   start_segment = \"POS\",   end_segment = \"POS\" )"},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"df data frame chromosome start + end segment chromosome_column name column chromosome name sigven start_segment name column indicates start chromosomal segment end_segment name column indicates end chromosomal segment","code":""},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that sorts chromosomal segments according to chromosome\nand chromosomal start/end position — sort_chromosomal_segments","text":"df_final data frame sorted chromosomal segments","code":""},{"path":"https://sigven.github.io/pcgr/reference/structure_var_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","title":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","text":"Function structures variant evidence items according strength evidence","code":""},{"path":"https://sigven.github.io/pcgr/reference/structure_var_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","text":"","code":"structure_var_eitems(var_eitems, annotation_tags, alteration_type = \"MUT\")"},{"path":"https://sigven.github.io/pcgr/reference/structure_var_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that structures variant evidence items according\nto strength of evidence — structure_var_eitems","text":"var_eitems variant evidence items annotation_tags annotation tags include display alteration_type type alteration ('MUT','CNA')","code":""},{"path":"https://sigven.github.io/pcgr/reference/targeted_drugs_pr_ttype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","title":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","text":"Function retrieves targeted drugs given tumor type/primary site","code":""},{"path":"https://sigven.github.io/pcgr/reference/targeted_drugs_pr_ttype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","text":"","code":"targeted_drugs_pr_ttype(ttype, pcgr_data, ignore_on_label_early_phase = T)"},{"path":"https://sigven.github.io/pcgr/reference/targeted_drugs_pr_ttype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves targeted drugs for a given tumor type/primary site — targeted_drugs_pr_ttype","text":"ttype primary site/tumor type pcgr_data PCGR data object ignore_on_label_early_phase ignore early phase drugs (label)","code":""},{"path":"https://sigven.github.io/pcgr/reference/targeted_drugs_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","title":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","text":"Function summarises available targeted drugs given target","code":""},{"path":"https://sigven.github.io/pcgr/reference/targeted_drugs_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","text":"","code":"targeted_drugs_summarise(   candidate_drugs = NULL,   link_label = \"DRUGS_ON_LABEL\",   indication_label = \"DRUGS_ON_LABEL_INDICATIONS\" )"},{"path":"https://sigven.github.io/pcgr/reference/targeted_drugs_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that summarises available targeted drugs for a given target — targeted_drugs_summarise","text":"candidate_drugs data frame candidate drugs link_label column name list aggregated drugs pr. target indication_label column name drug indications","code":""},{"path":"https://sigven.github.io/pcgr/reference/tcga_somatic_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"Function assigns logical (STATUS_TCGA_SOMATIC) reflecting whether variant co-incides entry TCGA (somatic)","code":""},{"path":"https://sigven.github.io/pcgr/reference/tcga_somatic_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"","code":"tcga_somatic_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/tcga_somatic_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether\na variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html","code":""},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"Function plots histogram variant allelic support (tumor) - grouped tiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"","code":"tier_af_distribution(tier_df, bin_size = 0.1)"},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"tier_df data frame somatic mutations bin_size size bins allelic frequency","code":""},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots a histogram of the the variant allelic\nsupport (tumor) - grouped by tiers — tier_af_distribution","text":"p geom_histogram plot ggplot2","code":""},{"path":"https://sigven.github.io/pcgr/reference/update_maf_allelic_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","title":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","text":"Function updates MAF file (produced vcf2maf) allelic support data","code":""},{"path":"https://sigven.github.io/pcgr/reference/update_maf_allelic_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","text":"","code":"update_maf_allelic_support(calls, maf_fname_tmp, maf_fname, delete_raw = T)"},{"path":"https://sigven.github.io/pcgr/reference/update_maf_allelic_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that updates a MAF file (produced by vcf2maf) with allelic support data — update_maf_allelic_support","text":"calls data frame variant calls maf_fname_tmp Filename MAF produced vcf2maf maf_fname Filename MAF includes variant allelic support (final MAF) delete_raw logical indicating initial MAF deleted","code":""},{"path":"https://sigven.github.io/pcgr/reference/update_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initates PCGR report object — update_report","title":"Function that initates PCGR report object — update_report","text":"Function initates PCGR report object","code":""},{"path":"https://sigven.github.io/pcgr/reference/update_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initates PCGR report object — update_report","text":"","code":"update_report(report, report_data, a_elem = \"snv_indel\")"},{"path":"https://sigven.github.io/pcgr/reference/update_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initates PCGR report object — update_report","text":"report PCGR final report report_data Object PCGR report data a_elem section PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/upset_plot_tumor_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"Function makes upset calls germline-filtered variants classification procedure","code":""},{"path":"https://sigven.github.io/pcgr/reference/upset_plot_tumor_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"","code":"upset_plot_tumor_only(upset_data)"},{"path":"https://sigven.github.io/pcgr/reference/upset_plot_tumor_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"upset_data unfiltered calls (germline + somatic)","code":""},{"path":"https://sigven.github.io/pcgr/reference/upset_plot_tumor_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that makes an upset calls for germline-filtered variants\nclassification procedure — upset_plot_tumor_only","text":"p","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_db_url.html","id":null,"dir":"Reference","previous_headings":"","what":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"List URLS variant identifiers variant/gene/protein domain databases","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_db_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"","code":"variant_db_url"},{"path":"https://sigven.github.io/pcgr/reference/variant_db_url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"data.frame 6 rows 5 columns indicates URL's various variant/gene databases use PCGR annotation columns generate variant links name - Name encoding variant/gene database group_by_var - column used grouping url_prefix - URL prefix link_key_var - column used key value link link_display_var - column used display variable link","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_stats_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","title":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","text":"Function generate snv/indel + coding/noncoding stats given variant set","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_stats_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","text":"","code":"variant_stats_report(calls, name = \"v_stat\")"},{"path":"https://sigven.github.io/pcgr/reference/variant_stats_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generate snv/indel + coding/noncoding stats for\na given variant set — variant_stats_report","text":"calls data frame variants predisposition_genes name type variant group","code":""},{"path":"https://sigven.github.io/pcgr/reference/virtual_panel_display_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","title":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","text":"Function makes HTML display virtual gene panel","code":""},{"path":"https://sigven.github.io/pcgr/reference/virtual_panel_display_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","text":"","code":"virtual_panel_display_html(gene_df)"},{"path":"https://sigven.github.io/pcgr/reference/virtual_panel_display_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a HTML display of virtual gene panel — virtual_panel_display_html","text":"gene_df data frame genes targeted virtual panel","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_processed_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"Function writes VCF intended mutational signature analysis","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_processed_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"","code":"write_processed_vcf(   calls,   sample_name = NULL,   output_directory = NULL,   vcf_fname = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/write_processed_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"calls data frame calls sample_name sample name output_directory Output directory output file vcf_fname filename VCF","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","title":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","text":"Function writes contents PCGR object various output formats (Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc)","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","text":"","code":"write_report_output(   report,   config,   tier_model = \"pcgr_acmg\",   output_format = \"html\",   flexdb = FALSE )"},{"path":"https://sigven.github.io/pcgr/reference/write_report_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes contents of PCGR object to various output formats\n(Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_output","text":"report List object report data (PCGR/CPSR) config Configuration object key configurations (directories, sample names, genome assembly etc) tier_model type tier model output_format contents/file format output (html/json/tsv/cna_tsv etc) flexdb logical indicating HTML output dashboard","code":""}]
