[{"path":"https://sigven.github.io/pcgr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Sigve Nakken Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v2-0-3","dir":"Articles","previous_headings":"","what":"v2.0.3","title":"Changelog","text":"Date: 2024-08-01 Ensure correct propagation purity/ploidy output report Ensure MAF output properly filtered tumor-runs Ensure properly copying quarto templates (abandon file.copy), PCGR CPSR","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v2-0-2","dir":"Articles","previous_headings":"","what":"v2.0.2","title":"Changelog","text":"Date: 2024-07-16 Ensure correct reference variant actionability guidelines - AMP/ASCO/CAP (ACMG/AMP), code docs (thanks HomoPolyethylen pointing ) fix bug missing assignment tier 3 variants (AMP/ASCO/CAP) ensure non-exonic biomarker variants (e.g. TERT) written Excel sheet specify (value boxes, plots) MSI classification based coding variants","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v2-0-1","dir":"Articles","previous_headings":"","what":"v2.0.1","title":"Changelog","text":"Date: 2024-07-07 Fixed bug chrM variants input - properly annotated VEP, correctly processed pcgrr. mitochondrial variants found input VCF now removed VCF pre-processing.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v2-0-0","dir":"Articles","previous_headings":"","what":"v2.0.0","title":"Changelog","text":"Date: 2024-06-26 ClinVar (2024-06) NCI Thesaurus v24.05d Open Targets Platform v2024.06 CIViC (2024-06-21) CGI Cancer Biomarkers database (2022/10/17) GENCODE v46/v19 (GRCh38/GRCh37) Cancer Gene Census CancerMine v50 (2023-03) Pfam v35.0 (November 2021) Disease Ontology/EFO UniProt KB v2024_03 Ensembl VEP v112 Diff v2.0.0 v1.4.1","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"addedchanged","dir":"Articles","previous_headings":"v2.0.0","what":"Added/changed","title":"Changelog","text":"multiple options related RMarkdown output now deprecated Users need download assembly-specific VEP cache separately Ensembl VEP website, provide path new required argument --vep_dir pcgr command Re-engineered data bundle generation pipeline HTML report overview contents data bundle shipped reference data , also available (grch38). Singularity/Apptainer support Moved code base initial Python workflow steps (biomarker matching, CNA segment annotation, RNA expression analysis, oncogenicity classification) Variants now classified respect oncogenicity actionability, previous global tier classification (tier 1-5) thus deprecated New argument n_copy_gain - Minimum number total copy number segments considered gains/amplifications (default: 6) --input_rna_expression - accepts TSV file gene expression values --expression_sim - boolean flag enable expression similarity analysis --expression_sim_db - Comma-separated string databases used RNA expression similarity analysis, default: tcga,depmap,treehouse --tmb_display - Type TMB measure show report (coding_and_silent, coding_non_silent, missense_only) --tmb_dp_min - Minimum depth position considered TMB calculation (default: 0) - requires allelic support information VCF --tmb_af_min - Minimum allele frequency position considered TMB calculation (default: 0) - requires allelic support information VCF multi-sheet Excel workbook output analysis output provided, suitable e.g. aggregation results across samples --pcgr_dir renamed --refdata_dir --clinvar_ignore_noncancer renamed --clinvar_report_noncancer, meaning variants found ClinVar, yet attributed non-cancer related phenotypes, now excluded reporting default --vep_gencode_all renamed --vep_gencode_basic, meaning gene variant annotation now using GENCODE transcripts default, basic set --preserved_info_tags renamed --retained_info_tags --basic renamed --no_reporting --target_size_mb renamed --effective_target_size_mb LOFTEE plugin VEP removed loss--function variant classifier (due low level maintenance, outdated dependency requirements). now, simplified LoF-annotation used replacement, looking primarily CSQ types (stop_gained, frameshift_variant, splice_acceptor_variant, splice_donor_variant). Furthermore, frameshift/stop-gain variants found within last 5% coding sequence length deemed non-LOF, splice donor variants disrupting canonical site (GC>GT). even advanced LoF-annotation planned future release. Biomarkers matched much comprehensively previous versions, matching genomic level, codon, exon, amino acid gene level (principal non-principal transcript matches)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed","dir":"Articles","previous_headings":"v2.0.0","what":"Removed","title":"Changelog","text":"Options configuring RMarkdown output, .e. --report_theme, report_nonfloating_toc --cpsr_report --include_trials, can provide report associated pathogenic germline variants (CPSR) potential clinical trial oppertunities currenly hold forthcoming release --no_vcf_validate - VCF validation simplified, relying vcf-validator anymore Options filter tumor-calls using 1000 Genomes Project database, .e. --maf_onekg_eur, --maf_onekg_amr, --maf_onekg_eas, --maf_onekg_afr, --maf_onekg_sas, --maf_onekg_global --cell_line --logr_gain, --logr_homdel","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-4-1","dir":"Articles","previous_headings":"","what":"v1.4.1","title":"Changelog","text":"Date: 2023-03-14 Diff v1.4.1 v1.4.0","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changes","dir":"Articles","previous_headings":"v1.4.1","what":"Changes","title":"Changelog","text":"Skip favicon Rmarkdown @sigven pr210 Use biocondarised vcf2tsvpy @pdiakumis pr211","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-4-0","dir":"Articles","previous_headings":"","what":"v1.4.0","title":"Changelog","text":"Date: 2023-03-08 Diff v1.4.0 v1.3.0","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changes-1","dir":"Articles","previous_headings":"v1.4.0","what":"Changes","title":"Changelog","text":"Pick trans consequence patch @sigven pr206 Use VEP vcf input vcf2maf.pl @sigven pr207 Better handling pcgr/pcgrr conda env custom naming @pdiakumis pr208 Update report style @sigven pr209","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-3-0","dir":"Articles","previous_headings":"","what":"v1.3.0","title":"Changelog","text":"Date: 2023-02-28 Diff v1.3.0 v1.2.0","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changes-2","dir":"Articles","previous_headings":"v1.3.0","what":"Changes","title":"Changelog","text":"pcgr_summarise.py: proritize protein-coding BIOTYPE csq (pr201) cpsr.py: expose --pcgrr_conda option flexibly activate pcgrr env non-default pcgrr name docs: update input.Rmd, running.Rmd cpsr_validate_input.py: refactor efficient custom gene egrep code reformat via autopep8 annoutils.py, pcgr_vcfanno.py bump docker actions setup-buildx-action (v1–v2), build-push-action (v2–v4) use miniforge-variant instead mamba-version: \"*\" replace ::set-output since deprecated","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-2-0","dir":"Articles","previous_headings":"","what":"v1.2.0","title":"Changelog","text":"Date: 2022-11-11 Diff v1.2.0 v1.1.0","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changes-3","dir":"Articles","previous_headings":"v1.2.0","what":"Changes","title":"Changelog","text":"Keep autosomal, X, Y, M/MT chromosomes Import bcftools dependency","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-1-0","dir":"Articles","previous_headings":"","what":"v1.1.0","title":"Changelog","text":"Date: 2022-10-28 Diff v1.1.0 v1.0.3","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changes-4","dir":"Articles","previous_headings":"v1.1.0","what":"Changes","title":"Changelog","text":"--no_docker --docker_uid CLI arguments now obsolete. --version CLI argument added pcgr/cpsr.py declutter repetitive log messages refactor pcgr/cpsr.py script Update documentation declutter logging; refactor dict creation (pr192). switch using Python’s native os.remove os.rename glob cleanup keep decompressed VCF --vcf2maf option specified. vcf2maf tool support compressed VCFs - see issue235. Fix CLI argument --cna_overlap_pct pr196.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"new-contributors","dir":"Articles","previous_headings":"v1.1.0","what":"New Contributors","title":"Changelog","text":"@niklasmueboe (pr196).","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-3","dir":"Articles","previous_headings":"","what":"v1.0.3","title":"Changelog","text":"Date: 2022-05-24","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed","dir":"Articles","previous_headings":"v1.0.3","what":"Fixed","title":"Changelog","text":"Bug clinical trials sorting, pr191","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-2","dir":"Articles","previous_headings":"","what":"v1.0.2","title":"Changelog","text":"Date: 2022-03-30","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-1","dir":"Articles","previous_headings":"v1.0.2","what":"Fixed","title":"Changelog","text":"JSON output CPSR, issue44","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-1","dir":"Articles","previous_headings":"","what":"v1.0.1","title":"Changelog","text":"Date: 2022-03-09","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-2","dir":"Articles","previous_headings":"v1.0.1","what":"Fixed","title":"Changelog","text":"exclusion intergenic intronic variants, exclusion upstream_gene/downstream_gene variants (variant set still 500,000 step ) Bug signature analysis (issue187) cases input variant set fits > 18 different aetiologies.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v1-0-0","dir":"Articles","previous_headings":"","what":"v1.0.0","title":"Changelog","text":"Date: 2022-02-25 Data updates: ClinVar, GWAS catalog, GENCODE, CIViC, CancerMine, KEGG, ChEMBL, Open Targets Platform, Disease Ontology, Experimental Factor Ontology","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added","dir":"Articles","previous_headings":"v1.0.0","what":"Added","title":"Changelog","text":"--vep_gencode_all - use GENCODE transcripts VEP annotation (basic GENCODE set) --prevalence_reference_signatures - set minimum prevalence (percent) selection reference signatures included refitting procedure given tumor type","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed","dir":"Articles","previous_headings":"v1.0.0","what":"Changed","title":"Changelog","text":"Complete restructure Python R components.Installation now relies two separate conda packages, pcgr (Python component) pcgrr (R component). Direct Docker support remains, Dockerfile simplified rely exclusively installation Conda packages.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed-1","dir":"Articles","previous_headings":"v1.0.0","what":"Removed","title":"Changelog","text":"VCF validation step. Feedback users suggested Ensembl’s vcf-validator often stringent use deprecated. --no_vcf_validate option remains backwards compatibility.","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-9-2","dir":"Articles","previous_headings":"","what":"v0.9.2","title":"Changelog","text":"Date: 2021-06-30 Data updates: ClinVar, GWAS catalog, CIViC, CancerMine, dbNSFP, KEGG, ChEMBL, Disease Ontology/EFO, Open Targets Platform, UniProt KB, GENCODE Software upgrades: R v4.1, Bioconductor v3.13, VEP (104) ++","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-1","dir":"Articles","previous_headings":"v0.9.2","what":"Changed","title":"Changelog","text":"NOTE: recommend turn --show_noncoding --vcf2maf (prevously turned default TOML). tumor-runs, recommend include --exclude_dbsnp_nonsomatic exclude_nonexonic","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-1","dir":"Articles","previous_headings":"v0.9.2","what":"Added","title":"Changelog","text":"--tumor_dp_tag --tumor_af_tag --control_dp_tag --control_af_tag --call_conf_tag --maf_onekg_eur --maf_onekg_amr --maf_onekg_afr --maf_onekg_eas --maf_onekg_sas --maf_onekg_global --maf_gnomad_nfe --maf_gnomad_asj --maf_gnomad_fin --maf_gnomad_oth --maf_gnomad_amr --maf_gnomad_afr --maf_gnomad_eas --maf_gnomad_sas --maf_gnomad_global --exclude_pon --exclude_likely_het_germline --exclude_likely_hom_germline --exclude_dbsnp_nonsomatic --exclude_nonexonic --report_theme --preserved_info_tags (previously custom_tags (TOML)) --show_noncoding (previously list_noncoding (TOML)) --vcfanno_n_proc (previously n_vcfanno_proc (TOML)) --vep_n_forks (previously n_vep_forks (TOML)) --vep_pick_order --vep_no_intergenic (previously vep_skip_intergenic (TOML)) --vcf2maf --report_nonfloating_toc (NEW) - add TOC top HTML report, floating left document --cpsr_report (NEW) - add dedicated section PCGR main germline findings CPSR analysis - (use gzipped JSON output CPSR input) --vep_regulatory (NEW) - append regulatory annotations variants (TF binding sites etc.) --include_artefact_signatures (NEW) - include sequencing artefacts reference collection mutational signatures (COSMIC v3.2)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-3","dir":"Articles","previous_headings":"v0.9.2","what":"Fixed","title":"Changelog","text":"Bug writing (large) report contents JSON (issue #118) Bug (typo) merge clinical evidence items different sources (CIVIC + CGI) (issue #126) Bug value box number (high-confident) kataegis events - rmarkdown (issue #122) Bug value box tumor purity/ploidy -rmarkdown (issue #129)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed-2","dir":"Articles","previous_headings":"v0.9.2","what":"Removed","title":"Changelog","text":"--conf - TOML-based configuration file","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-9-1","dir":"Articles","previous_headings":"","what":"v0.9.1","title":"Changelog","text":"Date: 2020-11-30 Data updates: ClinVar, GWAS catalog CIViC CancerMine dbNSFP KEGG ChEMBL/DGIdb Disease Ontology, Experimental Factor Ontology","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-2","dir":"Articles","previous_headings":"v0.9.1","what":"Added","title":"Changelog","text":"added possibility configure algorithm TMB calculation, optional argument tmb_algorithm - coding variants (all_coding) non-synonymous variants (nonsyn) R code subject static analysis lintr Improved Conda recipe (.e. meta.yaml) version pinning package dependencies","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-2","dir":"Articles","previous_headings":"v0.9.1","what":"Changed","title":"Changelog","text":"Removed DisGeNET annotations output (associations Open Targets Platform serve purpose) R packages necessary PCGR installed using renv framework, ensuring improved versioning reproducibility bedtools, samtools, numpy, cython, scipy, cyvcf2, toml, pandas","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-9-0rc","dir":"Articles","previous_headings":"","what":"v0.9.0rc","title":"Changelog","text":"Date: 2020-09-24 Data updates: ClinVar, GWAS catalog, GENCODE, CIViC, CancerMine, UniProt KB, dbNSFP, Pfam, KEGG, Open Targets Platform Software updates: VEP 101","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-4","dir":"Articles","previous_headings":"v0.9.0rc","what":"Fixed","title":"Changelog","text":"extra comma mistakenly present template tier 2 variants, issue #96 Missing protein domain annotations grch38, issue #116","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-3","dir":"Articles","previous_headings":"v0.9.0rc","what":"Changed","title":"Changelog","text":"arguments pcgr.py now non-positional Arguments pcgr.py divided two groups: required optional Options allelic_support:tumor_dp_min, allelic_support:tumor_af_min, allelic_support:control_dp_min, allelic_support:control_af_max PCGR configuration file now optional arguments --tumor_dp_min, --tumor_af_min, --control_dp_min, –control_af_maxincpsr.py` Option mutational_burden:mutational_burden PCGR configuration file now optional argument --estimate_tmb pcgr.py Option msi:msi PCGR configuration file now optional argument --estimate_msi_status pcgr.py Option mutational_signatures:mutational_signatures PCGR configuration file now optional argument --estimate_signatures pcgr.py Options mutational_signatures:mutsignatures_signature_limit, mutational_signatures:mutsignatures_normalization, mutational_signatures:mutsignatures_mutation_limit, mutational_signatures:mutsignatures_cutoff removed (used deconstructSigs analysis, longer use) Optional argument --cna_overlap_pct pcgr.py replaces cna:cna_overlap_pct PCGR configuration file Optional argument --logr_gain pcgr.py replaces cna:logr_gain PCGR configuration file Optional argument --logr_homdel pcgr.py replaces cna:logr_homdel PCGR configuration file Removed mutational_burden:tmb_low_limit mutational_burden:tmb_intermediate_limit - TMB longer interpreted context thresholds Classifications genes tumor suppressors/oncogenes now based combination CancerMine citation count presence Network Cancer Genes Metadata - sample sequencing assay Report configuration","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-3","dir":"Articles","previous_headings":"v0.9.0rc","what":"Added","title":"Changelog","text":"Optional argument --include_trials pcgr.py - includes section annotated clinical trials tumor type question Optional argument --assay pcgr.py - designates type sequencing assay Optional argument --cell_line pcgr.py - designates runs tumor cell lines (display, used configure analysis) Optional argument --min_mutations_signatures pcgr.py - minimum number required mutations mutational signature analysis MutationalPatterns Optional argument --all_reference_signatures pcgr.py - considers reference signatures fitting mutational profile known signatures Optional argument --estimate_signatures now also includes detection potential kataegis events (WGS/WES assays ), rainfall plot flexdashboard output user can now distinguish (color codes) whether biomarker mapped exactly (nucleotide change) regional level (codon/exon) variant-associated biomarkers (regardless assignment TIER 1/2) now found new section (SNVs/InDels) copy number amplifications, putative drug targets cancer listed new section Detailed documentation report contents added Documentation section References updated provided DOI","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-4","dir":"Articles","previous_headings":"","what":"v0.8.4","title":"Changelog","text":"Date: 2019-11-18 Data updates: ClinVar, CIViC, CancerMine, UniProt KB Software updates: VEP 98.3","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-3","dir":"Articles","previous_headings":"","what":"v0.8.3","title":"Changelog","text":"Date: 2019-10-14 Data updates: ClinVar, GWAS catalog, GENCODE, CIViC, CancerMine Software updates: VEP 98.2, vcf2tsv","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-5","dir":"Articles","previous_headings":"v0.8.3","what":"Fixed","title":"Changelog","text":"improved mapping Ensembl transcripts UniProt accessions (using also RefSeq accessions available)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-4","dir":"Articles","previous_headings":"v0.8.3","what":"Added","title":"Changelog","text":"Possibility filter evidence items RATING interactive data tables","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-4","dir":"Articles","previous_headings":"v0.8.3","what":"Changed","title":"Changelog","text":"Option target_size_mb pcgr.py replaces target_size_mb configuration file, convenient terms configuring runs Option tumor_type pcgr.py replaces tumor_type configuration file","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-2","dir":"Articles","previous_headings":"","what":"v0.8.2","title":"Changelog","text":"Date: 2019-09-29 Data updates: ClinVar, GWAS catalog, GENCODE, DiseaseOntology, CIViC, CancerMine, UniProt KB Software updates: VEP 97.3, vcfanno 0.3.2, LOFTEE (VEP plugin) 1.0.3","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-6","dir":"Articles","previous_headings":"v0.8.2","what":"Fixed","title":"Changelog","text":"Bug concatenation clinical evidence items different sources (CIVIC + CBMDB) (issues #83,#87) Silent variants coincide biomarkers reported codon level ignored Distinction clinical evidence items different origins (somatic + germline) Improved mapping Ensembl transcripts UniProt accessions (using also RefSeq accessions available) Bug UpSetPlot cases filtering produce less two intersecting sets","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-5","dir":"Articles","previous_headings":"v0.8.2","what":"Added","title":"Changelog","text":"New field ‘mane’ criteria pick order configuration file (VEP) Sample identifier copy number annotation output (convenient concatenation output multiple samples) Capturing allelic depth (t_depth, t_ref_count etc.) vcf2maf output (enhancement #52) Option tumor_only pcgr.py, replaces vcf_tumor_only configuration file, convenient terms configuration","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-1","dir":"Articles","previous_headings":"","what":"v0.8.1","title":"Changelog","text":"Date: 2019-05-22","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-6","dir":"Articles","previous_headings":"v0.8.1","what":"Added","title":"Changelog","text":"Cancer_NOS.toml configuration file unspecified tumor types","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-8-0","dir":"Articles","previous_headings":"","what":"v0.8.0","title":"Changelog","text":"Date: 2019-05-20","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-7","dir":"Articles","previous_headings":"v0.8.0","what":"Fixed","title":"Changelog","text":"Bug value box Tier 2 variants (new line carriage) Issue #73","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-7","dir":"Articles","previous_headings":"v0.8.0","what":"Added","title":"Changelog","text":"Skipping –regulatory VEP option avoid forking issues improve speed (See issue) Added option configure pick-order choice primary transcript configuration file Pre-made configuration files tumor type conf folder Possibility append CNA plot file (.png format) section report Somatic CNAs previous feature request shown value boxes Main results Default target size now 34Mb (approx. estimate exome-wide calculation protein-coding parts GENCODE) exclude_likely_hom_germline - removes variant allelic fraction 1 (100%) - unlikely somatic event allelic fraction 0.4 0.6, presence dbSNP + gnomAD, presence somatic event COSMIC/TCGA variants tumor coincide variant listed PANEL--NORMALS VCF appended PANEL_OF_NORMALS flag query VCF tumor variants. configuration parameter exclude_pon set True tumor_only runs, variants PANEL_OF_NORMALS flag filtered/excluded tumor-runs, added UpSet plot showing different filtering sources (gnomAD, 1KG Project, panel--normals etc) contribute germline filtering procedure Variants Tier 3 / Tier 4 / Noncoding now sorted (color-coded) according target (gene) association score cancer phenotype, provided OpenTargets Platform Added annotation TCGA’s ten oncogenic signaling pathways exonic denotes protein-altering cannonical splicesite altering synonymous variants, nonexonic denotes complement coding denotes protein-altering cannonical splicesite altering, noncoding denotes complement Official gene symbol NCBI EntreZ (SYMBOL provided VEP can sometimes non-official/alias (.e. GENCODE v19/grch37)) Variant overlaps UCSC simpleRepeat sequence repeat track - used MSI prediction Variant overlaps UCSC windowmaskerSdust sequence repeat track - used MSI prediction Putative cancer driver mutation discovered multiple approaches 9,423 tumor exomes TCGA. Format: symbol:hgvsp:ensembl_transcript_id:discovery_approaches Associations protein targets disease based multiple lines evidence (mutations,affected pathways,GWAS, literature etc). Format: CUI:EFO_ID:IS_DIRECT:OVERALL_SCORE Confidence existence modulator (small molecule) interacts target (protein) elicit desired biological effect Confidence existence modulator (antibody) interacts target (protein) elicit desired biological effect Rating ClinVar variant (0-4 stars) respect level review","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-5","dir":"Articles","previous_headings":"v0.8.0","what":"Changed","title":"Changelog","text":"Moved IntoGen’s driver mutation resource TCGA’s putative driver mutation list display driver mutation status Moved option vcf_validation configuration file run script (--no_vcf_validate)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed-3","dir":"Articles","previous_headings":"v0.8.0","what":"Removed","title":"Changelog","text":"Original tier model ‘pcgr’","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-7-0","dir":"Articles","previous_headings":"","what":"v0.7.0","title":"Changelog","text":"Date: 2018-11-27","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-8","dir":"Articles","previous_headings":"v0.7.0","what":"Fixed","title":"Changelog","text":"Bug assignment variants tier1/tier2 Issue #61 Missing config option maf_gnomad_asj TOML file (also setting operator <=) Issue #60 Bug new CancerMine oncogene/tumor suppressor annotation Issue #53 vcfanno fix empty Description (upgrade vcfanno v0.3.1 Issue #49) Bug message showing variants MSI prediction, Issue #55 Still unsolved: disambiguate identical FORMAT INFO tags vcf2tsv Bug SCNA value box display multiple copy number hits (Issue #47) Bug vcf2tsv (handling INFO tags encoded ‘Type = String’, Issue #39) Bug search UniProt functional features (BED feature regions spanning exons now handled) Stripped HTML elements (TCGA_FREQUENCY, DBSNP) TSV output effect predictions dbNSFP properly parsed (e.g. multiple prediction entries multiple transcript isoforms), now retrieved correctly Removed ‘COSM’ prefix COSMIC mutation links Bug retrieval splice site predictions dbscSNV","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-8","dir":"Articles","previous_headings":"v0.7.0","what":"Added","title":"Changelog","text":"Added possibility add docker user-id Possibility MAF file output (converted vcf2maf), must configured user TOML file (.e. vcf2maf = true, Issue #17) Possibility adding custom VCF INFO tags PCGR output files (JSON/TSV), must configured user TOML file (.e. custom_tags) Added MUTATION_HOTSPOT_CANCERTYPE data tables (.e. listing tumor types hotspot mutations found) Included ‘rs’ prefix dbSNP identifiers (HTML TSV output) Individual algorithms: SIFT_DBNSFP, M_CAP_DBNSFP, MUTPRED_DBNSFP, MUTATIONTASTER_DBNSFP, MUTATIONASSESSOR_DBNSFP, FATHMM_DBNSFP, FATHMM_MKL_DBNSFP, PROVEAN_DBNSFP Ensemble predictions (META_LR_DBNSFP), dbscSNV splice site predictions (SPLICE_SITE_RF_DBNSFP, SPLICE_SITE_ADA_DBNSFP) Upgraded samtools v1.9 (makes vcf2maf work properly) Added Ensembl gene/transcript id corresponding RefSeq mRNA id TSV/JSON SeqKat + karyoploteR exploration kataegis/hypermutation CELLector - genomics-guided selection cancer cell lines Upgraded VEP v94","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-6","dir":"Articles","previous_headings":"v0.7.0","what":"Changed","title":"Changelog","text":"Changed CANCER_MUTATION_HOTSPOT MUTATION_HOTSPOT minimum n=3 citations required include literatured-mined tumor suppressor genes proto-oncogenes CancerMine","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-2-1","dir":"Articles","previous_headings":"","what":"v0.6.2.1","title":"Changelog","text":"Date: 2018-05-14","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-9","dir":"Articles","previous_headings":"v0.6.2.1","what":"Fixed","title":"Changelog","text":"Bug copy number annotation (broad/focal)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-2","dir":"Articles","previous_headings":"","what":"v0.6.2","title":"Changelog","text":"Date: 2018-05-09","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-10","dir":"Articles","previous_headings":"v0.6.2","what":"Fixed","title":"Changelog","text":"Bug copy number segment display (missing variable initalization, Issue #34)) Typo gnomAD filter statistic (fraction, Issue #31) Bug mutational signature analysis grch38 (forgot pass BSgenome object, Issue #27) Missing proper ASCII-encoding vcf2tsv conversion, Issue # Removed ‘Noncoding mutations’ section input VCF present Bug annotation copy number event type (focal/broad) Bug copy number annotation (missing protein-coding transcripts) Updated MSI prediction (variable importance, performance measures)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-9","dir":"Articles","previous_headings":"v0.6.2","what":"Added","title":"Changelog","text":"Genome assembly appended every output file Issue warning copy number segment goes beyond chromosomal lengths specified assembly (segments skipped) Added missing subtypes ‘Skin_Cancer_NOS’ cancer phenotype dataset","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-1","dir":"Articles","previous_headings":"","what":"v0.6.1","title":"Changelog","text":"Date: 2018-05-02","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"fixed-11","dir":"Articles","previous_headings":"v0.6.1","what":"Fixed","title":"Changelog","text":"Bug tier assignment ‘pcgr_acmg’ (case variants tier1,2,3) Bug tier assignment ‘pcgr_acmg’ (tumor type specified, evidence items weak support detected) Bug: duplicated variants ‘Tier 3’ resulting genes encoded dual roles tumor suppressor genes/oncogenes Bug: duplicated variants ‘Tier 1/Noncoding variants’ resulting rare cases noncoding variants occurring Tier 1 (synonymous variants biomarker role)","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"v0-6-0","dir":"Articles","previous_headings":"","what":"v0.6.0","title":"Changelog","text":"Date: 2018-04-25","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"added-10","dir":"Articles","previous_headings":"v0.6.0","what":"Added","title":"Changelog","text":"assembly (grch37/grch38) –basic - run comprehensive VCF annotation , skip report generation additional analyses Settings annotation sources - now also listing key PCGR configuration settings Main findings - Six value boxes indicating main findings clinical relevance tier_model(string) - choice pcgr_acmg pcgr tmb_low_limit (float) tmb_intermediate_limit (float) Adrenal_Gland_Cancer_NOS (logical) Ampullary_Carcinoma_NOS (logical) Biliary_Tract_Cancer_NOS (logical) Bladder_Urinary_Tract_Cancer_NOS (logical) Blood_Cancer_NOS (logical) Bone_Cancer_NOS (logical) Breast_Cancer_NOS (logical) CNS_Brain_Cancer_NOS (logical) Colorectal_Cancer_NOS (logical) Cervical_Cancer_NOS (logical) Esophageal_Stomach_Cancer_NOS (logical) Head_And_Neck_Cancer_NOS (logical) Hereditary_Cancer_NOS (logical) Kidney_Cancer_NOS (logical) Leukemia_NOS (logical) Liver_Cancer_NOS (logical) Lung_Cancer_NOS (logical) Lymphoma_Hodgkin_NOS (logical) Lymphoma_Non_Hodgkin_NOS (logical) Ovarian_Fallopian_Tube_Cancer_NOS (logical) Pancreatic_Cancer_NOS (logical) Penile_Cancer_NOS (logical) Peripheral_Nervous_System_Cancer_NOS (logical) Peritoneal_Cancer_NOS (logical) Pleural_Cancer_NOS (logical) Prostate_Cancer_NOS (logical) Skin_Cancer_NOS (logical) Soft_Tissue_Cancer_NOS (logical) Stomach_Cancer_NOS (logical) Testicular_Cancer_NOS (logical) Thymic_Cancer_NOS (logical) Thyroid_Cancer_NOS (logical) Uterine_Cancer_NOS (logical) Vulvar_Vaginal_Cancer_NOS (logical) mutsignatures_cutoff (float) - discard signature contributions weight less cutoff transcript_cna_overlap (float) - minimum percent overlap copy number segment transcripts (average) tumor suppressor gene/proto-oncogene reported tumor_dp_min (integer) - minimum sequencing depth variant tumor sample tumor_af_min (float) - minimum allelic fraction variant tumor sample normal_dp_min (integer) - minimum sequencing depth variant normal sample normal_af_max (float) - maximum allelic fraction variant normal sample report_theme (string) - visual theme report (Bootstrap) vcf_validation (logical) - keep/skip VCF validation vcf-validator New output file - JSON output HTML report content CANCER_PREDISPOSITION PFAM_DOMAIN TCGA_FREQUENCY TCGA_PANCANCER_COUNT ICGC_PCAWG_OCCURRENCE ICGC_PCAWG_AFFECTED_DONORS CLINVAR_MEDGEN_CUI CANCER_PREDISPOSITION ICGC_PCAWG_OCCURRENCE TCGA_FREQUENCY TRANSCRIPTS - aberration-overlapping transcripts (Ensembl transcript IDs) MEAN_TRANSCRIPT_CNA_OVERLAP - Mean overlap (%) betweeen gene transcripts aberration segment","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"removed-4","dir":"Articles","previous_headings":"v0.6.0","what":"Removed","title":"Changelog","text":"dbsnp gnomad/exac 1000G project DBSNPBUILDID DBSNP_VALIDATION DBSNP_SUBMISSIONS DBSNP_MAPPINGSTATUS GWAS_CATALOG_PMID GWAS_CATALOG_TRAIT_URI DOCM_DISEASE Data can still retrieved - now JSON dump previous MAF output generated custom fashion, accurate MAF output based https://github.com/mskcc/vcf2maf incorporated next release","code":""},{"path":"https://sigven.github.io/pcgr/articles/CHANGELOG.html","id":"changed-7","dir":"Articles","previous_headings":"v0.6.0","what":"Changed","title":"Changelog","text":"Tier statistics Variant statistics now grouped section Tier variant statistics Tier 5 now Noncoding mutations (.e. considered tier per se) Sliders allelic fraction Global variant browser now fixed 0 1 (0.05 intervals)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"basic-variant-consequence-annotation","dir":"Articles","previous_headings":"","what":"Basic variant consequence annotation","title":"Annotation resources","text":"VEP - Variant Effect Predictor release 112 (GENCODE v46 gene reference database (v19 grch37))","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"insilico-predictions-of-effect-of-coding-variants","dir":"Articles","previous_headings":"","what":"Insilico predictions of effect of coding variants","title":"Annotation resources","text":"dBNSFP - database non-synonymous functional predictions (v4.5, November 2023)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"variant-frequency-databases","dir":"Articles","previous_headings":"","what":"Variant frequency databases","title":"Annotation resources","text":"gnomAD - germline variant frequencies exome-wide (r2.1, October 2018) dbSNP - database short genetic variants (build 154) Cancer Hotspots - resource statistically significant mutations cancer (v2, 2017) TCGA - somatic mutations discovered across 33 tumor type cohorts (release 39.0, December 2023)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"variant-databases-of-clinical-utility","dir":"Articles","previous_headings":"","what":"Variant databases of clinical utility","title":"Annotation resources","text":"ClinVar - database clinically related variants (June 2024) CIViC - clinical interpretations variants cancer (June 21st 2024) CGI - Cancer Genome Interpreter Cancer Biomarkers Database (CGI) (October 18th 2022)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"protein-domainsfunctional-features","dir":"Articles","previous_headings":"","what":"Protein domains/functional features","title":"Annotation resources","text":"UniProt/SwissProt KnowledgeBase - resource protein sequence functional information (2024_03) Pfam - database protein families domains (v35.0, November 2021)","code":""},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"knowledge-resources-on-gene-and-protein-targets","dir":"Articles","previous_headings":"","what":"Knowledge resources on gene and protein targets","title":"Annotation resources","text":"CancerMine - Literature-mined database tumor suppressor genes/proto-oncogenes (v50, March 2023) Open Targets Platform - Database disease-target associations, molecularly targeted drugs tractability aggregated multiple sources (literature, pathways, mutations) (2024.06)","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/annotation_resources.html","id":"data-quality","dir":"Articles","previous_headings":"Notes on variant annotation datasets","what":"Data quality","title":"Annotation resources","text":"Genomic biomarkers Genomic biomarkers included PCGR limited following: Evidence items specific markers CIViC must accepted (submitted evidence items considered shown) Markers reported exact variant level (e.g. BRAF p.V600E, __MET c.3028+1G>T, g.7:140753336A>T) Markers reported codon level (e.g. KRAS p.G12) Markers reported exon level (e.g. KIT exon 11 mutation, EGFR exon 19 deletion) Markers reported gene level (e.g. BRAF mutation, TP53 loss--function mutation, BRCA1 oncogenic mutation) Within Cancer bioMarkers database (CGI), markers collected FDA/NCCN guidelines, scientific literature, clinical trials included (markers collected conference abstracts etc. included) Copy number gains/losses See also comment closed GitHib issue","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"input-files","dir":"Articles","previous_headings":"","what":"Input files","title":"Input files","text":"PCGR workflow accepts three main input files: unannotated, single-sample VCF file (>= v4.2) called somatic variants (SNVs/InDels) allele-specific copy number segment file file transcript/gene expression levels input VCF required input file, somatic copy number file gene expression file optional. following arguments pcgr command used input files: --input_vcf (required argument pcgr) --input_cna --input_rna_expression addition three main input files, user can also opt provide panel--normals VCF file, well CPSR report (JSON), input.","code":""},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"vcf","dir":"Articles","previous_headings":"Input files","what":"VCF","title":"Input files","text":"strongly recommend input VCF compressed indexed using bgzip tabix input VCF contains multi-allelic sites, subject decomposition. Either way, encourage users prepare input VCF without presence multi-allelic sites. Variants used reporting designated PASS VCF FILTER column. Variants denoted e.g. Reject FILTER value subject analysis PCGR. records undefined values FILTER column ('.'), considered PASS variants.","code":""},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"formatting-of-allelic-depthsupport-dpad","dir":"Articles","previous_headings":"Input files > VCF","what":"Formatting of allelic depth/support (DP/AD)","title":"Input files","text":"representation variant genotype data (allelic depth support tumor vs. control sample) usually formatted genotype fields VCF file, per-sample basis. However, considering VCF output numerous somatic SNV/InDel callers use, experienced general lack uniformity information encoded genotype fields. order PCGR recognize type information robustly, currently require encode unambiguously INFO field VCF file. Shown VCF header entries look like input VCF, corresponding variant data encoded per record: VCF header VCF records run PCGR, make sure feed name INFO tags tool, .e. using tumor_dp_tagand tumor_af_tag options: effort support users procedure, hoping establish VCF pre-processing script, accepts VCF (caller), ensure file adheres formatting requirements PCGR. See also issue.","code":"##INFO=<ID=TVAF,Number=.,Type=Float,Description=\"Allelic fraction of alternative allele in tumor\"> ##INFO=<ID=TDP,Number=.,Type=Integer,Description=\"Read depth across variant site in tumor\"> #CHROM  POS ID  REF ALT QUAL    FILTER  INFO 1       23519660        .       G       C       .       PASS    TVAF=0.0980;TDP=51 pcgr --tumor_dp_tag TDP --tumor_af_tag TVAF"},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"other-notes-regarding-input-vcf","dir":"Articles","previous_headings":"Input files > VCF","what":"Other notes regarding input VCF","title":"Input files","text":"PCGR generates number VCF INFO annotation tags appended query VCF. therefore encourage users submit query VCF files subject annotations means, rather VCF file comes directly variant calling. , likely INFO tags query VCF file coincide produced PCGR. Note can preserve particular tags INFO field towards TSV output PCGR. Sometimes, can convenient investigate particular properties variants (encoded VCF) functional annotations (provided PCGR). achieve , use option --preserved_info_tags <TAG1>,<TAG2> etc.","code":""},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"panel-of-normals-vcf","dir":"Articles","previous_headings":"Input files","what":"Panel-of-normals VCF","title":"Input files","text":"user can submit panel--normals (PoN) VCF file PCGR, indicating variants excluded/filtered input VCF tumor-setting (.e. option --tumor_only). --pon_vcf <VCF_FILE> PoN VCF file needs contain following. following description needs present VCF header: record PoN VCF file needs contain PANEL_OF_NORMALS flag INFO field","code":"##INFO=<ID=PANEL_OF_NORMALS,Number=0,Type=Flag,Description=\"Overlap with germline call among panel of normals\">"},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"copy-number-segments---allele-specific","dir":"Articles","previous_headings":"Input files","what":"Copy number segments - allele-specific","title":"Input files","text":"tab-separated values file allele-specific copy number aberrations MUST contain following four columns: Chromosome Start End nMajor nMinor , Chromosome, Start, End denote chromosomal segment, nMajor nMinor denote major minor copy number particular segment, standard output somatic copy number alteration callers. Note coordinates must one-based (.e. chromosomes start 1, 0), copy numbers formatted whole integers, floating values. shows initial part copy number segment file formatted correctly according PCGR’s requirements: Importantly, can configure predefined thresholds segments considered high-level copy-number amplifications following option: --n_copy_gain: minimum (total) copy number segment considered amplification, default 6","code":"Chromosome    Start   End nMajor nMinor   1 3218329 3550598 1 0   1 3552451 4593614 1 1   1 4593663 6433129 2 1"},{"path":"https://sigven.github.io/pcgr/articles/input.html","id":"gene-expression","dir":"Articles","previous_headings":"Input files","what":"Gene expression","title":"Input files","text":"user can submit file bulk gene/transcript expression data PCGR, indicating relative expression levels genes query sample. data integrated variant calls output report, also subject RNA expression similarity analysis tumor samples. tab-separated values file gene expression estimates MUST contain following two columns: TargetID TPM TPM column indicates expression level given target, must provided Transcripts per million (log-transformed), relatively common output measure bulk RNA-seq pipelines. TargetID list transcript gene identifiers, preferably transcript level. Permitted identifier types including Ensembl/RefSeq identifiers transcript-level expression estimates, gene symbols Ensembl gene identifiers gene-level expression estimates.","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Installation","text":"PCGR requires following data run successfully: Reference bundle - containing data multiple knowledge resources, including information molecular biomarkers, targeted cancer therapies, variant frequencies etc. Key datasets include CIViC, CGI, Open Targets Platform, TCGA, ClinVar. Ensembl VEP data cache - needed variant annotation VEP (Variant Effect Predictor) User-supplied sample-specific inputs - e.g. somatic variant calls VCF format PCGR supports GRCh37 GRCh38 human genome assemblies. data need match chosen assembly.","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"reference-bundle","dir":"Articles","previous_headings":"Data","what":"1. Reference Bundle","title":"Installation","text":"Reference bundles generated semi-automatically (PCGR author) versioned based release date. Keep mind bundles support certain Ensembl VEP versions. latest (v20240621) genome-specific bundles can downloaded directly (size: ~5G): Tip 1: data/grch3x/.PCGR_BUNDLE_VERSION file within downloaded bundle indicates bundle version reporting purposes. Tip 2: data/grch3x/data_overview.grch3x.html file provides report overview statistics key resources included reference bundle.","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"bash-example","dir":"Articles","previous_headings":"Data > 1. Reference Bundle","what":"Bash Example","title":"Installation","text":"","code":"BUNDLE_VERSION=\"20240621\" GENOME=\"grch38\" # or \"grch37\" BUNDLE=\"pcgr_ref_data.${BUNDLE_VERSION}.${GENOME}.tgz\" wget https://insilico.hpc.uio.no/pcgr/${BUNDLE} gzip -dc ${BUNDLE} | tar xvf -  mkdir ${BUNDLE_VERSION} mv data/ ${BUNDLE_VERSION}"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"vep-cache","dir":"Articles","previous_headings":"Data","what":"2. VEP Cache","title":"Installation","text":"VEP requires data cache available Ensembl FTP site (search files starting homo_sapiens_vep_). latest Ensembl VEP version support v112. Tip: PCGR needs pointed parent directory containing downloaded homo_sapiens/xyz_GRCh3x/ cache, usually called .vep ’ve followed VEP cache download instructions.","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"bash-example-1","dir":"Articles","previous_headings":"Data > 2. VEP Cache","what":"Bash Example","title":"Installation","text":"","code":"VEP_VERSION=\"112\" GENOME=\"GRCh38\" # or \"GRCh37\" CACHE=\"homo_sapiens_vep_${VEP_VERSION}_${GENOME}.tar.gz\"  wget https://ftp.ensembl.org/pub/release-${VEP_VERSION}/variation/indexed_vep_cache/${CACHE} gzip -dc ${CACHE} | tar xvf -"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"sample-inputs","dir":"Articles","previous_headings":"Data","what":"3. Sample Inputs","title":"Installation","text":"See Inputs article.","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"software","dir":"Articles","previous_headings":"","what":"Software","title":"Installation","text":"PCGR workflow can installed following: . Conda, B. Docker, C. Singularity/Apptainer.","code":""},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"a--conda","dir":"Articles","previous_headings":"Software","what":"A. Conda","title":"Installation","text":"Conda support Linux macOS machines. following process can take anywhere 10 40 minutes installing scratch, mostly depending user’s server’s internet connection. time spent downloading {BSgenome.Hsapiens.UCSC.hg19} {BSgenome.Hsapiens.UCSC.hg38} R packages (happens end conda environment creation). Linux macOS macOS M1 machines, need include CONDA_SUBDIR=osx-64 conda create command - see https://github.com/conda-forge/miniforge/issues/165#issuecomment-860233092:","code":"PCGR_VERSION=\"2.0.3\" # set up variables PCGR_REPO=\"https://raw.githubusercontent.com/sigven/pcgr/v${PCGR_VERSION}/conda/env/lock/\" PLATFORM=\"linux\" # create conda envs in local directory mkdir pcgr_conda conda create --prefix ./pcgr_conda/pcgr --file ${PCGR_REPO}/pcgr-${PLATFORM}-64.lock conda create --prefix ./pcgr_conda/pcgrr --file ${PCGR_REPO}/pcgrr-${PLATFORM}-64.lock # you need to specify the directory of the conda env when using --prefix conda activate ./pcgr_conda/pcgr # test that it works pcgr --version pcgr --help PCGR_VERSION=\"2.0.3\" # set up variables PCGR_REPO=\"https://raw.githubusercontent.com/sigven/pcgr/v${PCGR_VERSION}/conda/env/lock/\" PLATFORM=\"osx\" # create conda envs in local directory mkdir pcgr_conda CONDA_SUBDIR=osx-64 conda create --prefix ./pcgr_conda/pcgr --file ${PCGR_REPO}/pcgr-${PLATFORM}-64.lock CONDA_SUBDIR=osx-64 conda create --prefix ./pcgr_conda/pcgrr --file ${PCGR_REPO}/pcgrr-${PLATFORM}-64.lock # you need to specify the directory of the conda env when using --prefix conda activate ./pcgr_conda/pcgr # test that it works pcgr --version pcgr --help"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"b--docker","dir":"Articles","previous_headings":"Software","what":"B. Docker","title":"Installation","text":"PCGR Docker image available Docker Hub. Pull latest v2.0.3 image :","code":"docker pull sigven/pcgr:2.0.3"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"example-run","dir":"Articles","previous_headings":"Software > B. Docker","what":"Example Run","title":"Installation","text":"","code":"PCGR_VERSION=\"2.0.3\" docker container run -it --rm \\     -v /Users/you/dir1/.vep:/mnt/.vep     -v /Users/you/dir1/bundle:/mnt/bundle \\     -v /Users/you/dir1/pcgr_inputs:/mnt/pcgr_inputs \\     -v /Users/you/dir1/pcgr_outputs:/mnt/pcgr_outputs \\     sigven/pcgr:${PCGR_VERSION} \\     pcgr \\       --input_vcf \"/mnt/pcgr_inputs/T001-BRCA.grch38.vcf.gz\" \\       --vep_dir \"/mnt/.vep\" \\       --refdata_dir \"/mnt/bundle\" \\       --output_dir \"/mnt/pcgr_outputs\" \\       --genome_assembly \"grch38\" \\       --sample_id \"SAMPLE_B\" \\       --tumor_dp_tag \"TDP\" \\       --tumor_af_tag \"TAF\" \\       --assay \"WGS\" \\       --vcf2maf"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"c--singularityapptainer","dir":"Articles","previous_headings":"Software","what":"C. Singularity/Apptainer","title":"Installation","text":"PCGR Singularity/Apptainer image available GitHub Container Registry. Pull latest v2.0.3 image : download Singularity Image File (SIF) called pcgr_2.0.3.singularity.sif can run Singularity Apptainer.","code":"apptainer pull oras://ghcr.io/sigven/pcgr:2.0.3.singularity"},{"path":"https://sigven.github.io/pcgr/articles/installation.html","id":"example-run-1","dir":"Articles","previous_headings":"Software > C. Singularity/Apptainer","what":"Example Run","title":"Installation","text":"Note: Apptainer/Singularity issues directly related PCGR, recommend reaching Apptainer community (e.g. https://github.com/apptainer/apptainer) since limited experience Apptainer/Singularity.","code":"PCGR_VERSION=\"2.0.3\" apptainer exec \\   --writable-tmpfs \\   --no-home \\   --env \"XDG_CACHE_HOME=/tmp/quarto_cache_home\" \\   -B /Users/you/dir1/.vep:/mnt/.vep \\   -B /Users/you/dir1/bundle:/mnt/bundle \\   -B /Users/you/dir1/pcgr_inputs:/mnt/pcgr_inputs \\   -B /Users/you/dir1/pcgr_outputs:/mnt/pcgr_outputs \\   pcgr_${PCGR_VERSION}.singularity.sif \\   pcgr \\     --input_vcf \"/mnt/pcgr_inputs/T001-BRCA.grch38.vcf.gz\" \\     --vep_dir \"/mnt/.vep\" \\     --refdata_dir \"/mnt/bundle\" \\     --output_dir \"/mnt/pcgr_outputs\" \\     --genome_assembly \"grch38\" \\     --sample_id \"SAMPLE_B\" \\     --assay \"WGS\" \\     --tumor_dp_tag \"TDP\" \\     --tumor_af_tag \"TAF\" \\     --vcf2maf"},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"output-files","dir":"Articles","previous_headings":"","what":"Output files","title":"Output files","text":"PCGR generates multiple output files annotations molecular aberrations, including interactive report, Excel workbook, pure text-based annotation files (TSV).","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"html-report---quarto-based","dir":"Articles","previous_headings":"Output files","what":"HTML report - quarto-based","title":"Output files","text":"interactive structured HTML report shows relevant findings query cancer genome following naming convention: sample_id provided input user, reflects unique identifier tumor-normal sample pair analyzed. report structured various sections, pending upon input provided user. following sections may included report: Lists key configurations analysis, including genome assembly, type sequencing assay (WES/WGS/TARGETED), cancer type (provided user), tumor purity ploidy. Provides overview somatic SNVs InDels detected tumor sample Includes global distribution allelic support, statistics respect variant types consequences permits exploration somatic mutations interactive filtering according several dimensions (variant sequencing depth/support, variant consequence etc.) individual evidence items linked actionable variants can explored, indicating strength evidence, tumor type therapeutic context, clinical significance Aberrations classified respect actionability (AMP/ASCO/CAP guidelines) individual evidence items linked actionable variants can explored, indicating strength evidence, tumor type therapeutic context, clinical significance potentially oncogenic aberrations listed, pProto-oncogenes subject copy number amplifications, tumor suppressor genes subject homozygous deletions MSI status Indicates predicted microsatellite stability somatic mutation profile supporting evidence (details underlying MSI statistical classifier can found ) MSI classifier trained TCGA exome samples. given coding target region size specified user (ideally callable target size), estimate mutational burden provided estimated TMB shown context TMB distributions different primary sites TCGA Mutational signatures Estimation relative contribution known mutational signatures tumor sample (using MutationalPatterns underlying framework) Datatable signatures found proposed underlying etiologies RNA expression analysis Datatable expression outliers - compared distribution reference cohorts Datatable correlation gene expression query sample reference cohorts (TCGA, TreeHouse, DepMap) Immune contexture profiling Documentation Report contents - brief description main sections report References - supporting scientific literature (key report elements)","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"example-reports","dir":"Articles","previous_headings":"Output files > HTML report - quarto-based","what":"Example reports","title":"Output files","text":"HTML reports tested using following browsers: Safari (Version 14.1.1 (16611.2.7.1.4)) Mozilla Firefox (83.0) Google Chrome (Version 90.0.4430.212 (Official Build) (x86_64))","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"variant-call-format---vcf","dir":"Articles","previous_headings":"Output files > SNVs/InDels","what":"1. Variant call format - VCF","title":"Output files","text":"VCF file containing annotated, somatic calls (single nucleotide variants insertion/deletions) generated following naming convention: sample_id provided input user, reflects unique identifier tumor-normal sample pair analyzed. Following common standards, annotated VCF file compressed bgzip indexed tabix. follows description annotations/tags present VCF INFO column processing PCGR annotation pipeline:","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"tab-separated-values-tsv","dir":"Articles","previous_headings":"Output files > SNVs/InDels","what":"2. Tab-separated values (TSV)","title":"Output files","text":"provide tab-separated values file important annotations SNVs/InDels. file following naming convention: <sample_id>.pcgr.<genome_assembly>.snv_indel_ann.tsv.gz following variables included TSV file (VCF tags issued user (--retained_info_tags) appended end):","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"tumor-mutational-burden-tsv","dir":"Articles","previous_headings":"Output files","what":"Tumor mutational burden (TSV)","title":"Output files","text":"provide tab-separated values (TSV) file information mutational burden detected tumor sample. file following naming convention: <sample_id>.pcgr.<genome_assembly>.tmb.tsv format TSV file following:","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"mutational-signature-contributions-tsv","dir":"Articles","previous_headings":"Output files","what":"Mutational signature contributions (TSV)","title":"Output files","text":"provide tab-separated values (TSV) file information mutational signatures detected tumor sample. file following naming convention: <sample_id>.pcgr.<genome_assembly>.msigs.tsv.gz format TSV file following:","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"tab-separated-values-tsv-1","dir":"Articles","previous_headings":"Output files > Copy number aberrations","what":"1. Tab-separated values (TSV)","title":"Output files","text":"Copy number segments intersected genomic coordinates transcripts GENCODE’s basic gene annotation. addition, PCGR attaches cancer-relevant annotations affected transcripts. naming convention compressed TSV file follows: NOTE: file organized according affected transcripts (.e. one line/record per affected transcript). format compressed TSV file following:","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"gene-expression-data","dir":"Articles","previous_headings":"Output files","what":"Gene expression data","title":"Output files","text":"users provide bulk RNA-seq expression data input, PCGR attach basic gene annotations affected transcripts, perform similarity analysis outlier detection configured user. naming convention compressed TSV files follows: NOTE: file organized according affected transcripts (.e. one line/record per affected transcript). Contains basic annotations affected transcripts. NOTE: file organized according samples gene expression cohorts (.e. similarity level, one line/record per sample). NOTE: file organized according genes considered outliers respect distribution expression levels found reference cohorts (one line/record per affected outlier/gene).","code":""},{"path":"https://sigven.github.io/pcgr/articles/output.html","id":"excel-workbook-xlsx","dir":"Articles","previous_headings":"Output files","what":"Excel workbook (XLSX)","title":"Output files","text":"Excel workbook contains multiple sheets data tables, mostly self-explainable, annotated datasets pending analysis performed (assay/sample data, SNVs/InDels, CNAs, biomarker evidence, TMB, MSI, mutational signatures, immune contexture profiling etc). naming convention Excel workbook follows: <sample_id>.pcgr.<genome_assembly>.xlsx. Note: reduce size SNVs/InDel sheets Excel workbook, include clinically actionable variants well exonic variants (including splice site variants, silent variants, protein-altering variants).","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"key-settings","dir":"Articles","previous_headings":"","what":"Key settings","title":"Running","text":", outline key settings important respect sequencing assay conducted.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"whole-genome-whole-exome-or-targeted-sequencing-assay","dir":"Articles","previous_headings":"Key settings","what":"Whole-genome, whole-exome or targeted sequencing assay","title":"Running","text":"default, PCGR expects input VCF comes whole-exome sequencing. can adjusted assay option, takes three alternative values: --assay <WGS|WES|TARGETED> input VCF comes targeted sequencing assay/panel (.e. --assay TARGETED), target size assay/panel adjusted accordingly, critical tumor mutational burden estimation. Assay target size, reflecting protein-coding portion assayed genomic region megabases, can configured following option: --effective_target_size_mb <value> Ideally, reflect callable target size assay, .e. size target regions coding variants sufficiently covered (.e. certain sequencing depth) sequencing assay. can estimated user based design sequencing assay, using tools mosdepth.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"tumor-control-vs--tumor-only","dir":"Articles","previous_headings":"Key settings","what":"Tumor-control vs. tumor-only","title":"Running","text":"default, PCGR expects input VCF contains somatic variants identified tumor-control sequencing setup. implies VCF contains information respect variant allelic depth/support tumor sample corresponding control sample. input VCF comes tumor-assay, turn --tumor_only option. mode, PCGR conducts set successive filtering steps raw input set variants, aiming exclude majority germline variants tumor-input set. addition default filtering applied variants found gnomAD database (population-specific allele frequency thresholds can configured, see ), additional filtering procedures can explicitly set, .e.: --exclude_dbsnp_nonsomatic --exclude_likely_het_germline --exclude_likely_hom_germline --exclude_nonexonic Users note filters may occasionally remove true somatic variants, thus used caution. user provided panel--normals VCF file input(--pon_vcf), one may also opt remove variants found variant collection using dedicated option: --exclude_pon IMPORTANT NOTE 1: number analyses available PCGR particularly well-suited tumor-input, e.g. mutational signature analysis MSI status prediction. IMPORTANT NOTE 2: run PCGR tumor-WGS assays, strongly recommend pre-filter VCF exome, since frequently encountered large unfiltered variant set assays cause crash PCGR. See also issue.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"sample-properties","dir":"Articles","previous_headings":"Key settings","what":"Sample properties","title":"Running","text":"selected properties tumor sample determined prior PCGR analysis can provided, currently used display/reporting: --tumor_ploidy <value> - ploidy estimate --tumor_purity <value> - purity estimate","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"tumor-site","dir":"Articles","previous_headings":"Key settings > Sample properties","what":"Tumor site","title":"Running","text":"primary tissue/site tumor sample analyzed can provided, following option: --tumor_site <value> option takes value 0 30, reflecting main primary sites/tissues human cancers. Note default value 0 (implies tissue/site), essentially prohibits presence tier 1 variants occurring report. want check nature cancer subtypes attributed primary tissue/sites, take look table phenotype terms associated primary sites.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"allelic-support","dir":"Articles","previous_headings":"Key settings","what":"Allelic support","title":"Running","text":"Proper designation INFO tags input VCF denote variant depth/allelic fraction critical make report comprehensive possible. See input section accomplish . Several options used inform PCGR tags VCF INFO field encodes information: --tumor_dp_tag <value> --tumor_af_tag <value> --control_dp_tag <value> --control_af_tag <value> tags set correctly, one may set thresholds (sequencing depth /allelic fraction) variants included report, .e. : --tumor_dp_min <value> --tumor_af_min <value> --control_dp_min <value> --control_af_max <value>","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"tumor-mutational-burden-tmb","dir":"Articles","previous_headings":"Key settings > Allelic support","what":"Tumor mutational burden (TMB)","title":"Running","text":"tags allelic support provided VCF configured user, users can configure TMB calculation setting minimum requirements sequencing coverage allelic fraction, .e.: --tmb_dp_min <value> --tmb_af_min <value>","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"large-input-sets-vcf","dir":"Articles","previous_headings":"Key settings","what":"Large input sets (VCF)","title":"Running","text":"input VCF files > 500,000 variants, note subject filtering prior final step PCGR (step 4: reporting). scenarios, raw input sets filtered according consequence type, sense intergenic/intronic/upstream/downstream gene variants excluded prior reporting. necessary step avoid memory issues etc. processing PCGR R package. large input VCF, sufficient memory capacity compute platform, also recommend increase VEP buffer size (option --vep_buffer_size), speed VEP processing significantly.","code":""},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"all-options","dir":"Articles","previous_headings":"","what":"All options","title":"Running","text":"tumor sample report generated running pcgr command, takes following arguments options:","code":"usage:      pcgr -h [options]      --input_vcf <INPUT_VCF>     --vep_dir <VEP_DIR>     --refdata_dir <REFDATA_DIR>     --output_dir <OUTPUT_DIR>     --genome_assembly <GENOME_ASSEMBLY>     --sample_id <SAMPLE_ID>   Personal Cancer Genome Reporter (PCGR) workflow for clinical translation of tumor omics data (SNVs/InDels, CNA, RNA expression)  Required arguments:   --input_vcf INPUT_VCF                         VCF input file with somatic variants in tumor sample, SNVs/InDels   --vep_dir VEP_DIR     Directory of VEP cache, e.g.  $HOME/.vep   --refdata_dir REFDATA_DIR                         Directory where PCGR reference data bundle was downloaded and unpacked   --output_dir OUTPUT_DIR                         Output directory   --genome_assembly {grch37,grch38}                         Human genome assembly build: grch37 or grch38   --sample_id SAMPLE_ID                         Tumor sample/cancer genome identifier - prefix for output files  Sequencing assay options:   --assay {WGS,WES,TARGETED}                         Type of DNA sequencing assay performed for input data (VCF), default: WES   --effective_target_size_mb EFFECTIVE_TARGET_SIZE_MB                         Effective target size in Mb (potentially limited by read depth) of sequencing assay (for TMB analysis) (default: 34 (WES/WGS))   --tumor_only          Input VCF comes from tumor-only sequencing, calls will be filtered for variants of germline origin, (default: False)   Tumor sample options:   --tumor_site TSITE    Optional integer code to specify primary tumor type/site of query sample,                         choose any of the following identifiers:                         0 = Any                         1 = Adrenal Gland                         2 = Ampulla of Vater                         3 = Biliary Tract                         4 = Bladder/Urinary Tract                         5 = Bone                         6 = Breast                         7 = Cervix                         8 = CNS/Brain                         9 = Colon/Rectum                         10 = Esophagus/Stomach                         11 = Eye                         12 = Head and Neck                         13 = Kidney                         14 = Liver                         15 = Lung                         16 = Lymphoid                         17 = Myeloid                         18 = Ovary/Fallopian Tube                         19 = Pancreas                         20 = Peripheral Nervous System                         21 = Peritoneum                         22 = Pleura                         23 = Prostate                         24 = Skin                         25 = Soft Tissue                         26 = Testis                         27 = Thymus                         28 = Thyroid                         29 = Uterus                         30 = Vulva/Vagina                         (default: 0 - any tumor type)   --tumor_purity TUMOR_PURITY                         Estimated tumor purity (between 0 and 1) (default: None)   --tumor_ploidy TUMOR_PLOIDY                         Estimated tumor ploidy (default: None)  Allelic support options:   --tumor_dp_tag TUMOR_DP_TAG                         Specify VCF INFO tag for sequencing depth (tumor, must be Type=Integer, default: _NA_   --tumor_af_tag TUMOR_AF_TAG                         Specify VCF INFO tag for variant allelic fraction (tumor,  must be Type=Float, default: _NA_   --control_dp_tag CONTROL_DP_TAG                         Specify VCF INFO tag for sequencing depth (control, must be Type=Integer, default: _NA_   --control_af_tag CONTROL_AF_TAG                         Specify VCF INFO tag for variant allelic fraction (control, must be Type=Float, default: _NA_   --call_conf_tag CALL_CONF_TAG                         Specify VCF INFO tag for somatic variant call confidence (must be categorical, e.g. Type=String, default: _NA_   --tumor_dp_min TUMOR_DP_MIN                         If VCF INFO tag for sequencing depth (tumor) is specified and found, set minimum required depth for inclusion in report (default: 0)   --tumor_af_min TUMOR_AF_MIN                         If VCF INFO tag for variant allelic fraction (tumor) is specified and found, set minimum required AF for inclusion in report (default: 0)   --control_dp_min CONTROL_DP_MIN                         If VCF INFO tag for sequencing depth (control) is specified and found, set minimum required depth for inclusion in report (default: 0)   --control_af_max CONTROL_AF_MAX                         If VCF INFO tag for variant allelic fraction (control) is specified and found, set maximum tolerated AF for inclusion in report (default: 1)  Tumor-only filtering options:   --pon_vcf PON_VCF     VCF file with germline calls from Panel of Normals (PON) - i.e. blacklisted variants, (default: None)   --maf_gnomad_nfe MAF_GNOMAD_NFE                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - European (non-Finnish), default: 0.002)   --maf_gnomad_asj MAF_GNOMAD_ASJ                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - Ashkenazi Jewish, default: 0.002)   --maf_gnomad_fin MAF_GNOMAD_FIN                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - European (Finnish), default: 0.002)   --maf_gnomad_oth MAF_GNOMAD_OTH                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - Other, default: 0.002)   --maf_gnomad_amr MAF_GNOMAD_AMR                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - Latino/Admixed American, default: 0.002)   --maf_gnomad_afr MAF_GNOMAD_AFR                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - African/African-American, default: 0.002)   --maf_gnomad_eas MAF_GNOMAD_EAS                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - East Asian, default: 0.002)   --maf_gnomad_sas MAF_GNOMAD_SAS                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - South Asian, default: 0.002)   --maf_gnomad_global MAF_GNOMAD_GLOBAL                         Exclude variants in tumor (SNVs/InDels, tumor-only mode) with MAF > pct, (gnomAD - global population, default: 0.002)   --exclude_pon         Exclude variants occurring in PoN (Panel of Normals, if provided as VCF (--pon_vcf), default: False)   --exclude_likely_hom_germline                         Exclude likely homozygous germline variants (allelic fraction of 1.0 for alternate allele in tumor - very unlikely somatic event), default: False)   --exclude_likely_het_germline                         Exclude likely heterozygous germline variants (0.4-0.6 allelic fraction, AND presence in dbSNP + gnomAD, AND not existing as somatic record in COSMIC OR TCGA, default: False)   --exclude_clinvar_germline                         Exclude variants found in ClinVar (germline variant origin), defult: False)   --exclude_dbsnp_nonsomatic                         Exclude variants found in dbSNP (except for those present in ClinVar (somatic origin) OR TCGA OR COSMIC), defult: False)   --exclude_nonexonic   Exclude non-exonic variants, default: False)  VEP options:   --vep_n_forks VEP_N_FORKS                         Number of forks (VEP option '--fork'), default: 4   --vep_buffer_size VEP_BUFFER_SIZE                         Variant buffer size (variants read into memory simultaneously, VEP option '--buffer_size')                         - set lower to reduce memory usage, default: 500   --vep_pick_order VEP_PICK_ORDER                         Comma-separated string of ordered transcript/variant properties for selection of primary variant consequence                         (option '--pick_order' in VEP), default: mane_select,mane_plus_clinical,canonical,appris,tsl,biotype,ccds,rank,length   --vep_no_intergenic   Skip intergenic variants during variant annotation (VEP option '--no_intergenic' in VEP), default: False   --vep_regulatory      Add VEP regulatory annotations (VEP option '--regulatory') or non-coding interpretation, default: False   --vep_gencode_basic   Consider basic GENCODE transcript set only with Variant Effect Predictor (VEP) (VEP option '--gencode_basic').  Tumor mutational burden (TMB) and MSI options:   --estimate_tmb        Estimate tumor mutational burden from the total number of somatic mutations and target region size, default: False   --tmb_display {coding_and_silent,coding_non_silent,missense_only}                         Type of TMB measure to show in report, default: coding_and_silent   --tmb_dp_min TMB_DP_MIN                         If VCF INFO tag for sequencing depth (tumor) is specified and found, set minimum required sequencing depth for TMB calculation: default: 0   --tmb_af_min TMB_AF_MIN                         If VCF INFO tag for allelic fraction (tumor) is specified and found, set minimum required allelic fraction for TMB calculation: default: 0   --estimate_msi        Predict microsatellite instability status from patterns of somatic mutations/indels, default: False  Mutational signature options:   --estimate_signatures                         Estimate relative contributions of reference mutational signatures in query sample (re-fitting), default: False   --min_mutations_signatures MIN_MUTATIONS_SIGNATURES                         Minimum number of SNVs required for re-fitting of mutational signatures (SBS) (default: 200, minimum n = 100)   --all_reference_signatures                         Use _all_ reference mutational signatures (SBS) during signature re-fitting rather than only those already attributed to the tumor type (default: False)   --include_artefact_signatures                         Include sequencing artefacts in the collection of reference signatures (default: False   --prevalence_reference_signatures PREVALENCE_REFERENCE_SIGNATURES                         Minimum tumor-type prevalence (in percent) of reference signatures to be included in refitting procedure (default: 0.1)  Somatic copy number alteration (CNA) data options:   --input_cna INPUT_CNA                         Somatic copy number alteration segments (tab-separated values)   --n_copy_gain N_COPY_GAIN                         Minimum number of total copy number for segments considered as gains/amplifications (default: 6)   --cna_overlap_pct CNA_OVERLAP_PCT                         Mean percent overlap between copy number segment and gene transcripts for reporting of gains/losses in tumor suppressor genes/oncogenes, (default: 50)  Bulk RNA-seq and RNA fusion data options:   --input_rna_expression INPUT_RNA_EXP                         File with bulk RNA expression counts (TPM) of transcripts in tumor (tab-separated values)   --expression_sim      Compare expression profile of tumor sample to known expression profiles (default: False)   --expression_sim_db EXPRESSION_SIM_DB                         Comma-separated string of databases for used in RNA expression similarity analysis, default: tcga,depmap,treehouse  Other options:   --vcf2maf             Generate a MAF file for input VCF using https://github.com/mskcc/vcf2maf (default: False)   --vcfanno_n_proc VCFANNO_N_PROC                         Number of vcfanno processes (option '-p' in vcfanno), default: 4   --ignore_noncoding    Ignore non-coding (i.e. non protein-altering) variants in report, default: False   --retained_info_tags RETAINED_INFO_TAGS                         Comma-separated string of VCF INFO tags from query VCF that should be kept in PCGR output TSV file   --force_overwrite     By default, the script will fail with an error if any output file already exists. You can force the overwrite of existing result files by using this flag, default: False   --version             show program's version number and exit   --no_reporting        Run functional variant annotation on VCF through VEP/vcfanno, omit other analyses (i.e. Tier assignment/MSI/TMB/Signatures etc. and report generation (STEP 4), default: False   --debug               Print full commands to log   --pcgrr_conda PCGRR_CONDA                         pcgrr conda env name (default: pcgrr)"},{"path":"https://sigven.github.io/pcgr/articles/running.html","id":"example-run","dir":"Articles","previous_headings":"","what":"Example run","title":"Running","text":"examples folder contains input VCF files two tumor samples sequenced within TCGA. molecular interpretation report colorectal tumor sample can generated running following command terminal window (assumes installed PCGR Conda, downloaded necessary reference data files, VEP cache, see Installation): command run Conda-based PCGR workflow produce following files /Users//dir4/pcgr_outputs folder:","code":"$ (base) conda activate pcgr $ (pcgr) pcgr \\     --refdata_dir /Users/you/dir2/data \\     --vep_dir /Users/you/dir3/vep/.vep \\     --output_dir /Users/you/dir4/pcgr_outputs \\     --sample_id T001-COAD \\     --genome_assembly grch37 \\     --input_vcf /Users/you/pcgr/examples/T001-COAD.grch37.vcf.gz \\     --tumor_dp_tag TDP \\     --tumor_af_tag TVAF \\     --tumor_site 9 \\     --input_cna /Users/you/pcgr/examples/T001-COAD.cna.tsv \\     --tumor_purity 0.9 \\     --tumor_ploidy 2.0 \\     --assay WES \\     --vcf2maf \\     --estimate_signatures \\     --estimate_msi \\     --estimate_tmb \\     --force_overwrite"},{"path":"https://sigven.github.io/pcgr/articles/variant_classification.html","id":"oncogenicity","dir":"Articles","previous_headings":"","what":"Oncogenicity","title":"Variant classification","text":"PCGR evaluates somatic aberrations (SNV/InDels) oncogenic potential implementation standard operating procedures proposed VICC/CGC/ClinGen. , various properties variants genes affected assigned criteria-specific scores, negative positive, pending whether properties support oncogenic benign variant nature. Criteria-specific scores turn aggregated towards overall oncogenicity score per variant. Note properties/criteria provided SOP’s readily implemented PCGR, specifically ones requiring manual curation expert review (.e. experimental oncogenic variant evidence, requring support vitro vivo functional studies (criteria OM1/OS1)). implies variants interrogated PCGR may classified oncogenic, even though classified functional evidence available. Considering nature current implementation, thus also adopted slightly different score thresholds variant classifications proposed originally Horak et al., 2022. working improve oncogenicity classification PCGR, welcome feedback matter. Note also somatic copy number aberrations, showcase potential oncogenic events proto-oncogenes subject amplifications (level amplification configurable user), well astumor suppressor genes subject homozygous deletions. following criteria currently used oncogenicity classification PCGR: CLINGEN_VICC_SBVS1 - high MAF (> 0.05 gnomAD - five major continental pops) CLINGEN_VICC_SBS1 - High MAF (> 0.01 gnomAD - five major continental pops) CLINGEN_VICC_SBP1 - Insilico support benign effect gene gene product (multiple lines evidence (>= 7 algorithms) dbNSFP) CLINGEN_VICC_SBP2 - Silent intronic changes outside consensus splice site (VEP consequence) CLINGEN_VICC_OVS1 - Null variant - bona fide tumor suppressor gene (predicted LoF tumor suppressors CGC/NCG/CancerMine) CLINGEN_VICC_OS3 - Located mutation hotspot, >= 50 samples variant amino acid position, >= 10 samples amino acid change (cancerhotspots.org) CLINGEN_VICC_OM1 - Located presumably critical site functional domain - , implemented indirect evidence overlap known oncogenic predictive (actionable) biomarkers CLINGEN_VICC_OM2 - Protein length changes -frame dels/ins known oncogene/tumor suppressor genes stop-loss variants tumor suppressor gene (tumor suppressors/oncogenes CGC/NCG/CancerMine) CLINGEN_VICC_OM3 - Located mutation hotspot, < 50 samples variant amino acid position, >= 10 samples amino acid change (cancerhotspots.org) CLINGEN_VICC_OP1 - Insilico support damaging effect gene gene product (multiple lines evidence (>= 7 algorithms) dbNSFP) CLINGEN_VICC_OP3 - Located mutation hotspot, < 10 samples amino acid change (cancerhotspots.org) CLINGEN_VICC_OP4 - Absent controls (gnomAD) / low MAF ( < 0.0001 five major subpopulations)","code":""},{"path":"https://sigven.github.io/pcgr/articles/variant_classification.html","id":"actionability","dir":"Articles","previous_headings":"","what":"Actionability","title":"Variant classification","text":"PCGR prioritizes evaluates variants according clinical actionability. Currently, PCGR implements tier classification framework along proposed AMP/ASCO/CAP guidelines, detailed . tier model attempts adopt concensus recommendations AMP/ASCO/CAP, outlined Li et al., 2017: : found within tumor type/class specified user, B: strong clinical evidence (.e. part guidelines, validated discovered late clinical trials) : strong clinical evidence tumor types/classes one specified user, B: weak clinical evidence (early trials, case reports etc.) tumor type/class specified user Tier III: Variants uncertain clinical significance - includes coding variants found proto-oncogenes tumor suppressor genes (SNVs indels ) PCGR, skip classification variants AMP/ASCO/CAP-specified Tier IV (benign/likely benign variants), rather take cautious approach. Specifically, SNVs/indels fall tier , II, III, classify Tier V: coding variants, includes protein-coding variants, well Tier VI: non-coding variants, includes synonymous variants, intronic variants, variants non-coding regions.","code":""},{"path":"https://sigven.github.io/pcgr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sigve Nakken. Author, maintainer. Peter Diakumis. Author, contributor.","code":""},{"path":"https://sigven.github.io/pcgr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sigve Nakken, Ghislain Fournous, Daniel Vodák, Lars Birger Aaasheim, Ola Myklebost, Eivind Hovig. Personal Cancer Genome Reporter: variant interpretation report precision oncology (2017). Bioinformatics. 34(10):1778–1780. doi:10.1093/bioinformatics/btx817","code":"@Article{,   title = {Personal Cancer Genome Reporter: variant interpretation report for precision oncology},   author = {Sigve Nakken and Ghislain Fournous and Daniel Vodák and Lars Birger Aasheim and Ola Myklebost and Eivind Hovig},   journal = {Bioinformatics},   year = {2017},   month = {12},   volume = {34},   number = {10},   pages = {1778-1780},   url = {https://doi.org/10.1093/bioinformatics/btx817}, }"},{"path":"https://sigven.github.io/pcgr/index.html","id":"personal-cancer-genome-reporter-pcgr-","dir":"","previous_headings":"","what":"Personal Cancer Genome ReporteR","title":"Personal Cancer Genome ReporteR","text":"Personal Cancer Genome Reporter (PCGR) stand-alone software package functional annotation translation individual tumor genomes precision cancer medicine. interprets primarily somatic SNVs/InDels copy number aberrations, additional support interpretation bulk RNA-seq expression data. software classifies variants respect oncogenicity, actionability. Interactive HTML output reports allow user interrogate clinical impact molecular findings individual tumor. according oncogenicity: evaluating oncogenic potential somatic DNA aberrations (VICC/CGC/ClinGen guidelines) according actionability: mapping therapeutic, diagnostic, prognostic implications somatic DNA aberrations (AMP/ASCO/CAP guidelines) Tumor mutational burden (TMB) estimation Mutational signature analysis Microsatellite instability (MSI) classification RNA-seq support - gene expression outlier detection, sample similarity analysis, immune contexture profiling PCGR supports recent human genome assemblies (GRCh37/GRCh38), accepts variant calls tumor-control tumor-sequencing assays. Much functionality intended whole-exome/whole-genome sequencing assays, can also apply PCGR output targeted sequencing panels. interested interrogation germline variants relation cancer predisposition, recommend trying accompanying tool Cancer Predisposition Sequencing Reporter (CPSR). Example screenshots quarto-based cancer genome report PCGR:  PCGR originates Norwegian Cancer Genomics Consortium (NCGC), Institute Cancer Research, Oslo University Hospital, Norway.","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"top-news","dir":"","previous_headings":"","what":"Top News","title":"Personal Cancer Genome ReporteR","text":"patch fix purity/ploidy propagation, MAF output tumor-runs, minor issues CHANGELOG patch ensure correct reference actionability guidelines CHANGELOG patch bug fix mitochondrial input variants (pr245) CHANGELOG Details CHANGELOG Massive reference data bundle upgrade, new report layout, oncogenicity classification++ Support Singularity/Apptainer Ensembl VEP v112 ClinVar (2024-06) CIViC (2024-06-21) GENCODE v46/v19 (GRCh38/GRCh37) CancerMine v50 (2023-03) UniProt KB v2024_03 Details CHANGELOG prioritize protein-coding BIOTYPE csq (pr201) expose --pcgrr_conda option flexibly activate pcgrr env via non-default pcgrr name cpsr_validate_input.py: refactor efficient custom gene egrep Keep autosomal, X, Y, M/MT chromosomes Import bcftools dependency","code":""},{"path":[]},{"path":"https://sigven.github.io/pcgr/index.html","id":"why-use-pcgr","dir":"","previous_headings":"","what":"Why use PCGR?","title":"Personal Cancer Genome ReporteR","text":"great complexity acquired mutations individual tumor genomes poses severe challenge clinical interpretation. PCGR aims comprehensive reporting platform can systematically interrogate tumor-specific variants context known therapeutic, diagnostic, prognostic biomarkers highlight genomic aberrations likely oncogenic potential provide structured concise summary relevant findings present results format accessible clinical experts PCGR integrates comprehensive set knowledge resources related tumor biology therapeutic biomarkers, gene, level individual variants. software generates comprehensive molecular interpretation report supports translation individual cancer genomes towards molecularly guided treatment strategies.","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Personal Cancer Genome ReporteR","text":"Installation instructions Run example Learn : Details regarding PCGR input files, formatted Configuration key settings types contents PCGR output files Variant classifications implemented PCGR Primary tumor sites used PCGR list gene variant annotation resources used PCGR annotation Frequently asked questions (FAQ)","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Personal Cancer Genome ReporteR","text":"use PCGR, please cite publication: Sigve Nakken, Ghislain Fournous, Daniel Vodák, Lars Birger Aaasheim, Ola Myklebost, Eivind Hovig. Personal Cancer Genome Reporter: variant interpretation report precision oncology (2017). Bioinformatics. 34(10):1778–1780. doi.org/10.1093/bioinformatics/btx817","code":""},{"path":"https://sigven.github.io/pcgr/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Personal Cancer Genome ReporteR","text":"sigven ifi.uio.","code":""},{"path":"https://sigven.github.io/pcgr/reference/af_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots a histogram of the the variant allelic support (tumor) — af_distribution","title":"Function that plots a histogram of the the variant allelic support (tumor) — af_distribution","text":"Function plots histogram variant allelic support (tumor)","code":""},{"path":"https://sigven.github.io/pcgr/reference/af_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots a histogram of the the variant allelic support (tumor) — af_distribution","text":"","code":"af_distribution(var_df, bin_size = 0.05)"},{"path":"https://sigven.github.io/pcgr/reference/af_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots a histogram of the the variant allelic support (tumor) — af_distribution","text":"var_df data frame somatic mutations bin_size size bins allelic frequency","code":""},{"path":"https://sigven.github.io/pcgr/reference/af_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots a histogram of the the variant allelic support (tumor) — af_distribution","text":"p geom_histogram plot ggplot2","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_annotation_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends multiple HTML annotation links to variant identifiers e.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","title":"Function that appends multiple HTML annotation links to variant identifiers e.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"Function appends multiple HTML annotation links variant identifiers e.g. COSMIC, CLINVAR, REFSEQ etc","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_annotation_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends multiple HTML annotation links to variant identifiers e.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"","code":"append_annotation_links(var_data_df, vartype = \"snv_indel\", skip = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/append_annotation_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends multiple HTML annotation links to variant identifiers e.g. COSMIC, CLINVAR, REFSEQ etc — append_annotation_links","text":"var_data_df data frame variant entries vartype 'snv_indel' 'cna', 'exp' skip elements ignored annotation","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_association_ranks.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends cancer gene evidence links — append_cancer_association_ranks","title":"Function that appends cancer gene evidence links — append_cancer_association_ranks","text":"Function appends cancer gene evidence links","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_association_ranks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends cancer gene evidence links — append_cancer_association_ranks","text":"","code":"append_cancer_association_ranks(   var_data_df = NULL,   ref_data = NULL,   primary_site = \"Any\" )"},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_association_ranks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends cancer gene evidence links — append_cancer_association_ranks","text":"var_data_df Data frame sample variants VCF ref_data PCGR/CPSR reference data object primary_site Primary tumor site","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_association_ranks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that appends cancer gene evidence links — append_cancer_association_ranks","text":"vcf_data_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_gene_evidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends cancer gene evidence links — append_cancer_gene_evidence","title":"Function that appends cancer gene evidence links — append_cancer_gene_evidence","text":"Function appends cancer gene evidence links","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_gene_evidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends cancer gene evidence links — append_cancer_gene_evidence","text":"","code":"append_cancer_gene_evidence(var_data_df = NULL, ref_data = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_gene_evidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends cancer gene evidence links — append_cancer_gene_evidence","text":"var_data_df Data frame sample variants VCF ref_data PCGR/CPSR reference data object","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_cancer_gene_evidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that appends cancer gene evidence links — append_cancer_gene_evidence","text":"var_data_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbmts_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"Function adds miRNA target annotations (dbMTS) genetic variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbmts_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"","code":"append_dbmts_var_link(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/append_dbmts_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds miRNA target annotations (dbMTS) to genetic variant identifiers — append_dbmts_var_link","text":"var_df data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"Function assigns HTML links dbNSFP prediction entries","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"","code":"append_dbnsfp_var_link(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"var_df data frame variant entries","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_dbnsfp_var_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns HTML links to dbNSFP prediction entries — append_dbnsfp_var_link","text":"var_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_drug_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_drug_var_link","title":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_drug_var_link","text":"Function adds link targeted drugs (-label) list variants associated targeted","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_drug_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_drug_var_link","text":"","code":"append_drug_var_link(var_df, primary_site = \"Breast\", ref_data = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/append_drug_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_drug_var_link","text":"var_df data frame variants primary_site primary tumor sample site ref_data PCGR/CPSR reference data object","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"Function adds GWAS citation/phenotype GWAS hit found PCGR annotation","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"","code":"append_gwas_citation_phenotype(vcf_data_df = NULL, ref_data = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"vcf_data_df Data frame sample variants VCF ref_data PCGR/CPSR reference data object","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_gwas_citation_phenotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds GWAS citation/phenotype to GWAS hit found through PCGR annotation — append_gwas_citation_phenotype","text":"vcf_data_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_targeted_drug_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_targeted_drug_annotations","title":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_targeted_drug_annotations","text":"Function adds link targeted drugs (-label) list variants associated targeted","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_targeted_drug_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_targeted_drug_annotations","text":"","code":"append_targeted_drug_annotations(   var_df,   primary_site = \"Breast\",   ref_data = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/append_targeted_drug_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds link to targeted drugs (on and off-label) for a list of variants and associated targeted — append_targeted_drug_annotations","text":"var_df data frame variants primary_site primary site tumor sample ref_data PCGR/CPSR reference data object","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"Function adds TCGA annotations (cohort, frequency etc.) variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"","code":"append_tcga_var_link(var_df, linktype = \"dbsource\")"},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"var_df data frame variants linktype type link","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tcga_var_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that adds TCGA annotations (cohort, frequency etc.) to variant identifiers — append_tcga_var_link","text":"var_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tfbs_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"Function adds TFBS annotations (dbMTS) genetic variant identifiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/append_tfbs_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"","code":"append_tfbs_annotation(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/append_tfbs_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that adds TFBS annotations (dbMTS) to genetic variant identifiers — append_tfbs_annotation","text":"var_df data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_amp_asco_tiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns tier classifications to somatic CNA segments and SNVs/InDels, based on the presence of biomarker evidence found in the variant set — assign_amp_asco_tiers","title":"Function that assigns tier classifications to somatic CNA segments and SNVs/InDels, based on the presence of biomarker evidence found in the variant set — assign_amp_asco_tiers","text":"Function assigns tier classifications somatic CNA segments SNVs/InDels, based presence biomarker evidence found variant set","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_amp_asco_tiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns tier classifications to somatic CNA segments and SNVs/InDels, based on the presence of biomarker evidence found in the variant set — assign_amp_asco_tiers","text":"","code":"assign_amp_asco_tiers(   vartype = \"snv_indel\",   primary_site = \"Any\",   variants_df = NULL,   biomarker_items = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/assign_amp_asco_tiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns tier classifications to somatic CNA segments and SNVs/InDels, based on the presence of biomarker evidence found in the variant set — assign_amp_asco_tiers","text":"vartype variant type ('snv_indel' 'cna') primary_site primary tumor site variants_df data frame variants (SNVs/InDels CNAs) biomarker_items data frame biomarker evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants if any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants if any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"Function sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED TRUE variants population frequency exceeds max_tolerated_af","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants if any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"","code":"assign_germline_popfreq_status(   sample_calls,   pop = \"NFE\",   dbquery = \"gnomADe\",   max_tolerated_af = 0.01 )"},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants if any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"sample_calls data frame variants pop population code (1000 Genomes/gnomAD) dbquery gnomADe max_tolerated_af max tolerated germline allele frequency","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_germline_popfreq_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that sets STATUS_POPFREQ_1KG_ABOVE_TOLERATED/ STATUS_POPFREQ_GNOMAD_ABOVE_TOLERATED to TRUE for variants if any population frequency exceeds max_tolerated_af — assign_germline_popfreq_status","text":"sample_calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"Function assigns one six mutation types list mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"","code":"assign_mutation_type(var_df)"},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"var_df data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_mutation_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns one of six mutation types to a list of mutations — assign_mutation_type","text":"var_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a SOMATIC_CLASSIFICATION to variants based on evidence found in variant set, potentially limited by user-defined options — assign_somatic_classification","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants based on evidence found in variant set, potentially limited by user-defined options — assign_somatic_classification","text":"Function assigns SOMATIC_CLASSIFICATION variants based evidence found variant set, potentially limited user-defined options","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants based on evidence found in variant set, potentially limited by user-defined options — assign_somatic_classification","text":"","code":"assign_somatic_classification(sample_calls, settings)"},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants based on evidence found in variant set, potentially limited by user-defined options — assign_somatic_classification","text":"sample_calls data frame putative somatic variants settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that assigns a SOMATIC_CLASSIFICATION to variants based on evidence found in variant set, potentially limited by user-defined options — assign_somatic_classification","text":"sample_calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that appends several tags denoting evidence for somatic/germline status of variants — assign_somatic_germline_evidence","title":"Function that appends several tags denoting evidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"Function appends several tags denoting evidence somatic/germline status variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that appends several tags denoting evidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"","code":"assign_somatic_germline_evidence(sample_calls, settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that appends several tags denoting evidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"sample_calls data frame variants settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/assign_somatic_germline_evidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that appends several tags denoting evidence for somatic/germline status of variants — assign_somatic_germline_evidence","text":"sample_calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/biomarker_evidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixed data types/categories used for biomarker evidence, e.g. 'types','levels' etc. — biomarker_evidence","title":"Fixed data types/categories used for biomarker evidence, e.g. 'types','levels' etc. — biomarker_evidence","text":"Fixed data types/categories used biomarker evidence, e.g. 'types','levels' etc.","code":""},{"path":"https://sigven.github.io/pcgr/reference/biomarker_evidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixed data types/categories used for biomarker evidence, e.g. 'types','levels' etc. — biomarker_evidence","text":"","code":"biomarker_evidence"},{"path":"https://sigven.github.io/pcgr/reference/biomarker_evidence.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fixed data types/categories used for biomarker evidence, e.g. 'types','levels' etc. — biomarker_evidence","text":"object class list length 1.","code":""},{"path":"https://sigven.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"Regular expression terms indicative cancer-related phenotypes syndromes","code":""},{"path":"https://sigven.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"","code":"cancer_phenotypes_regex"},{"path":"https://sigven.github.io/pcgr/reference/cancer_phenotypes_regex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regular expression of terms indicative of cancer-related phenotypes and syndromes — cancer_phenotypes_regex","text":"long regular expression cancer-related phenotype terms","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that checks whether a set of column names are present in two different data frames — check_common_colnames","title":"Function that checks whether a set of column names are present in two different data frames — check_common_colnames","text":"Function checks whether set column names present two different data frames","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that checks whether a set of column names are present in two different data frames — check_common_colnames","text":"","code":"check_common_colnames(df1 = NULL, df2 = NULL, cnames = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that checks whether a set of column names are present in two different data frames — check_common_colnames","text":"df1 data frame 1 df2 data frame 2 cnames character vector column names check presence","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_common_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that checks whether a set of column names are present in two different data frames — check_common_colnames","text":"existing_common_columns T/F","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that checks the existence of a file — check_file_exists","title":"Function that checks the existence of a file — check_file_exists","text":"Function checks existence file","code":""},{"path":"https://sigven.github.io/pcgr/reference/check_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that checks the existence of a file — check_file_exists","text":"","code":"check_file_exists(fname)"},{"path":"https://sigven.github.io/pcgr/reference/check_file_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that checks the existence of a file — check_file_exists","text":"fname Name file check","code":""},{"path":"https://sigven.github.io/pcgr/reference/clinvar_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on whether a ClinVar entry of germline origin is found for a given variant (for entries in a data frame) — clinvar_germline_status","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on whether a ClinVar entry of germline origin is found for a given variant (for entries in a data frame) — clinvar_germline_status","text":"Function assigns logical STATUS_CLINVAR_GERMLINE based whether ClinVar entry germline origin found given variant (entries data frame)","code":""},{"path":"https://sigven.github.io/pcgr/reference/clinvar_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on whether a ClinVar entry of germline origin is found for a given variant (for entries in a data frame) — clinvar_germline_status","text":"","code":"clinvar_germline_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/clinvar_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical to STATUS_CLINVAR_GERMLINE based on whether a ClinVar entry of germline origin is found for a given variant (for entries in a data frame) — clinvar_germline_status","text":"sample_calls data frame sample calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Color encodings for report elements of PCGR/CPSR — color_palette","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"Color encodings report elements PCGR/CPSR","code":""},{"path":"https://sigven.github.io/pcgr/reference/color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"","code":"color_palette"},{"path":"https://sigven.github.io/pcgr/reference/color_palette.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color encodings for report elements of PCGR/CPSR — color_palette","text":"list object different report elements color-coded PCGR/CPSR reports. list element two vectors: 'levels' 'values'. Currently, following list elements included: pathogenicity - Colors five-level pathogenicity levels (CPSR) clinical_evidence - Colors strength evidence cancer-variant associations (-E) tier - Colors tier levels variant prioritization (PCGR) report_color - Colors PCGR assay mode (tumor-control vs. tumor-) warning - Color warning (low confidence PCGR analysis output) success - Color success (evident uncertainty PCGR analysis output)","code":""},{"path":"https://sigven.github.io/pcgr/reference/cosmic_sbs_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"List of COSMIC reference mutational signatures (SBS, v3.4) — cosmic_sbs_signatures","title":"List of COSMIC reference mutational signatures (SBS, v3.4) — cosmic_sbs_signatures","text":"List COSMIC reference mutational signatures (SBS, v3.4)","code":""},{"path":"https://sigven.github.io/pcgr/reference/cosmic_sbs_signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of COSMIC reference mutational signatures (SBS, v3.4) — cosmic_sbs_signatures","text":"","code":"cosmic_sbs_signatures"},{"path":"https://sigven.github.io/pcgr/reference/cosmic_sbs_signatures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of COSMIC reference mutational signatures (SBS, v3.4) — cosmic_sbs_signatures","text":"list two matrix objects ('' 'no_artefacts'). One matrix contains COSMIC reference mutational signatures without signature artefacts ('no_artefacts', number columns = 68), contains signatures, including artefacts ('', number columns = 86). matrix 96 rows, one 96 possible trinucleotide contexts.","code":""},{"path":"https://sigven.github.io/pcgr/reference/cosmic_somatic_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_COSMIC) reflecting whether a variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether a variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"Function assigns logical (STATUS_COSMIC) reflecting whether variant co-incides entry COSMIC (germline)","code":""},{"path":"https://sigven.github.io/pcgr/reference/cosmic_somatic_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether a variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"","code":"cosmic_somatic_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/cosmic_somatic_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_COSMIC) reflecting whether a variant co-incides with an entry in COSMIC (germline) — cosmic_somatic_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/data_coltype_defs.html","id":null,"dir":"Reference","previous_headings":"","what":"List of coltype definitions for input files to pcgrr (e.g. VCF-converted TSV, CNA TVS etc.) — data_coltype_defs","title":"List of coltype definitions for input files to pcgrr (e.g. VCF-converted TSV, CNA TVS etc.) — data_coltype_defs","text":"List coltype definitions input files pcgrr (e.g. VCF-converted TSV, CNA TVS etc.)","code":""},{"path":"https://sigven.github.io/pcgr/reference/data_coltype_defs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of coltype definitions for input files to pcgrr (e.g. VCF-converted TSV, CNA TVS etc.) — data_coltype_defs","text":"","code":"data_coltype_defs"},{"path":"https://sigven.github.io/pcgr/reference/data_coltype_defs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of coltype definitions for input files to pcgrr (e.g. VCF-converted TSV, CNA TVS etc.) — data_coltype_defs","text":"object class list length 3.","code":""},{"path":"https://sigven.github.io/pcgr/reference/dbsnp_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_DBSNP) reflecting whether a variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","title":"Function that assigns a logical (STATUS_DBSNP) reflecting whether a variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"Function assigns logical (STATUS_DBSNP) reflecting whether variant co-incides entry dbSNP (germline)","code":""},{"path":"https://sigven.github.io/pcgr/reference/dbsnp_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_DBSNP) reflecting whether a variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"","code":"dbsnp_germline_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/dbsnp_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_DBSNP) reflecting whether a variant co-incides with an entry in dbSNP (germline) — dbsnp_germline_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/deduplicate_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes redundancy in variant evidence items (i.e. if a variant is assicated with evidence at the codon level, evidence at the exon/gene level is ignored) — deduplicate_eitems","title":"Function that removes redundancy in variant evidence items (i.e. if a variant is assicated with evidence at the codon level, evidence at the exon/gene level is ignored) — deduplicate_eitems","text":"Function removes redundancy variant evidence items (.e. variant assicated evidence codon level, evidence exon/gene level ignored)","code":""},{"path":"https://sigven.github.io/pcgr/reference/deduplicate_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes redundancy in variant evidence items (i.e. if a variant is assicated with evidence at the codon level, evidence at the exon/gene level is ignored) — deduplicate_eitems","text":"","code":"deduplicate_eitems(   var_eitems = NULL,   target_type = \"exact\",   target_other = c(\"codon\", \"exon\", \"gene\") )"},{"path":"https://sigven.github.io/pcgr/reference/deduplicate_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes redundancy in variant evidence items (i.e. if a variant is assicated with evidence at the codon level, evidence at the exon/gene level is ignored) — deduplicate_eitems","text":"var_eitems data frame variant evidence items target_type resolution level used \"best\" level ('exact' 'codon) target_other resolution levels evidence items ignored evidence found target_type level","code":""},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that detects whether the sample name in variant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if multiple sample names are present for the CPSR workflow — detect_vcf_sample_name","title":"A function that detects whether the sample name in variant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if multiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"function detects whether sample name variant data frame unique (present column name VCF_SAMPLE_ID), throws error multiple sample names present CPSR workflow","code":""},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that detects whether the sample name in variant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if multiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"","code":"detect_vcf_sample_name(df, sample_name = NULL, cpsr = FALSE)"},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that detects whether the sample name in variant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if multiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"df VCF data frame sample_name name sample identifier cpsr logical indicating CPSR workflow","code":""},{"path":"https://sigven.github.io/pcgr/reference/detect_vcf_sample_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that detects whether the sample name in variant data frame is unique (as present in column name VCF_SAMPLE_ID), throws an error if multiple sample names are present for the CPSR workflow — detect_vcf_sample_name","text":"df Vranges object","code":""},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that performs stringr::str_replace on strings of multiple string columns of a dataframe — df_string_replace","title":"Function that performs stringr::str_replace on strings of multiple string columns of a dataframe — df_string_replace","text":"Function performs stringr::str_replace strings multiple string columns dataframe","code":""},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that performs stringr::str_replace on strings of multiple string columns of a dataframe — df_string_replace","text":"","code":"df_string_replace(df, strings, pattern, replacement, replace_all = F)"},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that performs stringr::str_replace on strings of multiple string columns of a dataframe — df_string_replace","text":"df data frame strings name columns string replace performed pattern pattern replace replacement string replace replace_all logical - replace occurrences","code":""},{"path":"https://sigven.github.io/pcgr/reference/df_string_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that performs stringr::str_replace on strings of multiple string columns of a dataframe — df_string_replace","text":"df","code":""},{"path":"https://sigven.github.io/pcgr/reference/dt_display.html","id":null,"dir":"Reference","previous_headings":"","what":"DT Display — dt_display","title":"DT Display — dt_display","text":"DT Display","code":""},{"path":"https://sigven.github.io/pcgr/reference/dt_display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DT Display — dt_display","text":"","code":"dt_display"},{"path":"https://sigven.github.io/pcgr/reference/dt_display.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DT Display — dt_display","text":"object class list length 8.","code":""},{"path":"https://sigven.github.io/pcgr/reference/effect_prediction_algos.html","id":null,"dir":"Reference","previous_headings":"","what":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"List URLs range variant effect prediction algorithms","code":""},{"path":"https://sigven.github.io/pcgr/reference/effect_prediction_algos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"","code":"effect_prediction_algos"},{"path":"https://sigven.github.io/pcgr/reference/effect_prediction_algos.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of URLs for a range of variant effect prediction algorithms — effect_prediction_algos","text":"data.frame 21 rows 3 columns indicates URL's variant effect prediction algorithms algorithm - Name encoding effect prediction algorithm url - URL display_name - Display name use reporting","code":""},{"path":"https://sigven.github.io/pcgr/reference/exclude_non_chrom_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that excludes genomic aberrations from non-nuclear chromosomes — exclude_non_chrom_variants","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — exclude_non_chrom_variants","text":"Function excludes genomic aberrations non-nuclear chromosomes","code":""},{"path":"https://sigven.github.io/pcgr/reference/exclude_non_chrom_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — exclude_non_chrom_variants","text":"","code":"exclude_non_chrom_variants(vcf_df, chrom_var = \"CHROM\")"},{"path":"https://sigven.github.io/pcgr/reference/exclude_non_chrom_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — exclude_non_chrom_variants","text":"vcf_df data frame chrom_var variable name chromosome data frame","code":""},{"path":"https://sigven.github.io/pcgr/reference/exclude_non_chrom_variants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that excludes genomic aberrations from non-nuclear chromosomes — exclude_non_chrom_variants","text":"vcf_df data frame mutations nuclear chromosomes ","code":""},{"path":"https://sigven.github.io/pcgr/reference/expand_biomarker_items.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that expands biomarker evidence items with variant annotations — expand_biomarker_items","title":"Function that expands biomarker evidence items with variant annotations — expand_biomarker_items","text":"Function expands biomarker evidence items variant annotations","code":""},{"path":"https://sigven.github.io/pcgr/reference/expand_biomarker_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that expands biomarker evidence items with variant annotations — expand_biomarker_items","text":"","code":"expand_biomarker_items(   callset = NULL,   variant_origin = \"somatic\",   target_genes = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/expand_biomarker_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that expands biomarker evidence items with variant annotations — expand_biomarker_items","text":"callset list object 'variant' 'biomarker_evidence' data frames variant_origin 'somatic' 'germline' target_genes data frame target genes interest","code":""},{"path":"https://sigven.github.io/pcgr/reference/export_quarto_evars.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Quarto Environment Variables — export_quarto_evars","title":"Export Quarto Environment Variables — export_quarto_evars","text":"Export quarto environment variables required using conda.","code":""},{"path":"https://sigven.github.io/pcgr/reference/export_quarto_evars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Quarto Environment Variables — export_quarto_evars","text":"","code":"export_quarto_evars(x)"},{"path":"https://sigven.github.io/pcgr/reference/export_quarto_evars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Quarto Environment Variables — export_quarto_evars","text":"x Path conda/envs/pcgrr/etc/conda/activate.d/quarto.sh","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_eitems_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"Function filters clinical evidence items tumor type/primary site","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_eitems_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"","code":"filter_eitems_by_site(eitems = NULL, ontology = NULL, primary_site = \"\")"},{"path":"https://sigven.github.io/pcgr/reference/filter_eitems_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that filters clinical evidence items by tumor type/primary site — filter_eitems_by_site","text":"eitems data frame clinical evidence items ontology phenotype ontology data frame primary_site primary tumor site","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_maf_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that takes a MAF file generated with vcf2maf and filters out variants that are presumably germline (tumor-only run) — filter_maf_file","title":"Function that takes a MAF file generated with vcf2maf and filters out variants that are presumably germline (tumor-only run) — filter_maf_file","text":"Function takes MAF file generated vcf2maf filters variants presumably germline (tumor-run)","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_maf_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that takes a MAF file generated with vcf2maf and filters out variants that are presumably germline (tumor-only run) — filter_maf_file","text":"","code":"filter_maf_file(callset, settings)"},{"path":"https://sigven.github.io/pcgr/reference/filter_maf_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that takes a MAF file generated with vcf2maf and filters out variants that are presumably germline (tumor-only run) — filter_maf_file","text":"callset Callset pre-processed somatic SNV/InDel variants settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that filters variant set on (depth, allelic fraction) for tumor and normal and filters according to settings — filter_read_support","title":"Function that filters variant set on (depth, allelic fraction) for tumor and normal and filters according to settings — filter_read_support","text":"Function filters variant set (depth, allelic fraction) tumor normal filters according settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that filters variant set on (depth, allelic fraction) for tumor and normal and filters according to settings — filter_read_support","text":"","code":"filter_read_support(vcf_df, config = NULL, precision = 3)"},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that filters variant set on (depth, allelic fraction) for tumor and normal and filters according to settings — filter_read_support","text":"vcf_df data frame variants config list PCGR configuration settings precision number significant digits allelic fraction estimation","code":""},{"path":"https://sigven.github.io/pcgr/reference/filter_read_support.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that filters variant set on (depth, allelic fraction) for tumor and normal and filters according to settings — filter_read_support","text":"vcf_df","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that generates a HTML link for selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","title":"A function that generates a HTML link for selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"function generates HTML link selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that generates a HTML link for selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"","code":"generate_annotation_link(   var_df,   vardb = \"DBSNP\",   vartype = \"snv_indel\",   group_by_var = c(\"VAR_ID\", \"ENTREZGENE\"),   url_prefix = \"http://www.ncbi.nlm.nih.gov/projects/SNP/snp_ref.cgi?rs=\",   link_key_var = \"DBSNP_RSID\",   link_display_var = \"DBSNP_RSID\" )"},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that generates a HTML link for selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"var_df data frame vardb type database vartype 'snv_indel' 'cna' group_by_var variable used grouping (VAR_ID) url_prefix url prefix link generation link_key_var variable used url linking link_display_var variable used url display","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_annotation_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that generates a HTML link for selected identifiers (DBSNP, COSMIC, CLINVAR, ENTREZ) — generate_annotation_link","text":"df_annotation_links","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates all contents of the cancer genome report (PCGR) — generate_report","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_report","text":"Function generates contents cancer genome report (PCGR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_report","text":"","code":"generate_report(yaml_fname = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates all contents of the cancer genome report (PCGR) — generate_report","text":"yaml_fname Name PCGR settings file produced pre-reporting Python workflow (yaml)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates expression data for PCGR report — generate_report_data_expression","title":"Function that generates expression data for PCGR report — generate_report_data_expression","text":"Function generates expression data PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates expression data for PCGR report — generate_report_data_expression","text":"","code":"generate_report_data_expression(ref_data = NULL, settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates expression data for PCGR report — generate_report_data_expression","text":"ref_data PCGR reference data object settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_kataegis.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"Function generates data frame potential kataegis events","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_kataegis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"","code":"generate_report_data_kataegis(   variant_set,   sample_name = \"SampleX\",   build = \"grch37\" )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_kataegis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates data frame with potential kataegis events — generate_report_data_kataegis","text":"variant_set data frame SNVs/InDels (must contain 'CHROM', 'POS','REF','ALT') sample_name name tumor sample build genome assembly (grch37/grch38)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_msi.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"Function generates MSI prediction data PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_msi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"","code":"generate_report_data_msi(variant_set, ref_data = NULL, settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_msi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates MSI prediction data for PCGR report — generate_report_data_msi","text":"variant_set variant calls subject MSI classification ref_data PCGR reference data object settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_rainfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates data for rainfall plot (mutation density along genome, considering SNVs only) — generate_report_data_rainfall","title":"Function that generates data for rainfall plot (mutation density along genome, considering SNVs only) — generate_report_data_rainfall","text":"Function generates data rainfall plot (mutation density along genome, considering SNVs )","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_rainfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates data for rainfall plot (mutation density along genome, considering SNVs only) — generate_report_data_rainfall","text":"","code":"generate_report_data_rainfall(   variant_set,   colors = NULL,   autosomes = FALSE,   build = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_rainfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates data for rainfall plot (mutation density along genome, considering SNVs only) — generate_report_data_rainfall","text":"variant_set data frame SNVs/InDels (must contain \"CHROM\", \"POS\",\"REF\",\"ALT\") colors character vector six color codes (denoting different mutation types) autosomes logical indicating plotting consider autosomes build genome assembly (grch37/grch38)","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures","text":"Function generates mutational signatures data PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures","text":"","code":"generate_report_data_signatures(   variant_set = NULL,   vstats = NULL,   ref_data = NULL,   settings = NULL,   n_bootstrap_iterations = 200,   sig_contribution_cutoff = 0.01 )"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_signatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates mutational signatures data for PCGR report — generate_report_data_signatures","text":"variant_set Somatic callset (SNV) vstats Variant statistics object ref_data PCGR reference data object settings PCGR run/configuration settings n_bootstrap_iterations Number bootstrap iterations signature analysis sig_contribution_cutoff Minimal signature contribution reporting","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reads TSV file with TMB estimates from sample — generate_report_data_tmb","title":"Function that reads TSV file with TMB estimates from sample — generate_report_data_tmb","text":"Function reads TSV file TMB estimates sample","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reads TSV file with TMB estimates from sample — generate_report_data_tmb","text":"","code":"generate_report_data_tmb(settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reads TSV file with TMB estimates from sample — generate_report_data_tmb","text":"settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_tmb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that reads TSV file with TMB estimates from sample — generate_report_data_tmb","text":"tmb_estimate","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves relevant (interventional based on molecular target) clinical trials for a given tumor type — generate_report_data_trials","title":"Function that retrieves relevant (interventional based on molecular target) clinical trials for a given tumor type — generate_report_data_trials","text":"Function retrieves relevant (interventional based molecular target) clinical trials given tumor type","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves relevant (interventional based on molecular target) clinical trials for a given tumor type — generate_report_data_trials","text":"","code":"generate_report_data_trials(pcgr_data, config, sample_name)"},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves relevant (interventional based on molecular target) clinical trials for a given tumor type — generate_report_data_trials","text":"pcgr_data PCGR data bundle object config PCGR run configurations sample_name sample name","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_report_data_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves relevant (interventional based on molecular target) clinical trials for a given tumor type — generate_report_data_trials","text":"pcg_report_trials data frame report elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"Function generates dense tiered annotated variant datasets","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"","code":"generate_tier_tsv(variant_set, config, annotation_tags, sample_name = \"test\")"},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"variant_set List tiered variants config PCGR configuration settings annotation_tags List display columns sample_name Sample identifier","code":""},{"path":"https://sigven.github.io/pcgr/reference/generate_tier_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that generates dense and tiered annotated variant datasets — generate_tier_tsv","text":"tsv_variants data frame tier-annotated list variants tab-separated output","code":""},{"path":"https://sigven.github.io/pcgr/reference/germline_filter_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame with germline filtering criteria — germline_filter_levels","title":"Data frame with germline filtering criteria — germline_filter_levels","text":"Data frame germline filtering criteria","code":""},{"path":"https://sigven.github.io/pcgr/reference/germline_filter_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame with germline filtering criteria — germline_filter_levels","text":"","code":"germline_filter_levels"},{"path":"https://sigven.github.io/pcgr/reference/germline_filter_levels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame with germline filtering criteria — germline_filter_levels","text":"character vector listing germline filtering criteria applied input callsets (SNVs/InDels) tumor-mode","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for CNA aberrations — get_clin_assocs_cna","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for CNA aberrations — get_clin_assocs_cna","text":"Function retrieves clinical evidence items (CIVIC, CBMDB) CNA aberrations","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for CNA aberrations — get_clin_assocs_cna","text":"","code":"get_clin_assocs_cna(onco_ts_sets, annotation_tags = NULL, eitems = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for CNA aberrations — get_clin_assocs_cna","text":"onco_ts_sets data frame annotations respect lost tumor suppressor genes gained oncogenes annotation_tags list annotation tags display report eitems Data frame clinical evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_clin_assocs_cna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that retrieves clinical evidence items (CIVIC, CBMDB) for CNA aberrations — get_clin_assocs_cna","text":"list","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_dt_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that gathers data tables on actionable variants for display in report (tier 1 + tier 2) — get_dt_tables","title":"Function that gathers data tables on actionable variants for display in report (tier 1 + tier 2) — get_dt_tables","text":"Function gathers data tables actionable variants display report (tier 1 + tier 2)","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_dt_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that gathers data tables on actionable variants for display in report (tier 1 + tier 2) — get_dt_tables","text":"","code":"get_dt_tables(rep = NULL, tier = 1, variant_class = \"cna\")"},{"path":"https://sigven.github.io/pcgr/reference/get_dt_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that gathers data tables on actionable variants for display in report (tier 1 + tier 2) — get_dt_tables","text":"rep report object tier tier level variant_class cna snv_indel","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_excel_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that produces the contents of sheets for an Excel report of PCGR output — get_excel_sheets","title":"Function that produces the contents of sheets for an Excel report of PCGR output — get_excel_sheets","text":"Function produces contents sheets Excel report PCGR output","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_excel_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that produces the contents of sheets for an Excel report of PCGR output — get_excel_sheets","text":"","code":"get_excel_sheets(report = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/get_excel_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that produces the contents of sheets for an Excel report of PCGR output — get_excel_sheets","text":"report PCGR report object","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get BSgenome Object — get_genome_obj","title":"Get BSgenome Object — get_genome_obj","text":"Gets BSgenome object given human genome assembly string.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get BSgenome Object — get_genome_obj","text":"","code":"get_genome_obj(genome)"},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get BSgenome Object — get_genome_obj","text":"genome Human genome assembly string: hg38 hg19.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get BSgenome Object — get_genome_obj","text":"BSgenome object.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_genome_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get BSgenome Object — get_genome_obj","text":"","code":"if (FALSE) { # \\dontrun{ get_genome_obj(\"hg38\") } # }"},{"path":"https://sigven.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that retrieves prevalent signatures for a given tumor type/primary site Data is collected from COSMIC v3.4. — get_prevalent_site_signatures","title":"Function that retrieves prevalent signatures for a given tumor type/primary site Data is collected from COSMIC v3.4. — get_prevalent_site_signatures","text":"Function retrieves prevalent signatures given tumor type/primary site Data collected COSMIC v3.4.","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that retrieves prevalent signatures for a given tumor type/primary site Data is collected from COSMIC v3.4. — get_prevalent_site_signatures","text":"","code":"get_prevalent_site_signatures(   site = \"Any\",   custom_collection = NULL,   ref_data = NULL,   min_prevalence_pct = 0.1,   incl_poss_artifacts = T )"},{"path":"https://sigven.github.io/pcgr/reference/get_prevalent_site_signatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that retrieves prevalent signatures for a given tumor type/primary site Data is collected from COSMIC v3.4. — get_prevalent_site_signatures","text":"site Primary tumor site custom_collection Custom collection signatures COSMIC ref_data PCGR reference data object min_prevalence_pct Minimum prevalence (pct) signature cohorts associated primary site - used select reference signatures inclusion signature reconstruction incl_poss_artifacts logical indicating artefact signatures included","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"Checks valid chromosome names data frame variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"","code":"get_valid_chromosomes(vcf_data_df, chromosome_column = \"CHROM\", bsg = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"vcf_data_df data frame chromosome_column name chromosome column bsg BSGenome object","code":""},{"path":"https://sigven.github.io/pcgr/reference/get_valid_chromosomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for valid chromosome names in data frame of variants — get_valid_chromosomes","text":"vcf_data_df valid data frame valid mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/het_af_germline_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether a variant is likely heterozygous (germline) - based on allelic fraction (VAF_TUMOR), presence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether a variant is likely heterozygous (germline) - based on allelic fraction (VAF_TUMOR), presence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"Function assigns logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether variant likely heterozygous (germline) - based allelic fraction (VAF_TUMOR), presence gnomAD dbSNP, presence TCGA COSMIC","code":""},{"path":"https://sigven.github.io/pcgr/reference/het_af_germline_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether a variant is likely heterozygous (germline) - based on allelic fraction (VAF_TUMOR), presence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"","code":"het_af_germline_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/het_af_germline_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HETEROZYGOUS) reflecting whether a variant is likely heterozygous (germline) - based on allelic fraction (VAF_TUMOR), presence in gnomAD and dbSNP, and no presence in TCGA and COSMIC — het_af_germline_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/hom_af_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether a variant is likely homozygous (germline) - based on allelic fraction (VAF_TUMOR) — hom_af_status","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether a variant is likely homozygous (germline) - based on allelic fraction (VAF_TUMOR) — hom_af_status","text":"Function assigns logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether variant likely homozygous (germline) - based allelic fraction (VAF_TUMOR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/hom_af_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether a variant is likely homozygous (germline) - based on allelic fraction (VAF_TUMOR) — hom_af_status","text":"","code":"hom_af_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/hom_af_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_LIKELY_GERMLINE_HOMOZYGOUS) reflecting whether a variant is likely homozygous (germline) - based on allelic fraction (VAF_TUMOR) — hom_af_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/immune_celltypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame with immune cell types — immune_celltypes","title":"Data frame with immune cell types — immune_celltypes","text":"Data frame immune cell types","code":""},{"path":"https://sigven.github.io/pcgr/reference/immune_celltypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame with immune cell types — immune_celltypes","text":"","code":"immune_celltypes"},{"path":"https://sigven.github.io/pcgr/reference/immune_celltypes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame with immune cell types — immune_celltypes","text":"data.frame 11 rows 2 columns indicates immune cell types used immune contexture analysis quanTIseq","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_cna_vstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with CNA information — init_cna_vstats","title":"Function that initiates report element with CNA information — init_cna_vstats","text":"Function initiates report element CNA information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_cna_vstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with CNA information — init_cna_vstats","text":"","code":"init_cna_vstats()"},{"path":"https://sigven.github.io/pcgr/reference/init_expression_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with expression information — init_expression_content","title":"Function that initiates report element with expression information — init_expression_content","text":"Function initiates report element expression information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_expression_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with expression information — init_expression_content","text":"","code":"init_expression_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_expression_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with expression information — init_expression_content","text":"rep Report structure initialized expression data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_germline_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"Function initiates report element germline variant information (CPSR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_germline_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"","code":"init_germline_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_germline_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with germline variant information (CPSR) — init_germline_content","text":"rep Report structure initialized germline data (CPSR)","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_kataegis_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with kataegis information — init_kataegis_content","title":"Function that initiates report element with kataegis information — init_kataegis_content","text":"Function initiates report element kataegis information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_kataegis_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with kataegis information — init_kataegis_content","text":"","code":"init_kataegis_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_m_signature_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with mutational signatures information — init_m_signature_content","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"Function initiates report element mutational signatures information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_m_signature_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"","code":"init_m_signature_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_m_signature_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with mutational signatures information — init_m_signature_content","text":"rep Report structure initialized signature data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_msi_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with MSI classification — init_msi_content","title":"Function that initiates report element with MSI classification — init_msi_content","text":"Function initiates report element MSI classification","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_msi_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with MSI classification — init_msi_content","text":"","code":"init_msi_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_rainfall_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with rainfall information — init_rainfall_content","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"Function initiates report element rainfall information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_rainfall_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"","code":"init_rainfall_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_rainfall_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with rainfall information — init_rainfall_content","text":"rep Report structure initialized rainfall data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates PCGR/CPSR report object — init_report","title":"Function that initiates PCGR/CPSR report object — init_report","text":"Function initiates PCGR/CPSR report object","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates PCGR/CPSR report object — init_report","text":"","code":"init_report(yaml_fname = NULL, report_mode = \"PCGR\")"},{"path":"https://sigven.github.io/pcgr/reference/init_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates PCGR/CPSR report object — init_report","text":"yaml_fname Yaml file configuration settings paths annotated molecular datasets report_mode Type report ('PCGR' 'CPSR')","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_snv_indel_vstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with SNV/InDel statistics information — init_snv_indel_vstats","title":"Function that initiates report element with SNV/InDel statistics information — init_snv_indel_vstats","text":"Function initiates report element SNV/InDel statistics information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_snv_indel_vstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with SNV/InDel statistics information — init_snv_indel_vstats","text":"","code":"init_snv_indel_vstats()"},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with TMB information — init_tmb_content","title":"Function that initiates report element with TMB information — init_tmb_content","text":"Function initiates report element TMB information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with TMB information — init_tmb_content","text":"","code":"init_tmb_content(ref_data = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that initiates report element with TMB information — init_tmb_content","text":"ref_data PCGR reference data object","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tmb_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with TMB information — init_tmb_content","text":"rep TMB report element","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tumor_only_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with tumor-only information — init_tumor_only_content","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"Function initiates report element tumor-information","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_tumor_only_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"","code":"init_tumor_only_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_tumor_only_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with tumor-only information — init_tumor_only_content","text":"rep Report structure initialized tumor-stats","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_var_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that initiates report element with variant data — init_var_content","title":"Function that initiates report element with variant data — init_var_content","text":"Function initiates report element variant data","code":""},{"path":"https://sigven.github.io/pcgr/reference/init_var_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that initiates report element with variant data — init_var_content","text":"","code":"init_var_content()"},{"path":"https://sigven.github.io/pcgr/reference/init_var_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that initiates report element with variant data — init_var_content","text":"rep Report structure initialized variant data","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_detect","title":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_detect","text":"Function detects kataegis events data frame genomic cooordinates mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_detect","text":"","code":"kataegis_detect(   data,   sample_id = \"sample_id\",   build = \"grch37\",   min.mut = 6,   max.dis = 1000,   chr = \"chr\",   pos = \"pos\",   txdb = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_detect","text":"data data frame somatic mutations, produced kataegis_input sample_id sample identifier build genomoe assembly build min.mut minimum number mutations localized hypermutated region max.dis maximum distance kataegis event (basepairs) chr column name data denotes chromosome pos column name data denotes position txdb transcript database (txdb)","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_detect","text":"kataegis_df data frame potential kataegis events","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_input","title":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_input","text":"Function detects kataegis events data frame genomic cooordinates mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/kataegis_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_input","text":"","code":"kataegis_input(   variant_set,   chr = \"chr\",   pos = \"pos\",   ref = \"ref\",   alt = \"alt\",   build = NULL,   context_size = 10 )"},{"path":"https://sigven.github.io/pcgr/reference/kataegis_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that detects kataegis events from a data frame with genomic cooordinates of mutations — kataegis_input","text":"variant_set data frame raw set somatic mutations chr column name data denotes chromosome pos column name data denotes position ref column name data denotes reference allele alt column name data denotes alternate allele build genome build (grch37 hg38) context_size size neighbouring sequence context","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that loads all evidence items from CIViC and CGI, and combines them in a unified data.frame — load_all_eitems","title":"Function that loads all evidence items from CIViC and CGI, and combines them in a unified data.frame — load_all_eitems","text":"Function loads evidence items CIViC CGI, combines unified data.frame","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that loads all evidence items from CIViC and CGI, and combines them in a unified data.frame — load_all_eitems","text":"","code":"load_all_eitems(eitems_raw = NULL, alteration_type = \"MUT\", origin = \"Somatic\")"},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that loads all evidence items from CIViC and CGI, and combines them in a unified data.frame — load_all_eitems","text":"eitems_raw raw data frame evidence items alteration_type type alteration ('MUT','MUT_LOF','CNA') origin variant origin ('Germline','Somatic')","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_all_eitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that loads all evidence items from CIViC and CGI, and combines them in a unified data.frame — load_all_eitems","text":"all_eitems","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_dna_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reads and validates CNA or SNV/InDel TSV files file from PCGR/CPSR pre-report (Python) pipeline — load_dna_variants","title":"Function that reads and validates CNA or SNV/InDel TSV files file from PCGR/CPSR pre-report (Python) pipeline — load_dna_variants","text":"Function reads validates CNA SNV/InDel TSV files file PCGR/CPSR pre-report (Python) pipeline","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_dna_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reads and validates CNA or SNV/InDel TSV files file from PCGR/CPSR pre-report (Python) pipeline — load_dna_variants","text":"","code":"load_dna_variants(   fname = NA,   cols = NULL,   ref_data = NULL,   vartype = \"snv_indel\",   primary_site = \"Any\",   retained_info_tags = \"None\",   variant_origin = \"Somatic\" )"},{"path":"https://sigven.github.io/pcgr/reference/load_dna_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reads and validates CNA or SNV/InDel TSV files file from PCGR/CPSR pre-report (Python) pipeline — load_dna_variants","text":"fname Path raw input file DNA aberrations (PCGR/CPSR) cols column type definitions raw input file ref_data PCGR reference data object vartype type DNA aberrations ('snv_indel','cna') primary_site primary site tumor retained_info_tags VCF INFO tags retained output (SNVs/InDels) variant_origin Germline/Somatic","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based on given parameters (mutation type, variant origin, tumor type etc) — load_eitems","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based on given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"Function loads specific set clinical variant evidence items (CIViC + CGI) based given parameters (mutation type, variant origin, tumor type etc)","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based on given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"","code":"load_eitems(   eitems_raw = NULL,   ontology = NULL,   alteration_types = c(\"MUT\"),   origin = \"Somatic\",   tumor_type_specificity = NULL,   tumor_type = NULL )"},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based on given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"eitems_raw complete set clinical variant evidence items ontology phenotype ontology data frame alteration_types types alteration ('MUT', 'CNA', 'MUT_LOF') origin variant origin ('Somatic','Germline') tumor_type_specificity tumor type specificity ('', 'specific') tumor_type primary tumor site","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_eitems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that loads specific set of clinical variant evidence items (CIViC + CGI) based on given parameters (mutation type, variant origin, tumor type etc) — load_eitems","text":"eitems variant evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_expression_csq.html","id":null,"dir":"Reference","previous_headings":"","what":"Load expression consequence settings — load_expression_csq","title":"Load expression consequence settings — load_expression_csq","text":"Load expression consequence settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_expression_csq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load expression consequence settings — load_expression_csq","text":"","code":"load_expression_csq(settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/load_expression_csq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load expression consequence settings — load_expression_csq","text":"settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_expression_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Load expression outlier results — load_expression_outliers","title":"Load expression outlier results — load_expression_outliers","text":"Load expression outlier results","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_expression_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load expression outlier results — load_expression_outliers","text":"","code":"load_expression_outliers(   settings = NULL,   ref_data = NULL,   percentile_cutoff_high = 90,   percentile_cutoff_low = 10 )"},{"path":"https://sigven.github.io/pcgr/reference/load_expression_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load expression outlier results — load_expression_outliers","text":"settings PCGR run/configuration settings ref_data PCGR reference data object percentile_cutoff_high numeric, percentile cutoff high expression percentile_cutoff_low numeric, percentile cutoff low expression","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_expression_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Load expression similarity results — load_expression_similarity","title":"Load expression similarity results — load_expression_similarity","text":"Load expression similarity results","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_expression_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load expression similarity results — load_expression_similarity","text":"","code":"load_expression_similarity(settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/load_expression_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load expression similarity results — load_expression_similarity","text":"settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_reference_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that parses and loads reference data from files in the assembly-specific PCGR bundle directory — load_reference_data","title":"Function that parses and loads reference data from files in the assembly-specific PCGR bundle directory — load_reference_data","text":"Function parses loads reference data files assembly-specific PCGR bundle directory","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_reference_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that parses and loads reference data from files in the assembly-specific PCGR bundle directory — load_reference_data","text":"","code":"load_reference_data(pcgr_db_assembly_dir = NULL, genome_assembly = \"grch38\")"},{"path":"https://sigven.github.io/pcgr/reference/load_reference_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that parses and loads reference data from files in the assembly-specific PCGR bundle directory — load_reference_data","text":"pcgr_db_assembly_dir Assembly-specific root path data bundle genome_assembly grch37/grch38","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_somatic_cna.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reads and validates a fully annotated CNA file from PCGR pre-report pipeline — load_somatic_cna","title":"Function that reads and validates a fully annotated CNA file from PCGR pre-report pipeline — load_somatic_cna","text":"Function reads validates fully annotated CNA file PCGR pre-report pipeline","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_somatic_cna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reads and validates a fully annotated CNA file from PCGR pre-report pipeline — load_somatic_cna","text":"","code":"load_somatic_cna(fname, ref_data = NULL, settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/load_somatic_cna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reads and validates a fully annotated CNA file from PCGR pre-report pipeline — load_somatic_cna","text":"fname Path file pre-processed CNA segments ref_data PCGR reference data object settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_somatic_snv_indel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that reads and validates an annotated somatic SNV/InDel file from PCGR pre-reporting pipeline — load_somatic_snv_indel","title":"Function that reads and validates an annotated somatic SNV/InDel file from PCGR pre-reporting pipeline — load_somatic_snv_indel","text":"Function reads validates annotated somatic SNV/InDel file PCGR pre-reporting pipeline","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_somatic_snv_indel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that reads and validates an annotated somatic SNV/InDel file from PCGR pre-reporting pipeline — load_somatic_snv_indel","text":"","code":"load_somatic_snv_indel(fname = NA, ref_data = NULL, settings = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/load_somatic_snv_indel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that reads and validates an annotated somatic SNV/InDel file from PCGR pre-reporting pipeline — load_somatic_snv_indel","text":"fname Path file pre-processed somatic SNV/InDel variants ref_data PCGR reference data object settings PCGR run/configuration settings","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that loads YAML data with settings and file paths to annotated molecular profiles — load_yaml","title":"Function that loads YAML data with settings and file paths to annotated molecular profiles — load_yaml","text":"Function loads YAML data settings file paths annotated molecular profiles","code":""},{"path":"https://sigven.github.io/pcgr/reference/load_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that loads YAML data with settings and file paths to annotated molecular profiles — load_yaml","text":"","code":"load_yaml(yml_fname, report_mode = \"CPSR\")"},{"path":"https://sigven.github.io/pcgr/reference/load_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that loads YAML data with settings and file paths to annotated molecular profiles — load_yaml","text":"yml_fname Yaml file configuration settings paths annotated molecular datasets report_mode Type report ('PCGR' 'CPSR')","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_debug.html","id":null,"dir":"Reference","previous_headings":"","what":"Write messages to logs at a given priority level — log4r_debug","title":"Write messages to logs at a given priority level — log4r_debug","text":"See log4r::levellog()","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_debug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write messages to logs at a given priority level — log4r_debug","text":"","code":"log4r_debug(msg)"},{"path":"https://sigven.github.io/pcgr/reference/log4r_debug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write messages to logs at a given priority level — log4r_debug","text":"msg Message log.","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_fatal.html","id":null,"dir":"Reference","previous_headings":"","what":"Write messages to logs at a given priority level — log4r_fatal","title":"Write messages to logs at a given priority level — log4r_fatal","text":"See log4r::levellog()","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_fatal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write messages to logs at a given priority level — log4r_fatal","text":"","code":"log4r_fatal(msg)"},{"path":"https://sigven.github.io/pcgr/reference/log4r_fatal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write messages to logs at a given priority level — log4r_fatal","text":"msg Message log.","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Write messages to logs at a given priority level — log4r_info","title":"Write messages to logs at a given priority level — log4r_info","text":"See log4r::levellog()","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write messages to logs at a given priority level — log4r_info","text":"","code":"log4r_info(msg)"},{"path":"https://sigven.github.io/pcgr/reference/log4r_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write messages to logs at a given priority level — log4r_info","text":"msg Message log.","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_warn.html","id":null,"dir":"Reference","previous_headings":"","what":"Write messages to logs at a given priority level — log4r_warn","title":"Write messages to logs at a given priority level — log4r_warn","text":"See log4r::levellog()","code":""},{"path":"https://sigven.github.io/pcgr/reference/log4r_warn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write messages to logs at a given priority level — log4r_warn","text":"","code":"log4r_warn(msg)"},{"path":"https://sigven.github.io/pcgr/reference/log4r_warn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write messages to logs at a given priority level — log4r_warn","text":"msg Message log.","code":""},{"path":"https://sigven.github.io/pcgr/reference/log_var_eitem_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that logs the number of evidence items found, for different levels of resolution — log_var_eitem_stats","title":"Function that logs the number of evidence items found, for different levels of resolution — log_var_eitem_stats","text":"Function logs number evidence items found, different levels resolution","code":""},{"path":"https://sigven.github.io/pcgr/reference/log_var_eitem_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that logs the number of evidence items found, for different levels of resolution — log_var_eitem_stats","text":"","code":"log_var_eitem_stats(var_eitems = NULL, target_type = \"exact\")"},{"path":"https://sigven.github.io/pcgr/reference/log_var_eitem_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that logs the number of evidence items found, for different levels of resolution — log_var_eitem_stats","text":"var_eitems data frame variant evidence items target_type resolution evidence items","code":""},{"path":"https://sigven.github.io/pcgr/reference/max_af_gnomad.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting the maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting the maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"Function assigns maximum value variable (MAX_AF_GNOMAD) reflecting maximum allele frequency given variant across gnomAD populations","code":""},{"path":"https://sigven.github.io/pcgr/reference/max_af_gnomad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting the maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"","code":"max_af_gnomad(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/max_af_gnomad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a maximum value to a variable (MAX_AF_GNOMAD) reflecting the maximum allele frequency for a given variant across gnomAD populations — max_af_gnomad","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/mkdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create directory — mkdir","title":"Create directory — mkdir","text":"Create directory","code":""},{"path":"https://sigven.github.io/pcgr/reference/mkdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create directory — mkdir","text":"","code":"mkdir(d)"},{"path":"https://sigven.github.io/pcgr/reference/mkdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create directory — mkdir","text":"d Directory create.","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots the indel fraction for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","title":"Function that plots the indel fraction for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"Function plots indel fraction given sample contrasts distribution MSI-H/MSS samples TCGA","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots the indel fraction for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"","code":"msi_indel_fraction_plot(tcga_msi_dataset, indel_fraction)"},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots the indel fraction for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"tcga_msi_dataset underlying dataset TCGA used development statistical classifier indel_fraction fraction indels mutations (SNVs + indels)","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_fraction_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots the indel fraction for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_fraction_plot","text":"p","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_load_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots the indel load for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_load_plot","title":"Function that plots the indel load for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_load_plot","text":"Function plots indel load given sample contrasts distribution MSI-H/MSS samples TCGA","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_load_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots the indel load for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_load_plot","text":"","code":"msi_indel_load_plot(tcga_msi_dataset, indel_load)"},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_load_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots the indel load for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_load_plot","text":"tcga_msi_dataset underlying dataset TCGA used development statistical classifier indel_load fraction indels mutations (SNVs + indels)","code":""},{"path":"https://sigven.github.io/pcgr/reference/msi_indel_load_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots the indel load for a given sample and contrasts this with the distribution for MSI-H/MSS samples from TCGA — msi_indel_load_plot","text":"p","code":""},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that orders genomic aberrations according to order of chromosomes and chromosomal position — order_variants","title":"Function that orders genomic aberrations according to order of chromosomes and chromosomal position — order_variants","text":"Function orders genomic aberrations according order chromosomes chromosomal position","code":""},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that orders genomic aberrations according to order of chromosomes and chromosomal position — order_variants","text":"","code":"order_variants(vcf_df, chrom_var = \"CHROM\", pos_var = \"POS\")"},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that orders genomic aberrations according to order of chromosomes and chromosomal position — order_variants","text":"vcf_df data frame chrom_var variable name chromosome data frame pos_var variable name chromosomal position","code":""},{"path":"https://sigven.github.io/pcgr/reference/order_variants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that orders genomic aberrations according to order of chromosomes and chromosomal position — order_variants","text":"vcf_df data frame ordered mutations","code":""},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Does R Package Exist — pkg_exists","title":"Does R Package Exist — pkg_exists","text":"Checks specified R package exists local system.","code":""},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does R Package Exist — pkg_exists","text":"","code":"pkg_exists(p)"},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does R Package Exist — pkg_exists","text":"p R package check .","code":""},{"path":"https://sigven.github.io/pcgr/reference/pkg_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does R Package Exist — pkg_exists","text":"TRUE package exists, FALSE otherwise.","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that makes a plot with TMB boxplots for reference cohorts, highlighting the TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","title":"Function that makes a plot with TMB boxplots for reference cohorts, highlighting the TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"Function makes plot TMB boxplots reference cohorts, highlighting TMB estimate given sample cohort/primary site interest","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that makes a plot with TMB boxplots for reference cohorts, highlighting the TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"","code":"plot_tmb_primary_site_tcga(   tmb_reference,   p_site = \"Liver\",   tmb_estimates = NULL,   tmb_display_type = \"missense_only\",   tumor_only = FALSE )"},{"path":"https://sigven.github.io/pcgr/reference/plot_tmb_primary_site_tcga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that makes a plot with TMB boxplots for reference cohorts, highlighting the TMB estimate for a given sample and the cohort/primary site of interest — plot_tmb_primary_site_tcga","text":"tmb_reference data frame TMB estimates reference samples (e.g. TCGA) p_site primary tumor_site (sample) tmb_estimates data frame estimates mutational burden (sample) tmb_display_type TMB estimation used display (e.g. missense_only) tumor_only logical, TRUE color using tumor-color","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots four value boxes with the most important findings in the cancer genome — plot_value_boxes","title":"Function that plots four value boxes with the most important findings in the cancer genome — plot_value_boxes","text":"Function plots four value boxes important findings cancer genome","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots four value boxes with the most important findings in the cancer genome — plot_value_boxes","text":"","code":"plot_value_boxes(pcg_report)"},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots four value boxes with the most important findings in the cancer genome — plot_value_boxes","text":"pcg_report pcg report list elements","code":""},{"path":"https://sigven.github.io/pcgr/reference/plot_value_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots four value boxes with the most important findings in the cancer genome — plot_value_boxes","text":"p","code":""},{"path":"https://sigven.github.io/pcgr/reference/pon_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_PON) reflecting whether a variant is co-inciding with a variant present in a panel-of-normals database (PANEL_OF_NORMALS column is TRUE) — pon_status","title":"Function that assigns a logical (STATUS_PON) reflecting whether a variant is co-inciding with a variant present in a panel-of-normals database (PANEL_OF_NORMALS column is TRUE) — pon_status","text":"Function assigns logical (STATUS_PON) reflecting whether variant co-inciding variant present panel--normals database (PANEL_OF_NORMALS column TRUE)","code":""},{"path":"https://sigven.github.io/pcgr/reference/pon_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_PON) reflecting whether a variant is co-inciding with a variant present in a panel-of-normals database (PANEL_OF_NORMALS column is TRUE) — pon_status","text":"","code":"pon_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/pon_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_PON) reflecting whether a variant is co-inciding with a variant present in a panel-of-normals database (PANEL_OF_NORMALS column is TRUE) — pon_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"Function predicts MSI status based fraction indels among calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"","code":"predict_msi_status(   variant_set,   ref_data,   msi_prediction_model,   msi_prediction_dataset,   target_size_mb,   sample_name = \"Test\" )"},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"variant_set data frame somatic mutations/indels ref_data PCGR reference data object msi_prediction_model statistical model MSI prediction msi_prediction_dataset underlying dataset TCGA used development statistical classifier target_size_mb size targeted genomic region (coding) sample_name name sample","code":""},{"path":"https://sigven.github.io/pcgr/reference/predict_msi_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that predicts MSI status based on fraction of indels among calls — predict_msi_status","text":"msi_data","code":""},{"path":"https://sigven.github.io/pcgr/reference/qc_var_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that matches variants to evidence items — qc_var_eitems","title":"Function that matches variants to evidence items — qc_var_eitems","text":"param sample_calls data frame variant calls param db database evidence items ('civic','cgi') param colset character vector column names pull sample_calls param eitems raw list evidence items param region_marker logical indication region biomarkers matched ","code":""},{"path":"https://sigven.github.io/pcgr/reference/qc_var_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that matches variants to evidence items — qc_var_eitems","text":"","code":"qc_var_eitems(var_eitems = NULL, marker_type = \"codon\")"},{"path":"https://sigven.github.io/pcgr/reference/qc_var_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that matches variants to evidence items — qc_var_eitems","text":"var_eitems variant-evidence items marker_type type biomarker","code":""},{"path":"https://sigven.github.io/pcgr/reference/qc_var_eitems.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function that matches variants to evidence items — qc_var_eitems","text":"export Function makes quality control check evidence items assigned variants","code":""},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that removes column(s) from data frame — remove_cols_from_df","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"Function removes column(s) data frame","code":""},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"","code":"remove_cols_from_df(df, cnames = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"df data.frame data cnames character vector column names","code":""},{"path":"https://sigven.github.io/pcgr/reference/remove_cols_from_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that removes column(s) from data frame — remove_cols_from_df","text":"df data.frame columns removed (present originally)","code":""},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that sorts chromosomal segments according to chromosome and chromosomal start/end position — sort_chromosomal_segments","title":"Function that sorts chromosomal segments according to chromosome and chromosomal start/end position — sort_chromosomal_segments","text":"Function sorts chromosomal segments according chromosome chromosomal start/end position","code":""},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that sorts chromosomal segments according to chromosome and chromosomal start/end position — sort_chromosomal_segments","text":"","code":"sort_chromosomal_segments(   df,   chromosome_column = \"CHROM\",   start_segment = \"POS\",   end_segment = \"POS\" )"},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that sorts chromosomal segments according to chromosome and chromosomal start/end position — sort_chromosomal_segments","text":"df data frame chromosome start + end segment chromosome_column name column chromosome name sigven start_segment name column indicates start chromosomal segment end_segment name column indicates end chromosomal segment","code":""},{"path":"https://sigven.github.io/pcgr/reference/sort_chromosomal_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that sorts chromosomal segments according to chromosome and chromosomal start/end position — sort_chromosomal_segments","text":"df_final data frame sorted chromosomal segments","code":""},{"path":"https://sigven.github.io/pcgr/reference/strip_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip HTML tags — strip_html","title":"Strip HTML tags — strip_html","text":"Remove HTML tags comments text. https://github.com/yihui/xfun/blob/ccee26/R/string.R#L329.","code":""},{"path":"https://sigven.github.io/pcgr/reference/strip_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip HTML tags — strip_html","text":"","code":"strip_html(x)"},{"path":"https://sigven.github.io/pcgr/reference/strip_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip HTML tags — strip_html","text":"x character vector.","code":""},{"path":"https://sigven.github.io/pcgr/reference/strip_html.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip HTML tags — strip_html","text":"character vector HTML tags comments stripped .","code":""},{"path":"https://sigven.github.io/pcgr/reference/strip_html.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip HTML tags — strip_html","text":"","code":"strip_html('<a href=\"#\">Hello <!-- comment -->world!<\/a>') #> [1] \"Hello world!\""},{"path":"https://sigven.github.io/pcgr/reference/structure_var_eitems.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that structures variant evidence items according to strength of evidence — structure_var_eitems","title":"Function that structures variant evidence items according to strength of evidence — structure_var_eitems","text":"Function structures variant evidence items according strength evidence","code":""},{"path":"https://sigven.github.io/pcgr/reference/structure_var_eitems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that structures variant evidence items according to strength of evidence — structure_var_eitems","text":"","code":"structure_var_eitems(var_eitems, annotation_tags, alteration_type = \"MUT\")"},{"path":"https://sigven.github.io/pcgr/reference/structure_var_eitems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that structures variant evidence items according to strength of evidence — structure_var_eitems","text":"var_eitems variant evidence items annotation_tags annotation tags include display alteration_type type alteration ('MUT','CNA')","code":""},{"path":"https://sigven.github.io/pcgr/reference/tcga_cohorts.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame with all TCGA cohorts — tcga_cohorts","title":"Data frame with all TCGA cohorts — tcga_cohorts","text":"Data frame TCGA cohorts","code":""},{"path":"https://sigven.github.io/pcgr/reference/tcga_cohorts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame with all TCGA cohorts — tcga_cohorts","text":"","code":"tcga_cohorts"},{"path":"https://sigven.github.io/pcgr/reference/tcga_cohorts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data frame with all TCGA cohorts — tcga_cohorts","text":"data.frame 33 rows 2 columns indicates TCGA cohorts","code":""},{"path":"https://sigven.github.io/pcgr/reference/tcga_somatic_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether a variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether a variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"Function assigns logical (STATUS_TCGA_SOMATIC) reflecting whether variant co-incides entry TCGA (somatic)","code":""},{"path":"https://sigven.github.io/pcgr/reference/tcga_somatic_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether a variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"","code":"tcga_somatic_status(sample_calls)"},{"path":"https://sigven.github.io/pcgr/reference/tcga_somatic_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that assigns a logical (STATUS_TCGA_SOMATIC) reflecting whether a variant co-incides with an entry in TCGA (somatic) — tcga_somatic_status","text":"sample_calls data frame sample variant calls","code":""},{"path":"https://sigven.github.io/pcgr/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html","code":""},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that plots a histogram of the the variant allelic support (tumor) - grouped by tiers — tier_af_distribution","title":"Function that plots a histogram of the the variant allelic support (tumor) - grouped by tiers — tier_af_distribution","text":"Function plots histogram variant allelic support (tumor) - grouped tiers","code":""},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that plots a histogram of the the variant allelic support (tumor) - grouped by tiers — tier_af_distribution","text":"","code":"tier_af_distribution(tier_df, bin_size = 0.05)"},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that plots a histogram of the the variant allelic support (tumor) - grouped by tiers — tier_af_distribution","text":"tier_df data frame somatic mutations bin_size size bins allelic frequency","code":""},{"path":"https://sigven.github.io/pcgr/reference/tier_af_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that plots a histogram of the the variant allelic support (tumor) - grouped by tiers — tier_af_distribution","text":"p geom_histogram plot ggplot2","code":""},{"path":"https://sigven.github.io/pcgr/reference/tsv_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"TSV columns — tsv_cols","title":"TSV columns — tsv_cols","text":"TSV columns","code":""},{"path":"https://sigven.github.io/pcgr/reference/tsv_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TSV columns — tsv_cols","text":"","code":"tsv_cols"},{"path":"https://sigven.github.io/pcgr/reference/tsv_cols.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"TSV columns — tsv_cols","text":"object class list length 2.","code":""},{"path":"https://sigven.github.io/pcgr/reference/update_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that updates a PCGR/CPSR report object structure — update_report","title":"Function that updates a PCGR/CPSR report object structure — update_report","text":"Function updates PCGR/CPSR report object structure","code":""},{"path":"https://sigven.github.io/pcgr/reference/update_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that updates a PCGR/CPSR report object structure — update_report","text":"","code":"update_report(report, report_data, a_elem = \"snv_indel\")"},{"path":"https://sigven.github.io/pcgr/reference/update_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that updates a PCGR/CPSR report object structure — update_report","text":"report PCGR/CPSR report report_data Object report contents a_elem section PCGR report","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_db_url.html","id":null,"dir":"Reference","previous_headings":"","what":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"List URLS variant identifiers variant/gene/protein domain databases","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_db_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"","code":"variant_db_url"},{"path":"https://sigven.github.io/pcgr/reference/variant_db_url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of URLS and variant identifiers for variant/gene/protein domain databases — variant_db_url","text":"data.frame 6 rows 5 columns indicates URL's various variant/gene databases use PCGR annotation columns generate variant links name - Name encoding variant/gene database group_by_var - column used grouping url_prefix - URL prefix link_key_var - column used key value link link_display_var - column used display variable link","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_stats_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generate stats for a given variant set, considering number of variants/genes affected across tiers, types of variants () — variant_stats_report","title":"Function that generate stats for a given variant set, considering number of variants/genes affected across tiers, types of variants () — variant_stats_report","text":"Function generate stats given variant set, considering number variants/genes affected across tiers, types variants ()","code":""},{"path":"https://sigven.github.io/pcgr/reference/variant_stats_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generate stats for a given variant set, considering number of variants/genes affected across tiers, types of variants () — variant_stats_report","text":"","code":"variant_stats_report(callset = NULL, name = \"vstats\", vartype = \"snv_indel\")"},{"path":"https://sigven.github.io/pcgr/reference/variant_stats_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generate stats for a given variant set, considering number of variants/genes affected across tiers, types of variants () — variant_stats_report","text":"callset list object callset data (CNA SNVs/InDels) name type variant statistic vartype type variant ('snv_indel', 'cna')","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_processed_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"Function writes VCF intended mutational signature analysis","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_processed_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"","code":"write_processed_vcf(   calls,   sample_name = NULL,   output_directory = NULL,   vcf_fname = NULL,   snv_only = TRUE )"},{"path":"https://sigven.github.io/pcgr/reference/write_processed_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes a VCF intended for mutational signature analysis — write_processed_vcf","text":"calls data frame calls sample_name sample name output_directory Output directory output file vcf_fname filename VCF snv_only logical, TRUE SNVs written VCF","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes key datasets of PCGR object to an Excel workbook — write_report_excel","title":"Function that writes key datasets of PCGR object to an Excel workbook — write_report_excel","text":"Function writes key datasets PCGR object Excel workbook","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes key datasets of PCGR object to an Excel workbook — write_report_excel","text":"","code":"write_report_excel(report = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/write_report_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes key datasets of PCGR object to an Excel workbook — write_report_excel","text":"report List object PCGR report data, settings etc.","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_quarto_html.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes contents of PCGR object to an HTML report (quarto-based) — write_report_quarto_html","title":"Function that writes contents of PCGR object to an HTML report (quarto-based) — write_report_quarto_html","text":"Function writes contents PCGR object HTML report (quarto-based)","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_quarto_html.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes contents of PCGR object to an HTML report (quarto-based) — write_report_quarto_html","text":"","code":"write_report_quarto_html(report = NULL)"},{"path":"https://sigven.github.io/pcgr/reference/write_report_quarto_html.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes contents of PCGR object to an HTML report (quarto-based) — write_report_quarto_html","text":"report List object report data, settings etc.","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that writes contents of PCGR object to various output formats (Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_tsv","title":"Function that writes contents of PCGR object to various output formats (Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_tsv","text":"param report List object report data (PCGR/CPSR), settings etc. param tier_model type tier model param output_format contents/file format output (html/json/tsv/cna_tsv etc) param flexdb logical indicating HTML output dashboard","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that writes contents of PCGR object to various output formats (Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_tsv","text":"","code":"write_report_tsv(report = NULL, output_type = \"snv_indel\")"},{"path":"https://sigven.github.io/pcgr/reference/write_report_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that writes contents of PCGR object to various output formats (Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_tsv","text":"report List object report data, settings etc. output_type character indicating output type TSV, .e. 'snv_indel' 'cna_gene', 'msigs'","code":""},{"path":"https://sigven.github.io/pcgr/reference/write_report_tsv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function that writes contents of PCGR object to various output formats (Rmarkdown/flexdashboard HTML reports, JSON, tab-separated etc) — write_report_tsv","text":"export Function writes contents PCGR object flexdashboard HTML reports param report List object report data, settings etc. export Function writes contents PCGR object TSV file","code":""}]
