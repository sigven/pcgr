version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dgg_rules}
      POSTGRES_USER: ${POSTGRES_USER:-dgg_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dgg_user} -d ${POSTGRES_DB:-dgg_rules}"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build: .
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-dgg_user}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-dgg_rules}
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./resources:/app/resources:ro
    command: >
      sh -c "
        echo 'Running ETL pipeline...' &&
        python etl/build_reportable.py &&
        echo 'Starting API server...' &&
        uvicorn api.main:app --host 0.0.0.0 --port 8000
      "

  demo:
    build: .
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-dgg_user}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-dgg_rules}
      PYTHONPATH: /app
    ports:
      - "8501:8501"
    depends_on:
      - api
    command: streamlit run demo_ui.py --server.port=8501 --server.address=0.0.0.0

volumes:
  postgres_data:
