## Tumor mutational burden (TMB)

PCGR estimates TMB in three different ways, depending on the type of variants to include in the calculation (specifically abbreviated as __coding_non_silent__, __coding_and_silent__, and __missense_only__, see details outlined in the [Documentation](#documentation)). Only results from one of these methods are highlighted here, as configured by the user. 

```{r tmb_var_filtering}
#| echo: false
#| eval: !expr (pcg_report$settings$conf$sample_properties$vaf_tumor_detected | pcg_report$settings$conf$sample_properties$dp_tumor_detected) == TRUE
#| output: asis

cat("For TMB calculation, requirements for sequencing depth and variant allele frequency (VAF) have been applied to filter out low-quality variants\n\n")

if (pcg_report$settings$conf$sample_properties$dp_tumor_detected){
  m <- paste0("*    Minimum sequencing depth applied for TMB calculation: <b>", pcg_report$settings$conf$somatic_snv$tmb$tmb_dp_min, "</b>")
  cat(m,"\n")
}
if (pcg_report$settings$conf$sample_properties$vaf_tumor_detected){
  m <- paste0("*    Minimum VAF applied for TMB calculation: <b>", pcg_report$settings$conf$somatic_snv$tmb$tmb_af_min, "</b>")
  cat(m,"\n")
}
```

<br>

```{r key_tmb_stats}
#| echo: false
#| output: asis

tmb_estimate <-
  pcg_report$content$tmb$sample_estimate |>
  dplyr::filter(
    tmb_measure == paste0(
      "TMB_",
      pcg_report$settings$conf$somatic_snv$tmb$tmb_display))

algo <- "Missense only"
if(pcg_report$settings$conf$somatic_snv$tmb$tmb_display == "coding_and_silent"){
  algo <- "Coding and silent"
}
if(pcg_report$settings$conf$somatic_snv$tmb$tmb_display == "coding_non_silent"){
  algo <- "Coding non-silent"
}

    
bslib::page_fillable(
  bslib::layout_columns(
    col_widths = c(4,4,4),
    height = "130px",
    bslib::value_box(
      title = "TMB estimate",
      value = paste(
        round(tmb_estimate$tmb_estimate, 
              digits = 2), tmb_estimate$tmb_unit),
      showcase = NULL,
      theme = "dark"
    ),
    bslib::value_box(
      title = "TMB algorithm",
      value = algo,
      showcase = NULL,
      theme = "dark"
    ),
    bslib::value_box(
      title = "Effective target size",
      value = paste(
        pcg_report$settings$conf$assay_properties$effective_target_size_mb, "Mb"),
      showcase = NULL,
      theme = "dark"
    )
  )
)

```

<br>

The plot below indicates how the mutational burden estimated for the query tumor sample (dotted line) compares with reference distributions of other tumor samples (The Cancer Genome Atlas (TCGA)).

::: {.callout-note collapse="true"}

## Note - TMB reference comparison

Be aware of the nature of the _reference dataset_ (TCGA), which must be taken into account during TMB interpretation of the query sample:

* The TCGA tumor samples are sequenced with a mean coverage of approximately 100X
* The TCGA somatic mutation calls are based on a consensus among variant callers (each variant is supported by a minimum of two variant calling algorithms)
* The TCGA somatic mutation calls are based on paired tumor-control sequencing (tumor-only sequencing frequently produce higher numbers due to more noise)

:::

<br>

```{r tmb_reference_comparison_plot}

tmb_plot <- pcgrr::plot_tmb_primary_site_tcga(
  pcg_report$content$tmb$tmb_reference, 
  p_site = 
    pcg_report$settings$conf$sample_properties$site, 
  tmb_estimates = 
    pcg_report$content$tmb$sample_estimate,
  tmb_display_type = 
    pcg_report$settings$conf$somatic_snv$tmb$tmb_display,
  tumor_only = 
    as.logical(pcg_report$settings$conf$assay_properties$vcf_tumor_only))


bslib::card(
    full_screen = TRUE,
    height = "850px",
    bslib::card_header(
      class = "bg-dark", 
      paste0("TMB reference cohorts comparison - ",
             pcg_report$settings$sample_id)),
    plotly::ggplotly(tmb_plot)
  )
```
