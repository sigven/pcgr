
### Tumor-only filtering statistics

```{r tumor_only, echo=F, results='asis'}

cat('Germline variant filter settings:\n')
htmltools::br()
htmltools::br()
cat('<ul>')
cat(paste0('<li>Exclude 1000 Genomes Project variants (global): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_onekg_global),'</li></b>\n')
cat(paste0('<li>Exclude 1000 Genomes Project variants (EUR): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_onekg_eur),'</li></b>\n')
cat(paste0('<li>Exclude 1000 Genomes Project variants (AMR): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_onekg_amr),'</li></b>\n')
cat(paste0('<li>Exclude 1000 Genomes Project variants (AFR): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_onekg_afr),'</li></b>\n')
cat(paste0('<li>Exclude 1000 Genomes Project variants (EAS): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_onekg_eas),'</li></b>\n')
cat(paste0('<li>Exclude 1000 Genomes Project variants (SAS): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_onekg_sas),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (global): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_global),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (NFE): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_nfe),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (AMR): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_amr),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (AFR): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_afr),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (EAS): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_eas),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (SAS): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_sas),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (FIN): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_fin),'</li></b>\n')
cat(paste0('<li>Exclude gnomAD variants (OTH): MAF >= <b>',pcg_report$metadata$config$tumor_only$maf_gnomad_oth),'</li></b>\n')
cat(paste0('<li>Exclude ClinVar variants (germline)</li>\n'))
cat(paste0('<li>Exclude non-somatically associated dbSNP variants: <b>',pcg_report$metadata$config$tumor_only$exclude_dbsnp_nonsomatic),'</li></b>\n')
cat(paste0('<li>Exclude variants found in panel of normals: <b>',pcg_report$metadata$config$tumor_only$exclude_pon),'</li></b>\n')
cat(paste0('<li>Exclude likely homozygous germline variants (based on allelic fraction): <b>',pcg_report$metadata$config$tumor_only$exclude_likely_hom_germline),'</li></b>\n')
cat(paste0('<li>Exclude likely heterozygous germline variants (based on allelic fraction): <b>',pcg_report$metadata$config$tumor_only$exclude_likely_het_germline),'</li></b>\n')
cat(paste0('<li>Exclude non-exonic variants: <b>',pcg_report$metadata$config$tumor_only$exclude_nonexonic),'</li></b>\n')
cat('</ul>')

htmltools::br()


cat('Total number of (unfiltered, non-rejected) calls: <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['unfiltered_n']],'</b><br>')

cat('Number of calls remaining after successive filtering steps:<br>')
htmltools::br()
cat('<ol>')
cat('<li>Exclusion of variants found in 1000 Genomes Project: <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['onekg_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['onekg_frac_remain']],' % of unfiltered calls)</li>\n')

cat('<li>Exclusion of additional variants found in the Genome Aggregation Database (gnomAD): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['gnomad_n_remain']],'</b> 
    (',pcg_report[['content']][['tumor_only']][['v_stat']][['gnomad_frac_remain']],' % of unfiltered calls)</li>\n')

cat('<li>Exclusion of additional variants found in ClinVar (germline variant-of-origin)): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['clinvar_n_remain']],'</b> 
    (',pcg_report[['content']][['tumor_only']][['v_stat']][['clinvar_frac_remain']],' % of unfiltered calls)</li>\n')

if(pcg_report$metadata$config$tumor_only$exclude_pon == TRUE){
  cat('<li>Exclusion of additional variants found in panel of normals (PON): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['pon_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['pon_frac_remain']],' % of unfiltered calls)</li>\n')
}

if(pcg_report$metadata$config$tumor_only$exclude_likely_hom_germline == TRUE){
  cat('<li>Exclusion of additional likely homozygous germline variants - based on allelic fraction (FILTER = ON): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['hom_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['hom_frac_remain']],' % of unfiltered calls)</li>\n')
}
if(pcg_report$metadata$config$tumor_only$exclude_likely_hom_germline == FALSE){
  cat('<li>Exclusion of additional likely homozygous germline variants - based on allelic fraction  (FILTER = OFF): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['hom_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['hom_frac_remain']],' % of unfiltered calls)</li>\n')
}

if(pcg_report$metadata$config$tumor_only$exclude_likely_het_germline == TRUE){
  cat('<li>Exclusion of additional likely heterozygous germline variants - based on allelic fraction ++ (FILTER = ON): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['het_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['het_frac_remain']],' % of unfiltered calls)</li>\n')
}
if(pcg_report$metadata$config$tumor_only$exclude_likely_het_germline == FALSE){
  cat('<li>Exclusion of additional likely heterozygous germline variants - based on allelic fraction ++ (FILTER = OFF): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['het_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['het_frac_remain']],' % of unfiltered calls)</li>\n')
}

if(pcg_report$metadata$config$tumor_only$exclude_dbsnp_nonsomatic == TRUE){
  cat('<li>Exclusion of additional non-somatically associated dbSNP variants (FILTER = ON): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['dbsnp_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['dbsnp_frac_remain']],' % of unfiltered calls)</li>\n')
}
if(pcg_report$metadata$config$tumor_only$exclude_dbsnp_nonsomatic == FALSE){
  cat('<li>Exclusion of additional non-somatically associated dbSNP variants (FILTER = OFF): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['dbsnp_n_remain']],'</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['dbsnp_frac_remain']],' % of unfiltered calls)</li>\n')
}
if(pcg_report$metadata$config$tumor_only$exclude_nonexonic == TRUE){
  cat('<li>Exclusion of non-exonic variants (FILTER = ON): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['nonexonic_n_remain']], '</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['nonexonic_frac_remain']],' % of unfiltered calls)</li>\n')
}
if(pcg_report$metadata$config$tumor_only$exclude_nonexonic == FALSE){
  cat('<li>Exclusion of non-exonic variants (FILTER = OFF): <b>',pcg_report[['content']][['tumor_only']][['v_stat']][['nonexonic_n_remain']], '</b> (',pcg_report[['content']][['tumor_only']][['v_stat']][['nonexonic_frac_remain']],' % of unfiltered calls)</li>\n')
}

cat('</ol>')
```
<br>

```{r tumor_only_upset_title, echo = F, results='asis', eval=pcg_report[['content']][['tumor_only']][['upset_plot_valid']]}
cat('<h4>Intersection of query with germline indicators - UpSet plot</h4>',sep="\n\n")
cat('The plot below indicates, through an <a href=\'http://gehlenborglab.org/research/projects/upsetr\' target=\'_blank\'>UpSet plot</a>, the prevalence of the most prominent intersections for different sources of germline indicators in the query sample:')
```


<br><br>
```{r tumor_only_upset, echo = F, fig.width=10, fig.height=8, eval=pcg_report[['content']][['tumor_only']][['upset_plot_valid']]}
upset_plot <- pcgrr::upset_plot_tumor_only(pcg_report[['content']][['tumor_only']][['upset_data']])
upset_plot
htmltools::br()
```

<br>

```{r tumor_only_NOTE, echo = F, results='asis', eval=T}
htmltools::br()
cat('<h4>IMPORTANT NOTE: All SNV/InDel analyses below are considering the filtered callset only, n =',pcg_report[['content']][['tumor_only']][['v_stat']][['nonexonic_n_remain']],'</h4>')
htmltools::br()
```
